[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Duke is a **Command Line Interface** (CLI) app which allows you to store different tasks. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Designed for *fast* users, Duke allows you to quickly **store**, **find**, and **mark** "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "your tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Quick Start](#quick-start)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\t* [Print help information:](#print-help-information-help) **help**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [List out all existing task:](#list-out-all-existing-task-list) **list**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Add a new ToDo task](#add-a-new-todo-task-todo) **todo**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Add a new Deadline task:](#add-a-new-deadline-task-deadline) **deadline**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Add a new Event task:](#add-a-new-event-task-event) **event**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Mark a task as done:](#mark-a-task-as-done-done) **done**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Delete a task:](#delete-a-task-delete) **delete**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Find tasks using keyword:](#find-tasks-using-keyword-find) **find**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [List all tasks before a certain date:](#list-all-tasks-before-a-certain-date-before) **before**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [List all tasks after a certain date:](#list-all-tasks-after-a-certain-date-after) **after**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [List all tasks occuring today:](#list-all-tasks-occurring-today-today) **today**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Exit the Duke program:](#exit-the-duke-program-bye) **bye**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Saving the data:](#saving-the-data) "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Loading the data:](#loading-the-data) "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "1. Ensure you have **Java 11** or above installed in your Computer. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "2. Download the latest version of the app [here](https://github.com/Speedweener/ip/releases \"duke.jar\"). \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "3. Move the **duke.jar** file into your desired home folder for Duke. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "4. Copy the absolute path of the **duke.jar** file by first highlighting the file, then while"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "holding the \u003ckbd\u003eShift\u003c/kbd\u003e key, right click the file and select \"Copy as path\". \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "5. Start Command Prompt by pressing \u003ckbd\u003eWindows\u003c/kbd\u003e + \u003ckbd\u003eR\u003c/kbd\u003e ,  keying in \"cmd\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "then pressing \u003ckbd\u003eEnter\u003c/kbd\u003e. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "6. In the Command Prompt, type in \"java -jar\", then paste in the copied absolute path. It should look something like the picture below:  ![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/javacommand.PNG)\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "7. Press \u003ckbd\u003eEnter\u003c/kbd\u003e. You should see this Duke logo.  \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "```bat"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## ______       _"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## |  _  \\     | |"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## | | | |_   _| | _____"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## | |/ /| |_| |   \u003c  __/"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## |___/  \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "8. The app is now ready to go! Go ahead and test it out with a **help** command. The app should print out a list of different"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " commands. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "9. Refer to the section below for the different features of the Duke app."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Notes on command format:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e-   Word contained in brackets \u003c\u003e are parameters to be supplied by the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003eeg. in `todo \u003cdescription\u003e`, description is a parameter which the user should supply."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e-   Word in *italics*  refer to the different types of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e*ToDo*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e*Deadline*"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e*Event*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Print help information: `help`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Prints out all the commands available in the app."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: help "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### List out all existing task: `list` "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "List out all task currently existing in the list. Tasks are indexed according to the order in which the tasks were added to the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Add a new ToDo task: `todo`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Adds a new *ToDo* task to the list with a task description."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: todo \u003cdescription\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `todo assignment`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `todo project research`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Add a new Deadline task: `deadline`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Adds a new *Deadline* task to the list with a task description and a date and time."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Date and time entered must follow format accordingly."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: deadline \u003cdescription\u003e /by \u003cyyyyMMdd HHmm\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `deadline assignment /by 20200609 1800`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `deadline project research /by 20191231 2359 `"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Add a new Event task: `event`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Adds a new *Event* task to the list with a task description and a date and time."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Date and time entered must follow format accordingly."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: event \u003cdescription\u003e /at \u003cyyyyMMdd HHmm\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `event birthday party /at 20200609 1700`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `event End-of-year celebration /at 20191231 2359 `"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Mark a task as done: `done`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Marks a task with the specified index as done.  The index will correspond to the index of that task in the list. You can do a `list` command to check the task indexes."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: done \u003cindex\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `done 3`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `done 1 `"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Delete a task: `delete`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Deletes a task with the specified index.  The index will correspond to the index of that task in the list. You can do a `list` command to check the task indexes."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: delete \u003cindex\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `delete 5`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `delete 2 `"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Find tasks using keyword: `find`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Searches the task list and lists out the tasks which have descriptions"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "containing the keyword."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `find party`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `find -of-`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### List all tasks before a certain date: `before`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Filters the task list and lists out tasks which happen before the given date and time."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Date and time entered must follow format accordingly."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: before \u003cyyyyMMdd HHmm\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `before 20200105 2359`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `before 20191115 1200`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### List all tasks after a certain date: `after`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Filters the task list and lists out tasks which happen after the given date and time."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Date and time entered must follow format accordingly."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: after \u003cyyyyMMdd HHmm\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `after 20181205 2159`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `after 19801112 1100`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### List all tasks occurring today: `today`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Filters the task list and lists out tasks which happen on the current day."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: today"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Exit the Duke program: `bye`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: bye"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e     "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Saving the data:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Saving of the task list data is done automatically into your hard disk. The list will be saved as **list .txt**  in the **data** folder located in your home folder."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Loading the data:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Loading of the task list data is also done automatically. The **list .txt** file in the **data** folder will be read and loaded when you first start the app. If the **list .txt** does not exist when you start the app, a new empty **list .txt** file will be created."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "1. **Q**: \"How do I transfer my data to another Computer?\"\u003cbr/\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**A** : Copy the **data** folder and paste it to the home folder of the new Computer containing the **duke.jar** file."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "1. **Q**: \"What happens to my data if I close the app halfway?\"\u003cbr/\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**A** : The data in your task list is saved each time you edit the task list. Hence, your task list will retain your most updated changes to your task list."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**help**|`help`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**list**|`list`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**todo**|`todo \u003cdescription\u003e` \u003cbr\u003eexample: `todo homework`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**deadline**|`deadline \u003cdescription\u003e /by \u003cyyyyMMdd HHmm\u003e` \u003cbr\u003eexample: `deadline assignment /by 20201002 2359`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**event**|`event \u003cdescription\u003e /at \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `event birthday /at 20210903 1200`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**done**|`done \u003cindex\u003e` \u003cbr\u003eexample: `done 2`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**delete**|`delete \u003cindex\u003e` \u003cbr\u003eexample: `delete 3`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**find**|`find \u003ckeyword\u003e`\u003cbr\u003eexample: `find work`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**before**|`before  \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `before 20210909 1159`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**after**|`after \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `after 19990101 0100`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**today**|`today`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**exit**|`bye`"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 178,
      "-": 4
    }
  },
  {
    "path": "data/list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "T | 0 | wje"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "D | 1 | w | 20190202 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "E | 0 | jsbjd | 20201111 1111"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "T | 0 | is this real or not"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "D | 0 | real shit | 20190202 1200"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Duke is a **Command Line Interface** (CLI) app which allows you to store different tasks. "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Designed for *fast* users, Duke allows you to quickly **store**, **find**, and **mark** "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "your tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Quick Start](#quick-start)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Print help information:](#help) **help**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [List out all existing task:](#list) **list**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Add a new ToDo task](#todo) **todo**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Add a new Deadline task:](#deadline) **deadline**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Add a new Event task:](#event) **event**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Mark a task as done:](#done) **done**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Delete a task:](#delete) **delete**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Find tasks using keyword:](#find) **find**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [List all tasks before a certain date:](#before) **before**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [List all tasks after a certain date:](#after) **after**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [List all tasks occuring today:](#today) **today**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Exit the Duke program:](#bye) **bye**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Saving the data:](#saving-the-data) "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    * [Loading the data:](#loading-the-data) "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "1. Ensure you have **Java 11** or above installed in your Computer. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "2. Download the latest version of the app [here](https://github.com/Speedweener/ip/releases \"duke.jar\"). \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "3. Move the **duke.jar** file into your desired home folder for Duke. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "4. Copy the absolute path of the **duke.jar** file by first highlighting the file, then while"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "holding the \u003ckbd\u003eShift\u003c/kbd\u003e key, right click the file and select \"Copy as path\". \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "5. Start Command Prompt by pressing \u003ckbd\u003eWindows\u003c/kbd\u003e + \u003ckbd\u003eR\u003c/kbd\u003e ,  keying in \"cmd\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "then pressing \u003ckbd\u003eEnter\u003c/kbd\u003e. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "6. In the Command Prompt, type in \"java -jar\", then paste in the copied absolute path. It should look something like the picture below:  ![](https://raw.githubusercontent.com/Speedweener/ip/master/docs/images/javacommand.PNG)\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "7. Press \u003ckbd\u003eEnter\u003c/kbd\u003e. You should see this Duke logo.  \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "```bat"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## ______       _"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## |  _  \\     | |"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## | | | |_   _| | _____"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## | |/ /| |_| |   \u003c  __/"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " ## |___/  \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "8. The app is now ready to go! Go ahead and test it out with a **help** command. The app should print out a list of different"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": " commands. \u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "9. Refer to the section below for the different features of the Duke app."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Notes on command format:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e-   Word contained in brackets \u003c\u003e are parameters to be supplied by the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003eeg. in `todo \u003cdescription\u003e`, description is a parameter which the user should supply."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e-   Word in *italics*  refer to the different types of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e*ToDo*"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e*Deadline*"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003e*Event*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"help\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Print help information: `help`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Prints out all the commands available in the app."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: help "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"list\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### List out all existing task: `list` "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "List out all task currently existing in the list. Tasks are indexed according to the order in which the tasks were added to the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"todo\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Add a new ToDo task: `todo`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Adds a new *ToDo* task to the list with a task description."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: todo \u003cdescription\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `todo assignment`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `todo project research`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Add a new Deadline task: `deadline`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Adds a new *Deadline* task to the list with a task description and a date and time."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Date and time entered must follow format accordingly."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: deadline \u003cdescription\u003e /by \u003cyyyyMMdd HHmm\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `deadline assignment /by 20200609 1800`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `deadline project research /by 20191231 2359 `"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"event\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Add a new Event task: `event`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Adds a new *Event* task to the list with a task description and a date and time."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Date and time entered must follow format accordingly."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: event \u003cdescription\u003e /at \u003cyyyyMMdd HHmm\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `event birthday party /at 20200609 1700`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `event End-of-year celebration /at 20191231 2359 `"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"done\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Mark a task as done: `done`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Marks a task with the specified index as done.  The index will correspond to the index of that task in the list. You can do a `list` command to check the task indexes."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: done \u003cindex\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `done 3`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `done 1 `"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"delete\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Delete a task: `delete`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Deletes a task with the specified index.  The index will correspond to the index of that task in the list. You can do a `list` command to check the task indexes."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: delete \u003cindex\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `delete 5`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `delete 2 `"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"find\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Find tasks using keyword: `find`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Searches the task list and lists out the tasks which have descriptions"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "containing the keyword."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `find party`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `find -of-`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"before\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### List all tasks before a certain date: `before`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Filters the task list and lists out tasks which happen before the given date and time."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Date and time entered must follow format accordingly."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: before \u003cyyyyMMdd HHmm\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `before 20200105 2359`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `before 20191115 1200`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"after\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### List all tasks after a certain date: `after`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Filters the task list and lists out tasks which happen after the given date and time."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Date and time entered must follow format accordingly."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: after \u003cyyyyMMdd HHmm\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `after 20181205 2159`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "* `after 19801112 1100`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"today\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### List all tasks occurring today: `today`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Filters the task list and lists out tasks which happen on the current day."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: today"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003ca name\u003d\"bye\"\u003e\u003c/a\u003e  "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Exit the Duke program: `bye`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    Format: bye"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e     "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Saving the data: "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Saving of the task list data is done automatically into your hard disk. The list will be saved as **list .txt**  in the **data** folder located in your home folder."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "### Loading the data:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "Loading of the task list data is also done automatically. The **list .txt** file in the **data** folder will be read and loaded when you first start the app. If the **list .txt** does not exist when you start the app, a new empty **list .txt** file will be created."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "1. **Q**: \"How do I transfer my data to another Computer?\"\u003cbr/\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**A** : Copy the **data** folder and paste it to the home folder of the new Computer containing the **duke.jar** file."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "1. **Q**: \"What happens to my data if I close the app halfway?\"\u003cbr/\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**A** : The data in your task list is saved each time you edit the task list. Hence, your task list will retain your most updated changes to your task list."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**help**|`help`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**list**|`list`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**todo**|`todo \u003cdescription\u003e` \u003cbr\u003eexample: `todo homework`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**deadline**|`deadline \u003cdescription\u003e /by \u003cyyyyMMdd HHmm\u003e` \u003cbr\u003eexample: `deadline assignment /by 20201002 2359`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**event**|`event \u003cdescription\u003e /at \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `event birthday /at 20210903 1200`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**done**|`done \u003cindex\u003e` \u003cbr\u003eexample: `done 2`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**delete**|`delete \u003cindex\u003e` \u003cbr\u003eexample: `delete 3`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**find**|`find \u003ckeyword\u003e`\u003cbr\u003eexample: `find work`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**before**|`before  \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `before 20210909 1159`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**after**|`after \u003cyyyyMMdd HHmm\u003e`\u003cbr\u003eexample: `after 19990101 0100`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**today**|`today`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "**exit**|`bye`"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 188,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.exceptions.EmptyCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.exceptions.IncompleteCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.commands.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private TaskHelper taskHelper;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Initializes a new Ui, Storage and TaskHelper object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Storage object is initialized with input String as the file path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Performs a \"list\" method to display tasks already in the txt file from the file path"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        storage \u003d new Storage(getJarFilepath()+filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        taskHelper \u003d new TaskHelper(storage.readFromFile(ui));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printList(taskHelper.list());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Takes in user input, deciphers and executes the command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Method continues until exit condition isExit is true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * isExit is true when user inputs the exit Command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                c.execute(taskHelper, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                isExit \u003d ExitCommand.isExit(c);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } catch (EmptyCommandException | IncompleteCommandException | UnknownCommandException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                ui.printToUser(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        new Duke(\"/data/list.txt\").run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns path of jar file during execution to allow"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * app to create txt file in the same location."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static String getJarFilepath() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return new File(Duke.class.getProtectionDomain().getCodeSource().getLocation().getPath()).getParent().replace(\"%20\", \" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 64,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/AfterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.DateTimeValidator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class AfterCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public AfterCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!DateTimeValidator.isValid(description)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            ui.printToUser(Messages.MESSAGE_INVALID_DATETIME);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printFiltered(taskHelper.filterAfter(DateTimeValidator.stringToDateTime(description)),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                \"come after your specified date and time: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/BeforeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.DateTimeValidator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class BeforeCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public BeforeCommand(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (!DateTimeValidator.isValid(description)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            ui.printToUser(Messages.MESSAGE_INVALID_DATETIME);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printFiltered(taskHelper.filterBefore(DateTimeValidator.stringToDateTime(description)),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                \"come before your specified date and time: \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 24
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    protected TaskHelper taskHelper;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Command(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * This method performs different actions according to the type of command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Inputs are for the method to interact with a certain TaskHelper, Ui and Storage object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public abstract void execute(TaskHelper taskHelper, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class DeadlineCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public DeadlineCommand(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printToUser(taskHelper.deadline(description, storage));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public DeleteCommand(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printToUser(taskHelper.delete(description, storage));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public DoneCommand(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printToUser(taskHelper.done(description, storage));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class EventCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public EventCommand(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printToUser(taskHelper.event(description, storage));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public ExitCommand(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return command instanceof ExitCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printFiltered(taskHelper.filterKeyword(description), \"match the keyword entered:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 18
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public HelpCommand(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public ListCommand(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printList(taskHelper.list());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 18
    }
  },
  {
    "path": "src/main/java/duke/commands/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.exceptions.IncompleteCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Empty string variable to store detais of the users commands*/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static String details \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Deciphers the input string and initializes and returns the corresponding"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Command with the details ."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @throws IncompleteCommandException If command is valid and details are incomplete"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @throws UnknownCommandException If command is invalid"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static Command parse(String userInput) throws IncompleteCommandException, UnknownCommandException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        //Split command into 2 separate strings \"command\" and \"details\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        int charIndex \u003d userInput.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (charIndex \u003d\u003d -1) { // Catch for single word input eg \"list\" or incomplete command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (validCommand(command)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                throw new IncompleteCommandException(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            command \u003d userInput.substring(0, charIndex).trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            details \u003d userInput.substring(charIndex + 1).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new ListCommand(details);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new HelpCommand(details);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new DoneCommand(details);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new TodoCommand(details);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new DeadlineCommand(details);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new EventCommand(details);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"before\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new BeforeCommand(details);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"after\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new AfterCommand(details);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"today\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new TodayCommand(details);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new DeleteCommand(details);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new FindCommand(details);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return new ExitCommand(details);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new UnknownCommandException(command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns true if command is a valid command"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Compares input String with each valid non single word command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns false otherwise"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static boolean validCommand(String command) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                || command.equals(\"find\") || command.equals(\"before\") || command.equals(\"after\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                || command.equals(\"delete\") || command.equals(\"done\")  ;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 74
    }
  },
  {
    "path": "src/main/java/duke/commands/TodayCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class TodayCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public TodayCommand(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printFiltered(taskHelper.filterToday(), \"come today:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.tasks.TaskHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void execute(TaskHelper taskHelper, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printToUser(taskHelper.todo(description, storage));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 18
    }
  },
  {
    "path": "src/main/java/duke/common/DateTimeValidator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class DateTimeValidator {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Chosen format for date and time. Date and time input must follow this format */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"yyyyMMdd HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns true if input string follows the format \"yyyyMMdd HHmm\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Else returns false"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static boolean isValid(String dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            LocalDateTime.parse(dateTime, f);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns LocalDateTime converted from input String according to the chosen format*/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static LocalDateTime stringToDateTime(String dateTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return LocalDateTime.parse(dateTime, f);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns String converted from LocalDateTime according to the chosen format*/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static String dateTimeExport(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return (dateTime.format(f));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns String in a more readable format to be printed for the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Format of returned String is \u003cday\u003e\u003cprefix\u003e of \u003cmonth\u003e \u003cyear\u003e \u003chour\u003e:\u003cminute\u003e\u003cam/pm\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static String dateTimeToPrint(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String prefix;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        switch (dateTime.getDayOfMonth()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case 21:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case 31: {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            prefix \u003d \"st\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case 22: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            prefix \u003d \"nd\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case 23: {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            prefix \u003d \"rd\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            prefix \u003d \"th\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        int hour \u003d dateTime.getHour();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        int minute \u003d dateTime.getMinute();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return (dateTime.getDayOfMonth() + prefix + \" of \" + dateTime.getMonth() + \" \" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                dateTime.getYear() + \" \" + (hour\u003e12 ? hour-12 : hour) + \":\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                (minute\u003c10 ? \"0\" + minute : minute ) + (hour\u003e11 ? \"pm\" : \"am\" ) );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 72
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static final String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String logo \u003d \"______       _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"|  _  \\\\     | |       \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"| | | |_   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            + \"| |/ /| |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            +\"|___/  \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Hello from\\n\" + logo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String MESSAGE_INVALID_DATETIME \u003d \"Date or time input is incorrect!\" +LS"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                                                         + \"Please use format \\\"yyyyMMdd HHmm\\\"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Messages for Exceptions*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String MESSAGE_IO_INITIALIZE_ERROR \u003d border + \"Unable to create list on your system!\" + LS"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                                     + \"List will not be remembered after the app is ended.\" + border;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String MESSAGE_IO_WRITE_ERROR \u003d \"Unable to save changes to local list: \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Existing list not found. Creating new list\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public static final String MESSAGE_NUMBER_FORMAT_EXCEPTION \u003d \"Details entered was not a number!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 29
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class EmptyCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public EmptyCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(\"Whoopsie Daisies!\" +System.lineSeparator() + \"Try again:\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class IncompleteCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "      public IncompleteCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "          super(\"Whoopsie Daisies! You have an empty description for \" + message +\"!\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "          +System.lineSeparator() + \"Try again\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "      }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(\"Whoopsie Daisies! You have entered an unknown command!\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + System.lineSeparator() + \"What the heck is \u0027\" + message + \"\u0027?\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 9
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.DateTimeValidator;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "      return (\"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        + String.format(\" (by: %s)\", DateTimeValidator.dateTimeToPrint(by)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String exportTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return \"D | \" + (isDone? 1:0) +\" | \" + description + \" | \" + DateTimeValidator.dateTimeExport(by);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.DateTimeValidator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return (\"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + String.format(\" (at: %s)\", DateTimeValidator.dateTimeToPrint(at)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String exportTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return  \"E | \" + (isDone? 1:0) + \" | \" + description + \" | \" + DateTimeValidator.dateTimeExport(at);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 36
    }
  },
  {
    "path": "src/main/java/duke/tasks/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.DateTimeValidator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Variables for reading and writing to txt file*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String fullFilePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Variables to create tasks from txt file*/"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int taskCount \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Costants to identify the different tasks in the txt file */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String TODO \u003d \"T\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final int TODO_LENGTH \u003d 3;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final int DEADLINE_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final String EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final int EVENT_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        f \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        fullFilePath \u003d f.getAbsolutePath();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Reads from txt file and returns an ArrayList\u003cTask\u003e accordingly"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Txt file is specified from the filePath input during initialization"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * If the txt file does not exist, method will attempt to create a new txt file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Alerts user if unable to create the txt file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Uses Ui class to print error messages"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile(Ui ui) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        ui.printToUser(\"Loading previous list on your system from: \" + System.lineSeparator() + fullFilePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Scanner s \u003d null; // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            ui.printToUser(Messages.MESSAGE_FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } catch (IOException a) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                ui.printToUser(Messages.MESSAGE_IO_INITIALIZE_ERROR);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            lineDecipher(s.nextLine(), tasks, ui);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Deciphers the lines from the txt file and adds the task to the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Checks for invalid tasks (No. of parts \u003c Task length)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Checks for invalid entries (Not a ToDo, Deadline or Event)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Uses DateTimeValidator class to make sure details are a valid date"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Uses Ui class to print error messages"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private void lineDecipher(String lineData, ArrayList\u003cTask\u003e tasks, Ui ui) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String[] parts \u003d lineData.split(\"\\\\|\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        switch (parts[0].trim()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (parts.length \u003c TODO_LENGTH) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                ui.printToUser(\"Invalid Todo task!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            tasks.add(new Todo(parts[TODO_LENGTH-1].trim()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (parts[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                tasks.get(taskCount).markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (parts.length \u003c DEADLINE_LENGTH) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                ui.printToUser(\"Invalid Deadline task!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (!DateTimeValidator.isValid(parts[DEADLINE_LENGTH-1].trim())) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                ui.printToUser(\"Invalid date/time for Deadline task!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            tasks.add(new Deadline(parts[DEADLINE_LENGTH-2].trim(), DateTimeValidator.stringToDateTime(parts[3].trim())));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (parts[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                tasks.get(taskCount).markAsDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (parts.length \u003c EVENT_LENGTH) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                ui.printToUser(\"Invalid Event task!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (!DateTimeValidator.isValid(parts[EVENT_LENGTH-1].trim())) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                ui.printToUser(\"Invalid date/time for Event task!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            tasks.add(new Event(parts[EVENT_LENGTH-2].trim(), DateTimeValidator.stringToDateTime(parts[3].trim())));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (parts[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                tasks.get(taskCount).markAsDone();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            ui.printToUser(\"INVALID TASK DETECTED!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void overwriteList(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fullFilePath);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        fw.write(listToString(tasks));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void appendList(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fullFilePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String listToString(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i\u003d0; i\u003ctaskCount; i++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            listString \u003d listString.concat(tasks.get(i).exportTask() + System.lineSeparator());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return listString;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 153
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Changes the isDone value of the task to true."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Returns false if isDone value was already true, else returns true"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Boolean markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if(this.isDone){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns the task in the list as a string for visualization to user */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns the string representation of the task for the txt file*/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public abstract String exportTask();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Getter for the date and time for a task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Since Todo does not store date and time, it returns null instead"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public abstract LocalDateTime getDateTime();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Getter for description for a task*/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public abstract String getDescription();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 46
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.DateTimeValidator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class TaskHelper {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** List of different tasks */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Number of tasks in the list*/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int taskCount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Index used to split up the details and dateTime*/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private int charIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public TaskHelper (ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Checks if input details is valid then deletes the task and returns the confirmation message"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Else returns the error messages"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * valid \u003d (Positive integer value not higher than taskCount)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String delete(String details, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return \"List is empty!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            taskNumber \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"Invalid \u0027delete\u0027 command!\" + LS + Messages.MESSAGE_NUMBER_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskNumber \u003c\u003d taskCount \u0026\u0026 !(taskNumber \u003c\u003d 0)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            String confirmMessage \u003d \"Noted. I\u0027ve removed this task:\" + LS"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                               + \"\\t\" + tasks.get(taskNumber - 1).toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            taskCount -\u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            confirmMessage +\u003d LS + \"Now you have \" + taskCount + \" tasks in the list.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                storage.overwriteList(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                confirmMessage +\u003d LS + Messages.MESSAGE_IO_WRITE_ERROR + e.getMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return confirmMessage;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return \"Invalid \\\"delete\\\" command!\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + LS + \"Only \" + taskCount + \" task are in the list!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Checks if input details is valid then marks the task as done and returns the confirmation message"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Else returns the error message"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * valid \u003d (Positive integer value not higher than taskCount and not marked before)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String done(String details, Storage storage) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"List is empty!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "             taskNumber \u003d Integer.parseInt(details);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"Invalid \u0027done\u0027 command!\" + LS + Messages.MESSAGE_NUMBER_FORMAT_EXCEPTION);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskNumber \u003c\u003d taskCount \u0026\u0026 !(taskNumber \u003c\u003d 0)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (tasks.get(taskNumber - 1).markAsDone()) { // Returns true if task has not been marked before"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                String confirmMessage \u003d \"Nice! I\u0027ve marked this task as done:\" + LS"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                                       + \"\\t\" + tasks.get(taskNumber - 1).toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    storage.overwriteList(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    confirmMessage +\u003d LS + Messages.MESSAGE_IO_WRITE_ERROR + e.getMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                return confirmMessage;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                return (\"Task has already been marked as done!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return \"Invalid \\\"done\\\" command!\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                   + LS + \"Only \" + taskCount + \" task have been added!\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Adds new Todo task and returns the confirmation message */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String todo(String details, Storage storage) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        tasks.add(new Todo(details));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String confirmMessage \u003d addText();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            storage.appendList(tasks.get(taskCount - 1).exportTask() + LS);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            confirmMessage \u003d confirmMessage + Messages.MESSAGE_IO_WRITE_ERROR + e.getMessage();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return confirmMessage;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Adds new Deadline task and returns the confirmation message */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String deadline(String details, Storage storage) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        /** Splits details into details and dateTime */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        charIndex \u003d details.indexOf(\"/by\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String dateTime;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (charIndex \u003d\u003d -1) { // Catch for invalid deadline command"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"INVALID. No \\\"/by\\\" in command\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + LS +\"Format is: \""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + LS + \"deadline {deadline name} /by {deadline yyyyMMdd HHmm}\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            dateTime \u003d details.substring(charIndex + 3).trim();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            details \u003d details.substring(0, charIndex).trim();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (dateTime.isEmpty() || details.isEmpty()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                return(\"Blank name or time for deadline! Please Retry:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        /** Verifies that dateTime is valid, else returns error message*/"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (DateTimeValidator.isValid(dateTime)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            tasks.add(new Deadline(details, DateTimeValidator.stringToDateTime(dateTime)));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            String confirmMessage \u003d addText();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                storage.appendList(tasks.get(taskCount - 1).exportTask() + LS);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                confirmMessage \u003d confirmMessage + LS + Messages.MESSAGE_IO_WRITE_ERROR  + e.getMessage();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return confirmMessage;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return Messages.MESSAGE_INVALID_DATETIME;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Adds new Event task and returns the confirmation message */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String event(String details, Storage storage) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        /** Splits details into details and dateTime */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        charIndex \u003d details.indexOf(\"/at\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String dateTime;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (charIndex \u003d\u003d -1) { // Catch for invalid event command"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"INVALID. No \\\"/at\\\" in command\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + LS +\"Format is: \""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + LS + \"event {event name} /at {event time}\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            dateTime \u003d details.substring(charIndex + 3).trim();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            details \u003d details.substring(0, charIndex).trim();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (dateTime.isEmpty() || details.isEmpty()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                return(\"Blank name or time for event! Please Retry:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        /** Verifies that dateTime is valid, else returns error message*/"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (DateTimeValidator.isValid(dateTime)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            tasks.add(new Event(details, DateTimeValidator.stringToDateTime(dateTime)));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            String confirmMessage \u003d addText();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                storage.appendList(tasks.get(taskCount - 1).exportTask() + LS);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                confirmMessage \u003d confirmMessage + LS + Messages.MESSAGE_IO_WRITE_ERROR  + e.getMessage();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return confirmMessage;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return Messages.MESSAGE_INVALID_DATETIME;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns text to be printed when adding a new task  */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private String addText() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return(\"Got it. I\u0027ve added this task:\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + LS + \"\\t\" + tasks.get(taskCount - 1).toString()"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                + LS + \"Now you have \" + taskCount +"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                (taskCount \u003c\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns the entire list */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"Empty List\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "           list +\u003d (i + 1) + \".\" + tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns the task in the list before the input date */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String filterBefore(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"Empty List\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (tasks.get(i).getDateTime()!\u003dnull) { //Filters out Todo which returns a null value"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                if (tasks.get(i).getDateTime().isBefore(dateTime)) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    list +\u003d (i + 1) + \".\" + tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if(list.isEmpty()) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            list \u003d \"No tasks come before the given date and time!\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns the task in the list after the input date */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String filterAfter(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"Empty List\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (tasks.get(i).getDateTime()!\u003dnull) { //Filters out Todo which returns a null value"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                if (tasks.get(i).getDateTime().isAfter(dateTime)) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    list +\u003d (i + 1) + \".\" + tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if(list.isEmpty()) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            list \u003d \"No tasks come after the given date and time!\";"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns the task in the list happening on the current date */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String filterToday() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"Empty List\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (tasks.get(i).getDateTime()!\u003dnull) { //Filters out Todo which returns a null value"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                if (tasks.get(i).getDateTime().toLocalDate().isEqual(LocalDateTime.now().toLocalDate())) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    list +\u003d (i + 1) + \".\" + tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if(list.isEmpty()) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            list \u003d \"No tasks come one the given date!\";"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Returns the task in the list which contain the keyword in the task description */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String filterKeyword(String keyword) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            return (\"Empty List\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            if (tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                list +\u003d (i + 1) + \".\" + tasks.get(i).toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if(list.isEmpty()) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            list \u003d \"No tasks contain the specified keyword!\";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 284
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return (\"[T]\" + \"[\" + this.getStatusIcon() + \"] \" +this.description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String exportTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return  \"T | \" + (isDone? 1:0) + \" | \" + description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 31
    }
  },
  {
    "path": "src/main/java/duke/userinterface/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "package duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import duke.exceptions.EmptyCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Constants used for formatting purposes*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static final String LS  \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static final String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private static final String PREFIX \u003d \" ## \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** These methods print starting and end messages*/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printToUser(Messages.MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printToUser(Messages.MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Reads for user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * Prints PREFIX and \"Awaiting input: \" to signal to user to enter an input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     * @throws EmptyCommandException If user input is blank or only space characters"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public String readCommand() throws EmptyCommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.print(PREFIX + \"Awaiting input: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        String userInput \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        if(userInput.isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "            throw new EmptyCommandException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** TPrints all the available commands for Duke*/"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printToUser(\"Available commands are:\" + LS"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 01) list\" + LS"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 02) todo\" + LS"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 03) deadline\" + LS"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 04) event\" + LS"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 05) done\" + LS"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 06) delete\" + LS"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 07) find\" + LS"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 08) before\" + LS"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 09) after\" + LS"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 10) today\" + LS"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                +\" 11) bye\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Prints all the tasks in the task list*/"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void printList(String list) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printToUser(\"Here are the tasks in your list: \" + LS + list);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Prints a filtered list of tasks with a input condition*/"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void printFiltered(String list, String condition) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printToUser(\"Here are the tasks in your list that \" + condition"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "                    + LS + list);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Prints an additional exiting message to signal successful exiting from Duke*/"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void printExit(String ... list) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        printToUser(\"EXITING ... \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    /** Common printing method to output all messages with proper prefixes*/"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    public void printToUser(String message) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(PREFIX + border);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "        System.out.println(PREFIX + message.replace(\"\\n\", LS + PREFIX));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Speedweener"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 96
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Speedweener"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Speedweener": 1,
      "-": 20
    }
  }
]
