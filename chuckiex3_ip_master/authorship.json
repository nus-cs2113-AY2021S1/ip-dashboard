[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "-": 24
    }
  },
  {
    "path": "data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "D-x-coding-tonight"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "T-x-watch drama"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "E-x-yuxuan bday-6pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "T-x-watch youtube videos"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 4
    }
  },
  {
    "path": "src/data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "T-x-homework"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "D-x-coding-tonight"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "E-o-bday-6pm"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 3
    }
  },
  {
    "path": "src/main/data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "D-x-watch lecture video-8 oct"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "E-o-bday-5pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "T-x-watch movie"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static boolean notQuit \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static File filePath \u003d  new File (\"./data/taskList.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String fileDirectory \u003d (\"./data\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void run() throws Exception {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        storage \u003d new Storage(filePath, fileDirectory);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        storage.findSavedFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        while(notQuit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Parser.getUserCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 33
    }
  },
  {
    "path": "src/main/java/duke/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Handles saving function."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Saves the ArrayList\u003cTask\u003e into a .txt file which can be read when the program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * is loaded again."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Previously saved entries will be loaded into ArrayList\u003cTask\u003e from the .txt file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static File filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String fileDirectory;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Storage(File filePath, String fileDirectory) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.fileDirectory \u003d fileDirectory;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Creates a .txt file if no file can be found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Otherwise, load content that has been saved previously into the ArrayList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void findSavedFile() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            File folder \u003d new File(fileDirectory);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (folder.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"folder has been found\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"@\" + folder.getAbsolutePath());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                folder.mkdir();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tweewoo Toto has made a folder~\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (filePath.createNewFile()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"hehe Toto just made a new file for you! @ \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                        + filePath.getAbsolutePath() + \" :o3\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tToto found your saved file..\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Scanner s \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    Task savedTask \u003d TaskListDecoder.convertTextToTask(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    TaskList.numberOfTasks++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    TaskList.tasks.add(savedTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printSaveMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.print(\"file not found\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IOException i) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"error encountered when creating file...\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Saves the task list to a .txt file when user does the following:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * addDeadline, addEvent, addToDo, markAsDone."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param tasks the array list containing task inputs."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void saveToTaskList(ArrayList\u003cTask\u003e tasks, File fileName) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            FileWriter writer \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            for(Task t : tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String textToAdd \u003d TaskListEncoder.formatTaskForFile(t);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                writer.append(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"o0.0o Toto\u0027s done saving\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IndexOutOfBoundsException i) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tnothing in the list yet! o__o\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\terror encountered\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 93
    }
  },
  {
    "path": "src/main/java/duke/Storage/TaskListDecoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Decodes the saved file into an ArrayList of Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TaskListDecoder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Converts the data in the .txt file to Task type."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is a line in the .txt file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return task in the list so that it can be added into ArrayList\u003cTask\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static Task convertTextToTask(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String[] userInput \u003d input.split(\"-\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Task taskSaved;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String taskDescription \u003d userInput[2];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (userInput[0]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String time \u003d userInput[3];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskSaved \u003d new Deadline(taskDescription, time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                time \u003d userInput[3];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskSaved \u003d new Event(taskDescription, time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskSaved \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new Exception();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (userInput[1].equals(\"o\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskSaved.setAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return taskSaved;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        catch (Exception exception) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tinvalid entry\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 50
    }
  },
  {
    "path": "src/main/java/duke/Storage/TaskListEncoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Encodes TaskList data into a data file for storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TaskListEncoder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Formats the task to be printed in text file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param task task to be formatted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the string in the format for the .txt file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    static String formatTaskForFile(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String stringToPrint;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String doneSymbol \u003d (task.isDone() ? \"o\" : \"x\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            stringToPrint \u003d \"D-\" + doneSymbol + \"-\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((Deadline) task).getTaskDescription() + \"-\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((Deadline) task).getDueDate();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            stringToPrint \u003d \"E-\" + doneSymbol + \"-\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((Event) task).getTaskDescription() + \"-\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((Event) task).getTime();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else { //(task instanceof To-Do)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            stringToPrint \u003d \"T-\" + doneSymbol + \"-\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((ToDo) task).getTaskDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return stringToPrint;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 36
    }
  },
  {
    "path": "src/main/java/duke/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Contains all print messages required in Duke.java."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Prints out messages when called."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints out greeting from Toto upon execution."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String logo \u003d \"      /-\\\\    /-\\\\ \\n\" //6 spaces"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"     /  |_9_/  |\\n\" //5 spaces"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"    /,,o  3  o,,\\\\ \\n\"; //4 spaces"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tHullo I\u0027m Toto!\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tHow can Toto help today?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints the divider between user input and output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printDivider(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints bye message when user inputs \"bye\"."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printBye(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String logo \u003d \"      /-\\\\    /-\\\\ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"     /  |_9_/  |\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"    / TT  w  TT \\\\ \\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tToto will be lonely... :\u003c\\n\" + logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints save message after saving task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printSaveMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String logo \u003d \"      /-\\\\    /-\\\\ \\n\" //6 spaces"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"     /  |_9_/  |\\n\" //5 spaces"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"   p/,,\u003d  w  \u003d,,\\\\p \"; //4 spaces"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\twelcome back master! Toto has missed you~ \u003c3\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tToto has loaded your saved task list~\\n\" + logo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints message for the deleted task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Condition: 1 \u003c\u003d taskNum \u003c numberOfTasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param taskNum index of task according to the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printDeleteMessage(int taskNum) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\taaaah why though?\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(taskNum + \": \" + TaskList.tasks.get(taskNum-1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        TaskList.tasks.remove(taskNum-1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        TaskList.numberOfTasks--;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tnow you have \" + TaskList.numberOfTasks + \" task(s)\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints done message for the task marked as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Condition: 1 \u003c\u003d taskNum \u003c numberOfTasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param taskNum index of task according to the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printDoneMessage(int taskNum) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tToto is proud of you! \u003dw\u003d\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(taskNum + \": \" + TaskList.tasks.get(taskNum-1));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Message printed out when there are errors while executing user commands"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * for the methods markAsDone and deleteTask."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printInvalidNumberMessage() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tnot in Toto\u0027s database! oAo\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tplease give Toto a valid number... \u003e__\u003c\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Message printed out when user input is not a valid command"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * for invalid user inputs."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printErrorMessage() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String logo \u003d \"      /-\\\\    /-\\\\ \\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"     /  |_7_/  |\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"    / \u003d@  ~  @\u003d \\\\ \\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.print(\"\\tsorry, Toto did not get that...\\n\" + logo);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 107
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Adds deadline to the ArrayList of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * e.g. deadline [input] /by [time]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DukeException when there is no task description in the [input]."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TimeException when [time] is missing from [input]."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void addDeadline(String input) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            //splits the string into two parts, using \"/by\" as the divider"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPosition \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String by \u003d input.substring(dividerPosition + 3).trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String taskDescription \u003d input.substring(0, dividerPosition).trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            //checks if there is any missing information - by, taskDescription"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskDescription.isBlank()) { //if there is no task description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else if (by.isBlank()) { // if there is no [time] given"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TimeException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else { //if no problem with input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                TaskList.numberOfTasks++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                TaskList.tasks.add(new Deadline(taskDescription, by));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tToto added: \" + taskDescription);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(TaskList.numberOfTasks + \":\" + TaskList.tasks.get(TaskList.numberOfTasks - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tnow you have \" + TaskList.numberOfTasks + \" task(s)\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else { // when [time] parameter is missing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new TimeException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Adds an event to the ArrayList of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * e.g. event [input] /at [time]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DukeException when there is no task description in the [input]."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TimeException when [time] is missing from [input]."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void addEvent(String input) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            // splits the string into two parts, using \"/at\" as the divider"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPosition \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String time \u003d input.substring(dividerPosition + 3).trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String taskDescription \u003d input.substring(0, dividerPosition).trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            // checks if there is any missing information - time, taskDescription"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskDescription.isBlank()) { //if there is no task description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else if (time.isBlank()) { //if there is no [time] given"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TimeException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else { //if no problem with input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                TaskList.numberOfTasks++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                TaskList.tasks.add(new Event(taskDescription, time));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tToto added: \" + taskDescription);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(TaskList.numberOfTasks + \":\" + TaskList.tasks.get(TaskList.numberOfTasks - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tnow you have \" + TaskList.numberOfTasks + \" task(s)\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else { // when [time] parameter is missing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new TimeException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Adds to-do to the ArrayList of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * e.g. todo [input]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DukeException when task description is empty"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void addToDo(String input) throws Exception {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String taskDescription \u003d input.trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        //checks if there is a task description in [input]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (taskDescription.isBlank()) { //if there is no task description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else { //if no problem with the input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            TaskList.numberOfTasks++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            TaskList.tasks.add(new ToDo(taskDescription));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tToto added: \" + taskDescription.trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(TaskList.numberOfTasks + \":\" + TaskList.tasks.get(TaskList.numberOfTasks - 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tnow you have \" + TaskList.numberOfTasks + \" task(s)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 4
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Deletes task according to the index given by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Removes the task associated with taskNum."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Condition: taskNum \u003e\u003d 1."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void deleteTask(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input.trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskNum \u003e TaskList.numberOfTasks){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printInvalidNumberMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDeleteMessage(taskNum);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException n1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printInvalidNumberMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NumberFormatException n2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tyou need to tell Toto the task number! @~@\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Marks the task associated with taskNum as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Condition: taskNum \u003e\u003d 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void markAsDone(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input.trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            TaskList.tasks.get(taskNum - 1).setAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDoneMessage(taskNum);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException n1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printInvalidNumberMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NumberFormatException n2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tyou need to tell Toto the task number! @~@\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static duke.task.TaskList.tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Finds tasks containing a given set of keyword(s) specified by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    static int numberOfMatches;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Finds task(s) containing the user\u0027s given keyword(s)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param keyword Specified by user to find tasks associated with it."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void findMatch (String keyword){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        listMatches(getTaskMatches(keyword), keyword);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints out the tasks that match what the user is looking for with the given keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param matchedListOfTasks ArrayList\u003cTask\u003e that contains the task which match the keyword"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param keyword Used to find tasks. It is something the user is looking for in a task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void listMatches (ArrayList\u003cTask\u003e matchedListOfTasks, String keyword) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (numberOfMatches \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\txpx Toto could not find tasks with \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + \"\u0027\" + keyword + \"\u0027\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tToto has found \" + numberOfMatches + \" match(es)!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            for (int i \u003d 0; i \u003c numberOfMatches; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(i+1 + \":\" + matchedListOfTasks.get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Gets the task(s) which has/have the user\u0027s given keyword(s)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the keyword given by the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return an ArrayList\u003cTask\u003e containing all the task(s) that contain(s) the keyword."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static ArrayList\u003cTask\u003e getTaskMatches(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        numberOfMatches \u003d 0; //reset the number of matches every time"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (t.getTaskDescription().contains(input)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                matchedTaskList.add(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                numberOfMatches++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return matchedTaskList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 64
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints out everything in the ArrayList of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param tasks ArrayList of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void listTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (TaskList.numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tyour task list is empty\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            for (int j \u003d 0; j \u003c TaskList.numberOfTasks; j++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println((j + 1) + \": \" + tasks.get(j));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 28
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Thrown when user\u0027s input is missing a task description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/SaveFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Thrown when there is nothing to be saved into a file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class SaveFileException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Thrown when the time parameter is missing from the user\u0027s input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TimeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.AddEventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.AddToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.SaveFileException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Gets command(s) from the user and executes it(them) appropriately."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Available commands: list, done, deadline, event, todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DukeException     when task description is missing from [input]."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TimeException     when [time] is missing from [input]."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws SaveFileException when there are exceptions thrown when opening/saving file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void getUserCommand() throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String input \u003d Duke.in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String[] userInput \u003d input.trim().split(\" \", 2); // split input into command and arguments"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        final String commandWord \u003d userInput[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        final String argument \u003d input.replace(commandWord, \"\").trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printBye();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Duke.notQuit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                ListCommand.listTasks(TaskList.tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                DoneCommand.markAsDone(argument);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                if (TaskList.numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    throw new SaveFileException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                DeleteCommand.deleteTask(argument);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                AddDeadlineCommand.addDeadline(argument);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                AddEventCommand.addEvent(argument);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case AddToDoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                AddToDoCommand.addToDo(argument);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                FindCommand.findMatch(argument);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printErrorMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (DukeException d) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tno task description! :o\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (TimeException t) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tno time given! you don\u0027t have forever though...owo\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (SaveFileException s) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tencountered problems when saving!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 77
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        dueDate \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String tick \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return (isDone ? tick : cross); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 33
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Stores variables related to the tasks like"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * the ArrayList of tasks and the number of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 12
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "deadline homework /by 17 sep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "todo watch videos"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "event yuxuan\u0027s bday /at 12pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/commands/*.java ../src/main/java/duke/exceptions/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/commands/*.java ../src/main/java/duke/exceptions/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "-": 36
    }
  }
]
