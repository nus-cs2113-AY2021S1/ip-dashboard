[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "-": 24
    }
  },
  {
    "path": "data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "D-x-coding exercises-28/08/2020 1300"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "# Toto\u0027s User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "      /-\\    /-\\"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     /  |_!_/  |      Hullo I\u0027m Toto!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /@ O  v  O @\\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Navigation Panel"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "- [Setting Up](https://github.com/chuckiex3/ip/tree/master/docs#setting-up)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "- [Features](https://github.com/chuckiex3/ip/tree/master/docs#features)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Starting the program](https://github.com/chuckiex3/ip/tree/master/docs#starting-the-program)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Adding a `Deadline`](https://github.com/chuckiex3/ip/tree/master/docs#deadline)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Adding an `Event`](https://github.com/chuckiex3/ip/tree/master/docs#event)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Adding a `ToDo`](https://github.com/chuckiex3/ip/tree/master/docs#todo)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [`List` all available tasks](https://github.com/chuckiex3/ip/tree/master/docs#list)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Mark a task as `done`](https://github.com/chuckiex3/ip/tree/master/docs#done)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [`Delete` a task in the task list](https://github.com/chuckiex3/ip/tree/master/docs#delete)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [`Find` task(s) with a keyword](https://github.com/chuckiex3/ip/tree/master/docs#find)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [List tasks `on` a specific date](https://github.com/chuckiex3/ip/tree/master/docs#on)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    - [Say `bye` to Toto](https://github.com/chuckiex3/ip/tree/master/docs#bye)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "- [Summary of commands](https://github.com/chuckiex3/ip/tree/master/docs#summary)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1. Ensure that you have Java 11 installed in your computer. You can download it from [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "2. Download the ip.jar file into a folder."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "3. In your terminal, navigate to the folder before typing the following:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "      - `chcp 65001`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "      - `java -Dfile.encoding\u003dUTF-8 -jar ip.jar`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  **Example: ip.jar saved in Downloads**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  ![ip.jar in Downloads example](/images/howtocalljar.png)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  \u003e:exclamation: Please change the font in your terminal to NSimSun."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  \u003e\u003e 1. Right click on the top of your terminal and click on \u0027Properties\u0027 from the drop down menu."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  ![Right click on the terminal](/images/changefontonterminal.png)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  \u003e\u003e 2. Click on the \u0027Font\u0027 tab."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  \u003e\u003e 3. Scroll down and choose the font NSimSun."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "  ![Change font to NSimSun](/images/changetoNSimSun.png)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "4. Type in commands by referring to the next section, Features."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Toto allows you to save your tasks as `deadline`, `event` or `todo`. There are also commands like `list`, `done`, `find`, `on` and `bye`. Toto will also **automatically** `save` your tasks in a .txt file, every time you make changes to your task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e:exclamation: Words within [square brackets] are the expected user inputs."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Starting the program"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Displays a greeting from Toto."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### First run"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "For first time users, Toto will create a new folder and file to store your task list. Where the folder is created depends on where you\u0027ve downloaded the jar file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tHullo I\u0027m Toto!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "      /-\\    /-\\"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     /  |_9_/  |"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /,,o  3  o,,\\"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tHow can Toto help today?"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tweewoo Toto has made a folder~"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "hehe Toto just made a new file for you! @"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " C:\\Users\\Francene\\Documents\\SEM3\\ip\\.\\data\\taskList.txt :o3"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Subsequent runs"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tHullo I\u0027m Toto!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "      /-\\    /-\\"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     /  |_9_/  |"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /,,o  3  o,,\\"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tHow can Toto help today?"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "folder has been found"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "@C:\\Users\\Francene\\Documents\\SEM3\\ip\\.\\data"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tToto found your saved file.."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\twelcome back master! Toto has missed you~ \u003c3"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tToto has loaded your saved task list~"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "      /-\\    /-\\"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     /  |_9_/  |"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "   p/,,\u003d  w  \u003d,,\\p"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Deadline"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "A task which has to be done by a certain date and time."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`deadline [taskDescription] /by [dd/MM/yyyy] [hhmm]`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example: `deadline coding exercises /by 28/08/2020 1300`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `taskDescription`: name of the task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `dd/MM/yyyy`: the due date of the task, in the format day/month/year."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `hhmm`: time the task is due, in 24h format."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tToto added: coding exercises"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1:[D][✘] coding exercises (by: Aug 28 2020 01.00 PM)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\tnow you have 1 task(s)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "o0.0o Toto\u0027s done saving"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Event"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "A task that starts at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`event [taskDescription] /at [dd/MM/yyyy] [hhmm]`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example: `event birthday party /at 20/09/2020 1800`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `taskDescription`: name of the task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `dd/MM/yyyy`: the day of the event, in the format day/month/year."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `hhmm`: start time of the event, in 24h format."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Toto added: birthday party"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "2:[E][✘] birthday party (at: Sep 20 2020 06.00 PM)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        now you have 2 task(s)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "o0.0o Toto\u0027s done saving"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### ToDo"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "A task without any date/time attached to it."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`todo [taskDescription]`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example: `todo watch lecture videos`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* `taskDescription`: name of the task."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Toto added: watch lecture videos"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "3:[T][✘] watch lecture videos"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        now you have 3 task(s)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "o0.0o Toto\u0027s done saving"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### List"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Lists all the tasks in the task list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1: [D][✘] coding exercises (by: Aug 28 2020 01.00 PM)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "2: [E][✘] birthday party (at: Sep 20 2020 06.00 PM)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "3: [T][✘] watch lecture videos"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Marks a task as done."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`done [taskNumber]`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example: `done 2`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* taskNumber: index of the task on the task list."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e:exclamation: You may want to `list` before using the `done` command to ensure you\u0027re marking the correct task as done! :)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Toto is proud of you! \u003dw\u003d"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "2: [E][✓] birthday party (at: Sep 20 2020 06.00 PM)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Deletes a task from the task list."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`delete [taskNumber]`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example: `delete 3`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* taskNumber: index of the task on the task list."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e:exclamation: You may want to `list` before using the `delete` command so that you delete the task you have in mind! :)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        aaaah why though?"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "3: [T][✘] watch lecture videos"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        now you have 2 task(s)"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Finds tasks that match the `keyword` input by the user."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`find [keyword]`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example: `find birthday`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* keyword: word input by the user."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Toto has found 1 match(es)!"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1:[E][✓] birthday party (at: Sep 20 2020 06.00 PM)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### On"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Lists task(s), specifically `deadline`/`event`, that occur(s) on the date input by the user."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`on [dd/MM/yyyy]`"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Example: `on 20/09/2020`"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "* [dd/MM/yyyy]: date input by the user, in the format day/month/year."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "\u003e date input by the user has to follow the dd/MM/yyyy format!"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected outcome: `on 20/09/2020`"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "1: [E][✓] birthday party (at: Sep 20 2020 06.00 PM)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "If no tasks occur on the date specified, example: `on 29/09/2020`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        no tasks on 29/09/2020!"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "### Bye"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Quits the program."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Toto will be lonely... :\u003c"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "      /-\\    /-\\"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     /  |_9_/  |"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    / TT  w  TT \\"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "```"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "## Summary:"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "**Command** | **Format** | **Example**"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "----------- | ---------- | -----------"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`deadline` | deadline [taskDescription] /by [dd/MM/yyyy] [hhmm] | deadline coding exercises /by 28/08/2020 1300"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`event` | event [taskDescription] /at [dd/MM/yyyy hhmm] | event birthday party /at 20/09/2020 1800"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`todo` | todo [taskDescription] | todo watch lecture videos"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`list` | list | list"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`done` | done [taskNumber] | done 2"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`find` | find [keyword] | find watch"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`on` | on [dd/MM/yyyy] | on 20/09/2020"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "`bye` | bye | bye"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 268,
      "-": 15
    }
  },
  {
    "path": "src/main/data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "D-x-watch lecture video-8 oct"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "E-o-bday-5pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "T-x-watch movie"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Entry point of the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Initialises the application and starts the interaction with the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static boolean notQuit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static File filePath \u003d  new File (\"./data/taskList.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String fileDirectory \u003d (\"./data\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /** Runs the program until termination. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void run() throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        storage \u003d new Storage(filePath, fileDirectory);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        storage.findSavedFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        while(notQuit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Parser.parser();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 38
    }
  },
  {
    "path": "src/main/java/duke/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Represents the file used to store task list data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Previously saved entries will be loaded into ArrayList\u003cTask\u003e from the .txt file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static File filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static String fileDirectory;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Storage(File filePath, String fileDirectory) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.fileDirectory \u003d fileDirectory;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Creates a .txt file if no file can be found."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Otherwise, load content that has been saved previously into the ArrayList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void findSavedFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            File folder \u003d new File(fileDirectory);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (folder.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"folder has been found\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"@\" + folder.getAbsolutePath());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                folder.mkdir();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tweewoo Toto has made a folder~\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (filePath.createNewFile()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"hehe Toto just made a new file for you! @ \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                        + filePath.getAbsolutePath() + \" :o3\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tToto found your saved file..\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Scanner s \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                while (s.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    Task savedTask \u003d TaskListDecoder.convertTextToTask(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    TaskList.numberOfTasks++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    TaskList.tasks.add(savedTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printSaveMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.print(\"file not found\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IOException i) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"error encountered when creating file...\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Saves the task list to a .txt file when user does the following:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * addDeadline, addEvent, addToDo, markAsDone, delete."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param tasks the array list containing task inputs."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void saveToTaskList(ArrayList\u003cTask\u003e tasks, File fileName) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            FileWriter writer \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            for(Task t : tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String textToAdd \u003d TaskListEncoder.formatTaskForFile(t);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                writer.append(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"o0.0o Toto\u0027s done saving\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IndexOutOfBoundsException i) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tnothing in the list yet! o__o\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\terror encountered\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 88
    }
  },
  {
    "path": "src/main/java/duke/Storage/TaskListDecoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Decodes the saved file into an ArrayList of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TaskListDecoder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Converts the data in the .txt file to Task type."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is a line in the .txt file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return task in the list so that it can be added into ArrayList\u003cTask\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    static Task convertTextToTask(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String[] userInput \u003d input.split(\"-\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Task taskSaved;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String taskDescription \u003d userInput[2];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            switch (userInput[0]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String by \u003d userInput[3];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskSaved \u003d new Deadline(taskDescription, by);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                String time \u003d userInput[3];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskSaved \u003d new Event(taskDescription, time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskSaved \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new Exception();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (userInput[1].equals(\"o\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                taskSaved.setAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return taskSaved;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        catch (Exception exception) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tinvalid entry\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 50
    }
  },
  {
    "path": "src/main/java/duke/Storage/TaskListEncoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Encodes TaskList data into a data file for storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TaskListEncoder {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Formats the task to be printed in text file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param task task to be formatted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return the string in the format for the .txt file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    static String formatTaskForFile(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String stringToPrint;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String doneSymbol \u003d (task.isDone() ? \"o\" : \"x\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            stringToPrint \u003d \"D-\" + doneSymbol + \"-\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((Deadline) task).getTaskDescription() + \"-\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((Deadline) task).getDueDate();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            stringToPrint \u003d \"E-\" + doneSymbol + \"-\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((Event) task).getTaskDescription() + \"-\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((Event) task).getTime();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else { //(task instanceof To-Do)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            stringToPrint \u003d \"T-\" + doneSymbol + \"-\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + ((ToDo) task).getTaskDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return stringToPrint;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 36
    }
  },
  {
    "path": "src/main/java/duke/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Ui of the application containing all the print messages."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints out greeting from Toto upon execution."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String logo \u003d \"      /-\\\\    /-\\\\ \\n\" //6 spaces"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"     /  |_9_/  |\\n\" //5 spaces"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"    /,,o  3  o,,\\\\ \\n\"; //4 spaces"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tHullo I\u0027m Toto!\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tHow can Toto help today?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints the divider between user input and output."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printDivider(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints bye message when user inputs \"bye\"."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printBye(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String logo \u003d \"      /-\\\\    /-\\\\ \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"     /  |_9_/  |\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"    / TT  w  TT \\\\ \\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tToto will be lonely... :\u003c\\n\" + logo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints save message after saving task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printSaveMessage() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String logo \u003d \"      /-\\\\    /-\\\\ \\n\" //6 spaces"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"     /  |_9_/  |\\n\" //5 spaces"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"   p/,,\u003d  w  \u003d,,\\\\p \"; //4 spaces"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\twelcome back master! Toto has missed you~ \u003c3\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tToto has loaded your saved task list~\\n\" + logo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints message for the deleted task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Condition: 1 \u003c\u003d taskNum \u003c numberOfTasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param taskNum index of task according to the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printDeleteMessage(int taskNum) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\taaaah why though?\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(taskNum + \": \" + TaskList.tasks.get(taskNum-1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        TaskList.tasks.remove(taskNum-1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        TaskList.numberOfTasks--;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tnow you have \" + TaskList.numberOfTasks + \" task(s)\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints done message for the task marked as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Condition: 1 \u003c\u003d taskNum \u003c numberOfTasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param taskNum index of task according to the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printDoneMessage(int taskNum) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tToto is proud of you! \u003dw\u003d\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(taskNum + \": \" + TaskList.tasks.get(taskNum-1));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Message printed out when there are errors while executing user commands"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * for the methods markAsDone and deleteTask."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printInvalidNumberMessage() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tnot in Toto\u0027s database! oAo\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.println(\"\\tplease give Toto a valid number... \u003e__\u003c\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Message printed out when user input is not a valid command"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * for invalid user inputs."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void printErrorMessage() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String logo \u003d \"      /-\\\\    /-\\\\ \\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"     /  |_7_/  |\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                + \"    / \u003d@  ~  @\u003d \\\\ \\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        System.out.print(\"\\tsorry, Toto did not get that...\\n\" + logo);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 106
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeFormatException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Adds deadline to task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Adds deadline to the ArrayList of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * e.g. deadline [input] /by [time]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DukeException when there is no task description in the [input]."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TimeException when [time] is missing from [input]."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void addDeadline(String input) throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            //splits the string into two parts, using \"/by\" as the divider"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPosition \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String by \u003d input.substring(dividerPosition + 3).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String taskDescription \u003d input.substring(0, dividerPosition).trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            //checks if there is any missing information - by, taskDescription"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskDescription.isBlank()) { //if there is no task description"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else if (by.isBlank()) { // if there is no [time] given"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TimeException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else if (!correctTimeFormat(by)) { // if the [time] format is wrong"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TimeFormatException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else { //if no problem with input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                TaskList.numberOfTasks++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                TaskList.tasks.add(new Deadline(taskDescription, by));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tToto added: \" + taskDescription);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(TaskList.numberOfTasks + \":\" + TaskList.tasks.get(TaskList.numberOfTasks - 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tnow you have \" + TaskList.numberOfTasks + \" task(s)\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else { // when [time] parameter is missing"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new TimeException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Checks if [time] input by the user is in the correct format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param by is the string containing the deadline\u0027s due date and time."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return true when the input is in the correct format, otherwise false."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DateTimeParseException thrown when the user\u0027s input is in the wrong format."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static boolean correctTimeFormat(String by) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        DateTimeFormatter dateTime \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            date \u003d LocalDate.parse(by, dateTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 76
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeFormatException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Adds event to task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Adds an event to the ArrayList of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * e.g. event [input] /at [time]"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DukeException when there is no task description in the [input]."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws TimeException when [time] is missing from [input]."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void addEvent(String input) throws Exception {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            // splits the string into two parts, using \"/at\" as the divider"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int dividerPosition \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String time \u003d input.substring(dividerPosition + 3).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            String taskDescription \u003d input.substring(0, dividerPosition).trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            //LocalDate atDateTime \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            // checks if there is any missing information - time, taskDescription"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskDescription.isBlank()) { //if there is no task description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else if (time.isBlank()) { //if there is no [time] given"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TimeException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else if (!correctTimeFormat(time)) { // if the [time] format is wrong"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new TimeFormatException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else { //if no problem with input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                TaskList.numberOfTasks++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                TaskList.tasks.add(new Event(taskDescription, time));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tToto added: \" + taskDescription);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(TaskList.numberOfTasks + \":\" + TaskList.tasks.get(TaskList.numberOfTasks - 1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tnow you have \" + TaskList.numberOfTasks + \" task(s)\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDivider();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else { // when [time] parameter is missing"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new TimeException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Checks if [time] input by the user is in the correct format."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param time is the string containing the event\u0027s time period."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return true when the input is in the correct format, otherwise false."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DateTimeParseException thrown when the user\u0027s input is in the wrong format."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static boolean correctTimeFormat(String time) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        DateTimeFormatter dateTime \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            date \u003d LocalDate.parse(time, dateTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 77
    }
  },
  {
    "path": "src/main/java/duke/commands/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Adds todo to task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Adds to-do to the ArrayList of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * e.g. todo [input]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DukeException when task description is empty"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void addToDo(String input) throws Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String taskDescription \u003d input.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        //checks if there is a task description in [input]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (taskDescription.isBlank()) { //if there is no task description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else { //if no problem with the input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            TaskList.numberOfTasks++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            TaskList.tasks.add(new ToDo(taskDescription));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tToto added: \" + taskDescription.trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(TaskList.numberOfTasks + \":\" + TaskList.tasks.get(TaskList.numberOfTasks - 1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tnow you have \" + TaskList.numberOfTasks + \" task(s)\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 4
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Deletes task according to the index given by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Removes the task associated with taskNum."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Condition: taskNum \u003e\u003d 1."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void deleteTask(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input.trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (taskNum \u003e TaskList.numberOfTasks){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printInvalidNumberMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Ui.printDeleteMessage(taskNum);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException n1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printInvalidNumberMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NumberFormatException n2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tyou need to tell Toto the task number! @~@\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Marks the task associated with taskNum as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Condition: taskNum \u003e\u003d 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void markAsDone(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input.trim());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            TaskList.tasks.get(taskNum - 1).setAsDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDoneMessage(taskNum);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Storage.saveToTaskList(TaskList.tasks, Duke.filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException n1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printInvalidNumberMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NumberFormatException n2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tyou need to tell Toto the task number! @~@\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static duke.task.TaskList.tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Finds and lists tasks containing a given set of keyword(s) specified by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Keyword matching is case sensitive."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    static int numberOfMatches;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints out the tasks that match what the user is looking for with the given keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param keyword Used to find tasks. It is something the user is looking for in a task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void listMatches (String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        ArrayList\u003cTask\u003e matchedListOfTasks \u003d getTaskMatches(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (numberOfMatches \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\txpx Toto could not find tasks with \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    + \"\u0027\" + keyword + \"\u0027\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tToto has found \" + numberOfMatches + \" match(es)!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            for (int i \u003d 0; i \u003c numberOfMatches; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(i+1 + \":\" + matchedListOfTasks.get(i));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Gets the task(s) which has/have the user\u0027s given keyword(s)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input is the keyword given by the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return an ArrayList\u003cTask\u003e containing all the task(s) that contain(s) the keyword."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static ArrayList\u003cTask\u003e getTaskMatches(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        numberOfMatches \u003d 0; //reset the number of matches every time"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (t.getTaskDescription().contains(input)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                matchedTaskList.add(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                numberOfMatches++;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return matchedTaskList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 56
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Lists all the tasks that are in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Prints out everything in the ArrayList of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param tasks ArrayList of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void listTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (TaskList.numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tyour task list is empty\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            for (int j \u003d 0; j \u003c TaskList.numberOfTasks; j++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println((j + 1) + \": \" + tasks.get(j));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/ListTasksOnDayCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Lists tasks that are due/at the date specified by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class ListTasksOnDayCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"on\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    static DateTimeFormatter date \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    static int counter; //counts the number of tasks with date specified"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Finds tasks that match the date input by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param date the date input by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param tasks ArrayList of tasks input by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return extracted ArrayList of task(s) containing only tasks with the date specified by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static ArrayList\u003cTask\u003e getOnDate(String date, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        counter \u003d 0; //always reset to 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        ArrayList\u003cTask\u003e extractedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (t instanceof Event | t instanceof Deadline) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                if (date.equals(t.getDay().trim())) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    extractedList.add(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return extractedList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Lists tasks on date specified by the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param input date input by the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param tasks ArrayList of tasks input by the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void listOnDate(String input, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String userInput \u003d input.replace(\"on\", \"\").trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            ArrayList\u003cTask\u003e extractedList \u003d getOnDate(userInput, tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tyour task list is empty\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else if (!correctDateFormat(userInput)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                System.out.println(\"\\tplease input date as follows: dd/MM/yyyy\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                for (int j \u003d 0; j \u003c extractedList.size(); j++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                    System.out.println((j + 1) + \": \" + extractedList.get(j));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (NullPointerException n) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tno tasks on \" + userInput + \"!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Ui.printDivider();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Checks if [time] input by the user is in the correct format."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @param userInput is the string containing a date specified by the user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @return true when the input is in the correct format, otherwise false."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws DateTimeParseException thrown when the user\u0027s input is in the wrong format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static boolean correctDateFormat(String userInput) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        LocalDate day \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            day  \u003d LocalDate.parse(userInput, date);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 89
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that the user\u0027s input is missing a task description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/SaveFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals that there is nothing to be saved into a file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class SaveFileException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals the time parameter is missing from the user\u0027s input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TimeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Signals error in the format of [time]."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TimeFormatException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.AddEventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.AddToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.commands.ListTasksOnDayCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.SaveFileException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.exceptions.TimeFormatException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import static duke.task.TaskList.tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Parses user\u0027s input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    private static void getUserCommand() throws Exception {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String input \u003d Duke.in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String[] userInput \u003d input.trim().split(\" \", 2); // split input into command and arguments"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        final String commandWord \u003d userInput[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        final String argument \u003d input.replace(commandWord, \"\").trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printBye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Duke.notQuit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            ListCommand.listTasks(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            DoneCommand.markAsDone(argument);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            if (TaskList.numberOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "                throw new SaveFileException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            DeleteCommand.deleteTask(argument);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            AddDeadlineCommand.addDeadline(argument);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            AddEventCommand.addEvent(argument);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case AddToDoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            AddToDoCommand.addToDo(argument);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            FindCommand.listMatches(argument);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        case ListTasksOnDayCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            ListTasksOnDayCommand.listOnDate(input, tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printErrorMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Executes user commands."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * Available commands: list, done, deadline, event, todo."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     * @throws Exception when an error is encountered."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static void parser() throws Exception {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            getUserCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (DukeException d) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tno task description! :o\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (TimeException t) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tno time given! you don\u0027t have forever though...owo\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (SaveFileException s) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tencountered problems when saving!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (TimeFormatException t) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tplease give the [time] parameter in this format:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            System.out.println(\"\\tdd/MM/yyyy hhmm, where time is in 24h format!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 93
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Represents tasks that need to be done before a specific date and time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected DateFormat dateTime \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\"); // in 24h format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected DateFormat outputFormat \u003d new SimpleDateFormat(\"MMM dd yyyy hh.mm aa\"); // in 12h format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.by \u003d by.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + reformatDate() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String reformatDate() throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Date date \u003d dateTime.parse(by);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return outputFormat.format(date);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String[] dayTime \u003d by.split(\" \",2 );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        day \u003d dayTime[0].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Represents tasks that start at a specific time and ends at a specific time"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected DateFormat dateTime \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\"); // in 24h format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected DateFormat outputFormat \u003d new SimpleDateFormat(\"MMM dd yyyy hh.mm aa\"); // in 12h format"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String day;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.time \u003d time.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + reformatDate() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String reformatDate() throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        Date date \u003d dateTime.parse(time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return outputFormat.format(date);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        String[] dayTime \u003d time.split(\" \",2 );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        day \u003d dayTime[0].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Represents a Task in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String tick \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    protected String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return (isDone ? tick : cross); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String getDay() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 40
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Stores variables related to the tasks like"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * the ArrayList of tasks and the number of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 12
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " * Represents tasks without any date/time attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "deadline homework /by 17 sep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "todo watch videos"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "event yuxuan\u0027s bday /at 12pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/commands/*.java ../src/main/java/duke/exceptions/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/commands/*.java ../src/main/java/duke/exceptions/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuckiex3"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chuckiex3": 2,
      "-": 36
    }
  }
]
