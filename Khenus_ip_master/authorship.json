[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Khenus": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String FRONT_SPACING \u003d \" \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String NEW_LINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String TOP_LINE \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String BOTTOM_LINE \u003d \"\\n____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String LIST_HEADER \u003d FRONT_SPACING + \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String INVALID_TASK \u003d FRONT_SPACING + \"Invalid task to insert\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String TASK_HEADER \u003d FRONT_SPACING + \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String NOT_NUMBER_DELETION \u003d FRONT_SPACING + \"The description of delete must be a number!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String OUT_OF_BOUND_DELETION \u003d FRONT_SPACING + \"The description of delete is larger than the list!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String DELETION_HEADER \u003d FRONT_SPACING + \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String CONFIRMATION_FOOTER_FIRST_PART \u003d FRONT_SPACING + \"Now you have \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String CONFIRMATION_FOOTER_SECOND_PART \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String INVALID_TASK_NUMBER \u003d \"Invalid task number\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String MARKED_DONE_HEADER \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String GREETING_HEADER_TOP \u003d FRONT_SPACING + \"Hello! I\u0027m duke.Duke\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String GREETING_HEADER_BOTTOM \u003d FRONT_SPACING + \"What can I do for you?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String BYE_HEADER \u003d FRONT_SPACING + \"Bye Bye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    //For File Handler"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String INITIALIZER \u003d FRONT_SPACING + \"Initializing...\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String SAVING_INFO \u003d FRONT_SPACING + \"(All Changes will be automatically saved)\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String FILE_NOT_FOUND \u003d FRONT_SPACING + \"Save file not found.\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String FILE_SUCCESSFULLY_READ \u003d FRONT_SPACING + \"File successfully read!\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static final String SAVE_FILE_ACCESS_FAILURE \u003d FRONT_SPACING + \"Error accessing save file\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 28
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.BYE_HEADER;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.GREETING_HEADER_TOP;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.GREETING_HEADER_BOTTOM;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.commands.Done.updateIsDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.commands.AddTask.addAction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.commands.List.listAllActions;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.commands.Delete.deleteTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.SpecialPrint.printWithLines;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.FileHandler.dataInitializer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.FileHandler.dataWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static ArrayList\u003cTask\u003e allActions \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        dataInitializer(allActions);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "//        dataWriter(allActions);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        printWithLines(GREETING_HEADER_TOP + GREETING_HEADER_BOTTOM);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String inputInLowerCase \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        while (!inputInLowerCase.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            String[] inputs \u003d inputInLowerCase.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (inputs[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                listAllActions(allActions);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            } else if (inputs[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                updateIsDone(Integer.parseInt(inputs[1]), allActions);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                dataWriter(allActions);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            } else if (inputs[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                deleteTask(input, allActions);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                dataWriter(allActions);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                addAction(inputs[0], input, allActions);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                dataWriter(allActions);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            inputInLowerCase \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        printWithLines(BYE_HEADER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 55
    }
  },
  {
    "path": "src/main/java/duke/commands/AddTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.exceptions.DukeDateAtException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.exceptions.DukeDateByException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.exceptions.DukeDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.exceptions.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.INVALID_TASK;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.TASK_HEADER;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.FRONT_SPACING;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.NEW_LINE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.CONFIRMATION_FOOTER_FIRST_PART;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.CONFIRMATION_FOOTER_SECOND_PART;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.SpecialPrint.printWithLines;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class AddTask {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * Storing new action into Array List"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void addAction(String command, String userInput, ArrayList\u003cTask\u003e allActions) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            newTaskCreator(command, userInput, allActions);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (DukeInvalidCommandException commandError){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (DukeDescriptionException descriptionError) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (DukeDateByException dateByError) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(\"☹ OOPS!!! The date by of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (DukeDateAtException dateAtError) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(\"☹ OOPS!!! The date at of an event cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * Creating new task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void newTaskCreator(String command, String userInput, ArrayList\u003cTask\u003e allActions)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throws DukeDescriptionException, DukeDateAtException, DukeDateByException, DukeInvalidCommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        int firstSpaceIndex \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String description \u003d userInput.substring(firstSpaceIndex + 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if (!command.equals(\"todo\") \u0026\u0026 !command.equals(\"deadline\") \u0026\u0026 !command.equals(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new DukeInvalidCommandException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if (description.length() \u003d\u003d 0 || firstSpaceIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new DukeDescriptionException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            Task newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            description \u003d description.trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (description \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                throw new DukeDescriptionException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            allActions.add(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            taskAddedVerification(newTask, allActions);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            String[] details \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (details.length \u003c 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                throw new DukeDateByException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            details[1] \u003d details[1].trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (details[1] \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                throw new DukeDateAtException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            Task newTask \u003d new Deadline(details);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            allActions.add(newTask);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            taskAddedVerification(newTask, allActions);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            String[] details \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (details.length \u003c 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                throw new DukeDateAtException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            details[1] \u003d details[1].trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (details[1] \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                throw new DukeDateAtException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            Task newTask \u003d new Event(details);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            allActions.add(newTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            taskAddedVerification(newTask, allActions);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * Getting confirmation for task creation"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void taskAddedVerification(Task newTask, ArrayList\u003cTask\u003e allActions) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String taskConfirmation \u003d newTask.getFullTask();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if (taskConfirmation.equals(\"\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(INVALID_TASK);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(TASK_HEADER"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    + FRONT_SPACING + FRONT_SPACING + taskConfirmation + NEW_LINE"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    + CONFIRMATION_FOOTER_FIRST_PART + allActions.size() + CONFIRMATION_FOOTER_SECOND_PART);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 113
    }
  },
  {
    "path": "src/main/java/duke/commands/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.exceptions.DukeItemNumberException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.exceptions.DukeDescriptionNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.exceptions.DukeDescriptionOutOfBoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.CheckNumeric.isNumeric;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.SpecialPrint.printWithLines;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static java.lang.Integer.parseInt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.NEW_LINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.FRONT_SPACING;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.DELETION_HEADER;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.NOT_NUMBER_DELETION;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.INVALID_TASK_NUMBER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.OUT_OF_BOUND_DELETION;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.CONFIRMATION_FOOTER_FIRST_PART;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.CONFIRMATION_FOOTER_SECOND_PART;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class Delete{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void deleteTask(String userInput, ArrayList\u003cTask\u003e allActions) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            deletionHandler(userInput, allActions);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (DukeItemNumberException itemNumberError) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (DukeDescriptionNumberException notANumberError) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(NOT_NUMBER_DELETION);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (DukeDescriptionOutOfBoundException numberExceededError) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(OUT_OF_BOUND_DELETION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void deletionHandler(String userInput, ArrayList\u003cTask\u003e allActions)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throws DukeItemNumberException, DukeDescriptionNumberException, DukeDescriptionOutOfBoundException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String[] userInputs\u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if (userInputs.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new DukeItemNumberException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else if (!isNumeric(userInputs[1])) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new DukeDescriptionNumberException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else if (allActions.size() \u003c parseInt(userInputs[1])) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            throw new DukeDescriptionOutOfBoundException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            int indexToRemove \u003d parseInt(userInputs[1]) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            String deletionConfirmation \u003d allActions.get(indexToRemove).getFullTask();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            allActions.remove(indexToRemove);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(DELETION_HEADER"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    + FRONT_SPACING + FRONT_SPACING + deletionConfirmation + NEW_LINE"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    + CONFIRMATION_FOOTER_FIRST_PART + allActions.size() + CONFIRMATION_FOOTER_SECOND_PART);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 57
    }
  },
  {
    "path": "src/main/java/duke/commands/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.INVALID_TASK_NUMBER;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.MARKED_DONE_HEADER;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.FRONT_SPACING;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.SpecialPrint.printWithLines;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class Done {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * Update task if the value being entered is valid"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void updateIsDone(int numberToUpdate, ArrayList\u003cTask\u003e allActions) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        if (numberToUpdate \u003e allActions.size() || numberToUpdate \u003c 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            allActions.get(numberToUpdate - 1).setIsDone(true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printWithLines(MARKED_DONE_HEADER"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    + FRONT_SPACING + allActions.get(numberToUpdate - 1).getFullTask());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/List.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.FRONT_SPACING;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.LIST_HEADER;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.NEW_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.SpecialPrint.printWithLines;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class List {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * Listing all stored actions"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void listAllActions(ArrayList\u003cTask\u003e allActions) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String fullList \u003d LIST_HEADER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        for (int i \u003d 0; i \u003c allActions.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            fullList +\u003d String.format(\"%s%s.%s\", FRONT_SPACING, (i + 1), allActions.get(i).getFullTask());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (i !\u003d allActions.size() - 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                fullList +\u003d NEW_LINE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        printWithLines(fullList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 29
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeDateAtException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class DukeDateAtException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeDateByException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class DukeDateByException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class DukeDescriptionException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeDescriptionNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class DukeDescriptionNumberException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeDescriptionOutOfBoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class DukeDescriptionOutOfBoundException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class DukeInvalidCommandException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeItemNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class DukeItemNumberException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 4
    }
  },
  {
    "path": "src/main/java/duke/helper/CheckNumeric.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class CheckNumeric {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static boolean isNumeric(String toCheckString) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            Double.parseDouble(toCheckString);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch(NumberFormatException numberFormatError){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 12
    }
  },
  {
    "path": "src/main/java/duke/helper/FileHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.FILE_NOT_FOUND;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.FILE_SUCCESSFULLY_READ;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.SAVE_FILE_ACCESS_FAILURE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.helper.SpecialPrint.printInitializer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class FileHandler {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void dataInitializer(ArrayList\u003cTask\u003e allActions) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        Scanner fileReader \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            File saveFile \u003d new File(\"tasklist.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            fileReader \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                String[] fileInputs \u003d fileReader.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                if (fileInputs[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    Todo newTask \u003d new Todo(fileInputs[1], fileInputs[2]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    allActions.add(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                } else if (fileInputs[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    Deadline newTask \u003d new Deadline(fileInputs[1], fileInputs[2], fileInputs[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    allActions.add(newTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                } else if (fileInputs[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    Event newTask \u003d new Event(fileInputs[1], fileInputs[2], fileInputs[3]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    allActions.add(newTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printInitializer(FILE_SUCCESSFULLY_READ);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (FileNotFoundException fileReadingError) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            printInitializer(FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            if (fileReader !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                fileReader.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void dataWriter(ArrayList\u003cTask\u003e allActions) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        FileWriter fileWriter \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            fileWriter \u003d new FileWriter(\"tasklist.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            for (Task currentTask : allActions) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                toWrite +\u003d currentTask.getTaskToSave() + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            fileWriter.write(toWrite);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } catch (IOException fileAccessError) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            System.out.println(SAVE_FILE_ACCESS_FAILURE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            fileAccessError.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                if (fileWriter !\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                    fileWriter.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            } catch (IOException fileAccessError) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Khenus"
        },
        "content": "                System.out.println(SAVE_FILE_ACCESS_FAILURE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Khenus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 80
    }
  },
  {
    "path": "src/main/java/duke/helper/SpecialPrint.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.TOP_LINE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.BOTTOM_LINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.INITIALIZER;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static duke.Constants.SAVING_INFO;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class SpecialPrint {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     * Printing information within bounding lines"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void printWithLines(String stringToPrint) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String finalString \u003d TOP_LINE + stringToPrint + BOTTOM_LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        System.out.println(finalString);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public static void printInitializer(String stringToPrint) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String finalString \u003d TOP_LINE + INITIALIZER + stringToPrint + SAVING_INFO;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        System.out.println(finalString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String dateBy;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Deadline(String[] descriptionWithTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        super(descriptionWithTime[0]);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.dateBy \u003d descriptionWithTime[1];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Deadline(String isDone, String description, String dateBy) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.dateBy \u003d dateBy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getFullTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String dueDate \u003d \" (by: \" + dateBy + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return String.format(\"[D]%s%s\", super.getFullTask(), dueDate);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getTaskToSave() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return String.format(\"D | %s | %s\", super.getTaskToSave(), dateBy);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String dateAt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Event(String[] descriptionWithTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        super(descriptionWithTime[0]);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.dateAt \u003d descriptionWithTime[1];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Event(String isDone, String description, String dateAt) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.dateAt \u003d dateAt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getFullTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String eventDate \u003d \" (at: \" + dateAt + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return String.format(\"[E]%s%s\", super.getFullTask(), eventDate);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getTaskToSave() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return String.format(\"E | %s | %s\", super.getTaskToSave(), dateAt);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static java.lang.Boolean.parseBoolean;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "import static java.lang.Boolean.valueOf;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Task(String taskDescription) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Task(String taskDescription, String isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.isDone \u003d parseBoolean(isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public void setIsDone(boolean newIsDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        this.isDone \u003d newIsDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getFullTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        /** For automated testing, replace isDoneSymbol with the following line,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Khenus"
        },
        "content": "         * String isDoneSymbol \u003d isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Khenus"
        },
        "content": "         *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Khenus"
        },
        "content": "         * For production, replace isDoneSymbol with the following line,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Khenus"
        },
        "content": "         * String isDoneSymbol \u003d isDone ? \"\\u2713\" : \"\\u2717\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Khenus"
        },
        "content": "         */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        String isDoneSymbol \u003d isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return String.format(\"[%s] %s\", isDoneSymbol, taskDescription);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getTaskToSave() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return String.format(\"%s | %s\", valueOf(isDone), taskDescription);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public Todo(String isDone, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getFullTask() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return String.format(\"[T]%s\", super.getFullTask());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    public String getTaskToSave() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Khenus"
        },
        "content": "        return String.format(\"T | %s\", super.getTaskToSave());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Khenus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Khenus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Khenus": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Khenus"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Khenus"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Khenus"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Khenus"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Khenus"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Khenus"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Khenus"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Khenus": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Khenus"
        },
        "content": "javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.task.Task.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Khenus"
        },
        "content": "javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.task.Deadline.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Khenus"
        },
        "content": "javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.task.Event.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Khenus"
        },
        "content": "javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.task.Todo.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Khenus"
        },
        "content": "javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Khenus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Khenus"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Khenus": 7,
      "-": 19
    }
  }
]
