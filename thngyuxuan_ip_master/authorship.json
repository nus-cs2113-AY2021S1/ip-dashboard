[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Duke is a program which runs on Java 11. This guide will explain to you how to use Duke to keep track of your tasks in your everyday life."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Duke allows you to store 3 different kinds of tasks in your everyday life: ToDo, Event and Deadline. Coupled with simple commands, you can tell Duke to store these tasks and keep track of what has been done and what\u0027s not. Also, it includes a simple search function that tells you the tasks you have which contains a keyword."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Add Todo Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows you to add a task simply with a description. For example, it can be something as simple as \u0027buy milk\u0027 or \u0027do laundry\u0027."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Add Event Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows you to add a task which is an event. You may do so by adding its description, followed by a \u0027/at\u0027, and finally the location of the event. Duke will store the description as well as the location of the event for you."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Add Deadline Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows you to add a task which is a deadline. You may do so by adding its description, followed by \u0027/by\u0027, and finally the deadline itself. Duke will store the deadline description as well as the deadline itself."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows you to find a task in Duke that contains a certain keyword. For example, if you want to find all tasks that contain the word \u0027milk\u0027, Duke can search and tell you the tasks that have the word \u0027milk\u0027."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### List"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows you to list all tasks existing in Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "This feature allows you to delete tasks in Duke. Type \u0027delete\u0027 followed by the task number to delete that specific task in Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### `todo` - Adds Todo Task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adds a todo task to Duke. Duke will store the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`todo buy milk`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "   "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`[T][✘] buy milk`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Now you have 1 tasks in the list.`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### `event` - Adds Event Task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adds an event task to Duke. Duke will store the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`event CS2113 Lecture /at COM1`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`[E][✘] CS2113 lecture (at: COM1)`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### `deadline` - Adds Deadline Task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Adds a deadline task to Duke. Duke will store the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`deadline CS2113 IP /by this friday`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`[D][✘] CS2113 IP (by: this friday)`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### `list` - Lists All Tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Lists all tasks stored in Duke. Duke will print out all tasks that is currently stored."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Here are the tasks in your list:`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`______________________________________________`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`1.[T][✘] buy milk`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`2.[E][✘] CS2113 Lecture (at: COM1)`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`3.[D][✘] CS2113 IP (by: this friday)`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`______________________________________________`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### `done` - Marks Selected Task As Done"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Marks the selected task as done. Type \u0027done\u0027 followed by the task number in Duke. You may use the list command to find the task number of each task in Duke."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Done. I have marked this task as done:`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`[T][✓] buy milk`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### `find` - Finds Task With Keyword"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Finds all tasks stored in Duke that contains the keyword. Type \u0027find\u0027 followed by the keyword. Note that the task numbers displayed here do not represent the actual task numbers."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`find CS2113`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`______________________________________________`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`1.[E][✘] CS2113 Lecture (at: COM1)`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`2.[D][✘] CS2113 IP (by: this friday)`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`______________________________________________`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "### `delete` - Deletes Selected Task"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Deletes the selected task in Duke. Duke will no longer store the task. Type \u0027delete\u0027 followed by the task number. You may find the task numbers in Duke by using the list command."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Noted. I\u0027ve removed this task:`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`[E][✘] CS2113 Lecture (at: COM1)`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 131,
      "-": 19
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "5"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e false \u003e  2t"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e true \u003e  braeed"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e false \u003e  buy milk"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e true \u003e  drink milk"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e false \u003e  eat stuff"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 6
    }
  },
  {
    "path": "production/Duke.java/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e true \u003e  this and that"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e false \u003e  this"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "D \u003e true \u003e  this /by next week"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        // Load file"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Storage.loadFileContents();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printMissingFile();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Ui.printGreeting();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Parser.parseAndExecute();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 10,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " * Class to hold the string constants for Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static String FILEPATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // String constants in program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String BORDER \u003d \"______________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INDENTATION \u003d \"   \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_INPUT \u003d \"Please specify command! (Available commands: todo, deadline, event, bye)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_TODO_INPUT \u003d \"Error! Did not specify to-do task description! (Command format: todo \u003cdescription\u003e)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_DEADLINE_INPUT \u003d \"Error! Did not specify deadline correctly! (Command format: deadline \u003cdescription\u003e /by \u003cinput\u003e)\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_DEADLINE_INPUT \u003d \"Error! Did not specify deadline! (Command format: deadline \u003cdescription\u003e /by \u003cinput\u003e)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_EVENT_INPUT \u003d \"Error! Did not specify event correctly! (Command format: event \u003cdescription\u003e /at \u003cinput\u003e)\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_EVENT_INPUT \u003d \"Error! Did not specify event! (Command format: event \u003cdescription\u003e /at \u003cinput\u003e)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_DELETE_INPUT_FORMAT \u003d \"Error! Please check that you have input only numbers. (Command format: delete \u003cTask Number\u003e)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_DELETE_INPUT_OUT_OF_BOUNDS \u003d \"Error! Please check that you have input only numbers. (Command format: delete \u003cTask Number from 1 to 100\u003e)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_DELETE_INPUT \u003d \"Error! Task does not exist! Please check if task exists in list. (Use \u0027list\u0027 command to find out existing tasks)\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_DONE_INPUT \u003d \"Error! Did not specify which task is completed! (Command format: done \u003cTask Number\u003e)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_DONE_INPUT \u003d \"Error! Task does not exist! Please check if task exists in list. (Use \u0027list\u0027 command to find out existing tasks)\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String INVALID_DONE_INPUT_OUT_OF_BOUNDS \u003d \"Error! Please check that you have input only numbers. (Command format: done \u003cTask Number from 1 to 100\u003e)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_FIND_LIST \u003d \"No such task exist in the list!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EMPTY_FIND_INPUT \u003d \"Please specify keyword!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String LIST_TASKS_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String ADDED_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String MARK_AS_DONE_MESSAGE \u003d \"Done. I have marked this task as done:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String DELETED_TASK_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"Goodbye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String SAVE_SUCCESS_MESSAGE \u003d \"File saved successfully.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String SAVE_FAILED_MESSAGE \u003d \"Error: File not found! (IOException)\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String MISSING_FILE_MESSAGE \u003d \"Error: File not found! New file created.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static final String FIND_TASK_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 35
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " * Class to read the user\u0027s input and execute the respective commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import task.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Reads in the user input and determines whether"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * it is a valid command. It then executes the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * respective functions."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void parseAndExecute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            String keyCommand \u003d sc.next();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            // Exit Command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            if (keyCommand.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                Storage.saveFileContents();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                Ui.printGoodbye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                if(keyCommand.equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    String keyWord \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    TaskList.findTask(keyWord);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                else if(keyCommand.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    Ui.listTasks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                else if(keyCommand.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    String done \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    TaskList.doneTask(done);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                else if(keyCommand.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    String delete \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    TaskList.deleteTask(delete);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                else if(keyCommand.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    String description \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    // Throw exception if description is empty"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                            throw new DukeException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        TaskList.addToDo(description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        System.out.println(Messages.EMPTY_TODO_INPUT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                else if(keyCommand.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    String desc \u003d sc.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        if (desc.equals(\"\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                            throw new DukeException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        TaskList.addDeadline(desc);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        System.out.println(Messages.INVALID_DEADLINE_INPUT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        System.out.println(Messages.EMPTY_DEADLINE_INPUT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                else if(keyCommand.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    String event \u003d sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        if (event.equals(\"\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                            throw new DukeException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        TaskList.addEvent(event);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        System.out.println(Messages.INVALID_EVENT_INPUT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                        System.out.println(Messages.EMPTY_EVENT_INPUT);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    sc.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    System.out.println(Messages.INVALID_INPUT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 84
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Loads a task of To-do type from text file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument description provides a description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * of the to-do task which is being loaded"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * from the text file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param description a string giving the details"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *                    of the to-do task which is being"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *                    loaded from the text file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void loadToDo(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Task toAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        TaskList.list.add(toAdd);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        TaskList.inputCount++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Loads a task of Event type from text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument event provides a description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * of the event task, as well as the event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * details that comes after the delimiter"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * \u0027/at\u0027."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param event a string giving the details"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *              of the event task which is being"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *              loaded from the text file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void loadEvent(String event) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        String[] splitEvent \u003d event.split(\"/at\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Task toAdd \u003d new Event(splitEvent[0],splitEvent[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        TaskList.list.add(toAdd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        TaskList.inputCount++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Loads a task of Deadline type from text file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument desc provides a description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * of the deadline task, as well as the deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * details that comes after the delimiter"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * \u0027/by\u0027."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param desc a string giving the details of the"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *             deadline task which is being loaded"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *             from the text file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void loadDeadline(String desc) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        String[] splitDesc \u003d desc.split(\"/by\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Task toAdd \u003d new Deadline(splitDesc[0],splitDesc[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        TaskList.list.add(toAdd);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        TaskList.inputCount++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Loads all the contents from text file on to Duke."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void loadFileContents() throws FileNotFoundException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        File f \u003d new File(Messages.FILEPATH);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            TaskList.inputCount \u003d 0;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            int inputCount \u003d Integer.parseInt(sc.nextLine());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            for (int i \u003d 0; i \u003c inputCount; i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                String taskLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                // Split the task details into type, isDone, and description"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                String[] taskDetails \u003d taskLine.split(\" \u003e \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                // Load each existing task in text file into the program"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    loadEvent(taskDetails[2]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    TaskList.list.get(i).isDone \u003d Boolean.parseBoolean(taskDetails[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    loadToDo(taskDetails[2]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    TaskList.list.get(i).isDone \u003d Boolean.parseBoolean(taskDetails[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    loadDeadline(taskDetails[2]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    TaskList.list.get(i).isDone \u003d Boolean.parseBoolean(taskDetails[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Formats the task to the format to save in text file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Returns the formatted string to be saved in text file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument t is the task that is being formatted"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * to save in text file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param t a Task that is being formatted to save in textfile"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @return the string that describes the task details"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * in the text file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static String toSave(Task t) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return(t.getType() + \" \u003e \" + t.isDone + \" \u003e \" + t.toStringToSave());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Saves all contents of the list in Duke to the text file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void saveFileContents() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(Messages.FILEPATH);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            // Write inputCount to first line of file"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            fw.write(Integer.toString(TaskList.inputCount));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            for(int i \u003d 0; i \u003c TaskList.inputCount; i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                fw.write(toSave(TaskList.list.get(i)));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.SAVE_SUCCESS_MESSAGE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.SAVE_FAILED_MESSAGE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 128
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toStringToSave() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return description + \"/by\" + by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 23
    }
  },
  {
    "path": "src/main/java/Task/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 5
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Event(String description, String timings) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.timing \u003d timings;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + timing + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toStringToSave() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return description + \"/at\" + timing;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 22
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " * Class to hold the \u0027Task\u0027 objects."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " * Each object holds a String \u0027description\u0027, a Boolean \u0027isDone\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " * Contains other functions such as getters."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public abstract String toStringToSave();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 36
    }
  },
  {
    "path": "src/main/java/Task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public String toStringToSave() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 20
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " * Class to hold the list of Tasks in the Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static int inputCount \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Adds a new Event task to the list of stored tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The event argument must be a string, and contains"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * the delimiter \u0027/at\u0027."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Add event from user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addEvent(String event) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        String[] splitEvent \u003d event.split(\"/at\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Task toAdd \u003d new Event(splitEvent[0],splitEvent[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        list.add(toAdd);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Ui.addTaskMessages();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        inputCount++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Adds a new ToDo task to the list of stored tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The description argument must be a string, and can be"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * of any length, as long as it is not empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param description a description of the todo task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addToDo(String description) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Task toAdd \u003d new ToDo(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        list.add(toAdd);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Ui.addTaskMessages();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        inputCount++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Adds a new Deadline task to the list of stored tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The desc argument must be a string, and contains the"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * delimiter \u0027/by\u0027. desc must contain the description of"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * the task as well as the deadline, which must be specified"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * right after the delimiter \u0027/by\u0027."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param desc contains the description of the deadline task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *             as well as the deadline of the task, which comes right"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *             after the delimiter \u0027/by\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addDeadline(String desc) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        String[] splitDesc \u003d desc.split(\"/by\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Task toAdd \u003d new Deadline(splitDesc[0], splitDesc[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        list.add(toAdd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        Ui.addTaskMessages();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        inputCount++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Marks the selected task as done. The task argument must be a String so that"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Duke can parse the correct Integer, which tells Duke which task in the list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * is being marked as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @throws NumberFormatException"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @throws NullPointerException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void doneTask(String task) throws NumberFormatException, NullPointerException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            int doneTask \u003d Integer.parseInt(task.replaceAll(\"[\\\\D]\",\"\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Task markedDone \u003d list.get(doneTask - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            markedDone.markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.markDoneMessages(markedDone.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printInvalidInput(\"done\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printEmptyInput(\"done\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printInvalidInput(\"doneOOB\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Deletes the selected task from the stored list of tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument indexToDelete must be a string that can be"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * parsed into an integer."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param indexToDelete a string that can be parsed into"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *                      an integer, giving the index of"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *                      the task in the list that is"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *                      going to be deleted."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @throws NumberFormatException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @throws NullPointerException"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void deleteTask(String indexToDelete) throws NumberFormatException, NullPointerException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            int toDelete \u003d Integer.parseInt(indexToDelete.replaceAll(\"[\\\\D]\", \"\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            toDelete--;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Task toRemove \u003d list.get(toDelete);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            String toPrint \u003d toRemove.toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            inputCount--;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.deleteTaskMessages(toPrint);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            list.remove(toRemove);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printInvalidInput(\"delete\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printEmptyInput(\"delete\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printInvalidInput(\"deleteOOB\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Finds all tasks in the stored list of task that contain"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * the keyword(s)."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument toFind must be a String, and can be of any"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * length."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param toFind a string that contains the word(s) the"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *               user wishes to find in the list of"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *               stored tasks"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void findTask(String toFind) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        ArrayList\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            if(list.get(i).getDescription().contains(toFind)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                searchList.add(list.get(i));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        if(searchList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printEmptySearchList();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        else if(toFind.equals(\"\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.printEmptyInput(\"find\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            Ui.findTaskMessages();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            for (int j \u003d 0; j \u003c searchList.size(); j++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                System.out.println((j + 1) + \".\" + searchList.get(j).toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 142
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " * Class to handle the user\u0027s interaction wtih Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " * The functions to print messages are mostly here."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Print greeting message upon startup of program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        // Greeting Message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    // Print goodbye message upon exiting"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.EXIT_MESSAGE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the messages when a new task is added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void addTaskMessages() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.ADDED_TASK_MESSAGE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.INDENTATION + TaskList.list.get(TaskList.inputCount).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Now you have \" + (TaskList.inputCount + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the entire list when the list command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * is read."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void listTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.LIST_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        for(int i \u003d 0; i \u003c TaskList.inputCount; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println((i+1) + \".\" + TaskList.list.get(i).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the messages when a task is deleted from"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * the list. It tells the user what task is being"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * deleted and the number of tasks remaining."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument task must be a string that represents"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * the task that is being deleted."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void deleteTaskMessages(String task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.DELETED_TASK_MESSAGE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.INDENTATION + task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(\"Now you have \" + TaskList.inputCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the message when Duke cannot"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * locate the text file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printMissingFile() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.MISSING_FILE_MESSAGE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the messages when the find command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * is read."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void findTaskMessages() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.FIND_TASK_MESSAGE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the messages when a task is being marked"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * as done. The argument task must be a string that"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * represents the task that is being marked done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param task a string that represents"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *             the task that is being marked"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *             as done"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void markDoneMessages(String task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.MARK_AS_DONE_MESSAGE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.INDENTATION + task.toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.BORDER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the error messages for invalid user inputs."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument type specifies the type of invalid input"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * error messages the function displays."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param type the type of error message to display"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printInvalidInput(String type) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.INVALID_DONE_INPUT);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"doneOOB\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.INVALID_DONE_INPUT_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.INVALID_DELETE_INPUT_FORMAT);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"deleteOOB\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.INVALID_DELETE_INPUT_OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints the error messages for empty user input."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * The argument type specifies the type of empty input"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * error messages the function displays."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * @param type the type of error message to display"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printEmptyInput(String type) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.EMPTY_DONE_INPUT);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.EMPTY_DELETE_INPUT);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "            System.out.println(Messages.EMPTY_FIND_INPUT);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * Prints out message for when there is no tasks found"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     * with user\u0027s \u0027find\u0027 keyword."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    public static void printEmptySearchList() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "        System.out.println(Messages.EMPTY_FIND_LIST);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 146
    }
  },
  {
    "path": "src/main/java/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e true \u003e  this and that"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "T \u003e false \u003e  this"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thngyuxuan"
        },
        "content": "D \u003e true \u003e  this /by next week"
      }
    ],
    "authorContributionMap": {
      "thngyuxuan": 4
    }
  }
]
