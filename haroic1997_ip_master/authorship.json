[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "D|✘ - study @ sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "E|✘ - jogging @ monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "T|✘ - money work"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "T|✘ - sundae icecream"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "T|✘ - wokfry"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "E|✘ - bomb @ suntec"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static int listCount\u003d0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    static  ArrayList\u003cTask\u003e tasks\u003dnew ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    //static  Task[] tasks \u003dnew Task[100];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    static final String BORDER\u003d\"\\n________________________________\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    static final String BORDER_WITHOUT_SKIP\u003d\"________________________________\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    static final String FILE_PATH\u003d\"data/duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        boolean byeDetected\u003dfalse;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String welcomeMessage \u003d logo +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \"________________________________\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"Whats up people! duke.Duke is here to save the day\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"Soooo, what can I do for you?\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"________________________________\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String byeMessage \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                \"Aye captain. This is Duke Signing out!\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\"________________________________\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        print(welcomeMessage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            loadFileContents(FILE_PATH);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            print(\"Either File not found or File does not exist yet!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        while (!byeDetected) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            switch (words[0].toLowerCase()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                byeDetected \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                listContent();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                int taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                tasks.get(taskNum - 1).maskAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                print(\"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \"[\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + tasks.get(taskNum - 1).getStatusIcon()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + \"] \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + tasks.get(taskNum - 1).getFullDescription()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + BORDER"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if(listCount!\u003d0){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    deleteItemFromList(taskNumber-1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    print(\"The list is empty! Nothing to delete!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    ToDo t \u003d validateToDo(words);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    addToList(t);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }catch (DukeException e){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    switch (e.exceptionType){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        print(\" The Description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                printBorder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    Deadline d \u003d validateDeadline(words);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    addToList(d);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }catch (DukeException e){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    switch (e.exceptionType){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        print(\" The Description of a duke.task.Deadline cannot be empty\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    case MISSING_DEADLINE:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        print(\" The Timing Information of a duke.task.Deadline cannot be empty\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                printBorder();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    Event ev \u003d validateEvent(words);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    addToList(ev);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }catch (DukeException e){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    switch (e.exceptionType){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    case MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        print(\" The Description of a duke.task.Event cannot be empty\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    case MISSING_EVENT_INFO:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        print(\" The Logistic Information of a duke.task.Event cannot be empty\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                printBorder();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                print(\"No proper Commands Detected\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                printBorder();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(byeMessage);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void listContent() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if (listCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            print(\"No list Detected, add some text!\" + BORDER);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            for (int j \u003d 0; j \u003c listCount; j++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                int position \u003d j + 1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                print(position + \".\" +\"[\"+ tasks.get(j).getTaskType() +\"]\"+ \"[\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + tasks.get(j).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + tasks.get(j).getFullDescription());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            printBorder();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void addToList(Task t) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        tasks.add(listCount,t);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        listCount++;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        print(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(listCount - 1).getTaskType() + \"[\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(listCount - 1).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(listCount - 1).getFullDescription()"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\nNow you have \"+ listCount+\" tasks in the list.\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                );"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            appendToFile(FILE_PATH,t);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            print(\"Something went wrong: \"+ e.getMessage());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void print(String Descriptions){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(Descriptions);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void printBorder(){"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        System.out.println(BORDER_WITHOUT_SKIP);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void loadFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    int dashPosition;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    int atPosition;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    String timedateInfo;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    while(s.hasNext()){"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "//        print(s.nextLine());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String contents\u003ds.nextLine();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        dashPosition \u003d contents.indexOf(\"-\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String[] words \u003d contents.split(\"|\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        switch (words[0]){"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            atPosition \u003d contents.indexOf(\"@\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            description \u003d contents.substring(dashPosition+1,atPosition);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            timedateInfo \u003d contents.substring(atPosition+1);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            tasks.add(new Deadline(description.trim(),timedateInfo.trim()));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            listCount++;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            atPosition \u003d contents.indexOf(\"@\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            description \u003d contents.substring(dashPosition+1,atPosition);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            timedateInfo \u003d contents.substring(atPosition+1);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            tasks.add(new Event(description.trim(),timedateInfo.trim()));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            listCount++;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            description \u003d contents.substring(dashPosition+1);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            tasks.add(new ToDo(description.trim()));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            listCount++; break;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        default: break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    listContent();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void appendToFile(String filePath,Task t) throws IOException{"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if(t instanceof Event){"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType()+\"|\"+ t.getStatusIcon()"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    +\" - \"+t.getDescription()+\" @ \" +((Event) t).getLocation()"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    +System.lineSeparator());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        else if(t instanceof Deadline){"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType()+\"|\"+ t.getStatusIcon()"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    +\" - \"+t.getDescription()+\" @ \" +((Deadline) t).getTimingInfo()"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            fw.write(t.getTaskType()+\"|\"+ t.getStatusIcon()"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    +\" - \"+t.getDescription()+ System.lineSeparator());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void updateDeletionOfFile(String filePath) throws IOException{"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw0\u003dnew FileWriter(filePath);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw0.write(\"\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        for(int i\u003d0;i\u003clistCount;i++){"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if(tasks.get(i) instanceof Event){"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType()+\"|\"+ tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        +\" - \"+tasks.get(i).getDescription()+\" @ \" +((Event) tasks.get(i)).getLocation()"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        +System.lineSeparator());"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            else if(tasks.get(i) instanceof Deadline){"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType()+\"|\"+ tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        +\" - \"+tasks.get(i).getDescription()+\" @ \" +((Deadline) tasks.get(i)).getTimingInfo()"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                fw.write(tasks.get(i).getTaskType()+\"|\"+ tasks.get(i).getStatusIcon()"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                        +\" - \"+tasks.get(i).getDescription()+ System.lineSeparator());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static void deleteItemFromList(int index){"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        print(\"Nice! I\u0027ve removed this task:\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\n\" + tasks.get(index).getTaskType()"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"[\""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(index).getStatusIcon()"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + tasks.get(index).getFullDescription()"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                + \"\\nNow you have \" + (listCount - 1)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                +\" tasks in the list.\""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    tasks.remove(index);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    listCount--;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    try{"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        updateDeletionOfFile(FILE_PATH);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }catch (IOException e){"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        print(\"Problem with saving file!\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static ToDo validateToDo(String[] words) throws DukeException{"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        ToDo t;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String description\u003d\"\";"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if(words.length\u003d\u003d1){"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            throw new DukeException(DukeExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            for (int j \u003d 1; j \u003c words.length; j++) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                description +\u003d words[j] + \" \";"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "             t \u003d new ToDo(description);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static Deadline validateDeadline(String[] words) throws DukeException{"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Deadline d;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String description\u003d\"\";"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if(words.length\u003d\u003d1){"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            throw new DukeException(DukeExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            int byPosition\u003d0;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String byDescription\u003d\"\";"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            for(int j \u003d1; j\u003c words.length;j++){"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if(words[j].contains(\"/by\")){"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    byPosition\u003dj;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    description+\u003d words[j]+ \" \";"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if(byPosition!\u003d0){"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                for (int k \u003d byPosition+1; k \u003c words.length; k++) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    byDescription\u003d byDescription +\" \"+ words[k];"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                d\u003d new Deadline(description,byDescription);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                throw new DukeException(DukeExceptionType.MISSING_DEADLINE);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public static Event validateEvent(String[] words) throws DukeException{"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        Event e;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        String description\u003d\"\";"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        if(words.length\u003d\u003d1){"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            throw new DukeException(DukeExceptionType.MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            int atPosition\u003d0;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            String atDescription\u003d\"\";"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            for(int j \u003d1; j\u003c words.length;j++){"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                if(words[j].contains(\"/at\")){"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    atPosition\u003dj;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    description+\u003d words[j]+ \" \";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            if(atPosition!\u003d0){"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                for (int k \u003d atPosition+1; k \u003c words.length; k++) {"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                    atDescription\u003d atDescription +\" \"+ words[k];"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                e\u003d new Event(description,atDescription);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "                throw new DukeException(DukeExceptionType.MISSING_EVENT_INFO);"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 348,
      "-": 8
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    DukeExceptionType exceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public DukeException(DukeExceptionType exceptionType){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.exceptionType\u003dexceptionType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 8
    }
  },
  {
    "path": "src/main/java/duke/DukeExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public enum DukeExceptionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    MISSING_DESCRIPTION,WRONG_INPUT_FORMAT,MISSING_DEADLINE, MISSING_EVENT_INFO"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"D\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getTimingInfo(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"E\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getLocation(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public Task(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.description\u003d\"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone\u003dfalse;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return taskType ;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public void maskAsDone(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        this.isDone\u003dtrue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 35
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        super.taskType\u003d\"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    public String getFullDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "todo workout"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "deadline cs2113 exam /by nov"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "event Group presentation /at Dec 20 2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "#cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "#diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "haroic1997"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "haroic1997": 5,
      "-": 34
    }
  }
]
