[
  {
    "path": "data/tasklist.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "T:true:Fix"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "T:false:mroe"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "D:true:ip:tonight"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "E:true:meeting:midnight"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "T:false:bloop"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "E:false:movie:8pm"
      }
    ],
    "authorContributionMap": {
      "prachi2023": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static boolean isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public static String path \u003d \"tasklist.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        // set up scanner"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.load(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        }catch (IOException e){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showFileCreatingError(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }catch (DukeException e){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showErrorMessage(e.getErrorMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/*        try{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "            setUpFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        }catch (IOException e){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            ui.showFileCreatingError(path);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        } */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                Command c \u003d Parser.parseInput(fullCommand, ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                c.execute(ui, tasks, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showErrorMessage(e.getErrorMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "prachi2023": 23,
      "-": 29
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getErrorMessage(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "prachi2023": 4,
      "-": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String toString (){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return String.format(\"[D][%s] %s(by:%s)\", getStatusIcon(), description, by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String saveFormat(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return String.format(\"D:%s:%s:%s\", isDone, description,by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "prachi2023": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String toString (){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return String.format(\"[E][%s] %s(at:%s)\", getStatusIcon(), description, at);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String saveFormat(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return String.format(\"E:%s:%s:%s\", isDone, description, at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "prachi2023": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "prachi2023"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String toString (){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String saveFormat(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return String.format(\"%s:%s\", isDone, description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public void markTaskDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public Boolean getIsDone (){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return (isDone ? \"\\u2713\": \"\\u2718\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "prachi2023": 26
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public ToDo (String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return String.format (\"[T][%s] %s\", getStatusIcon(),this.description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    public String saveFormat(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "        return String.format(\"T:%s:%s\", isDone, description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "prachi2023": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "todo finish work"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "deadline cut hair /by tonight"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "event orientation /at 27th aug 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "prachi2023": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "prachi2023"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "prachi2023": 2,
      "-": 19
    }
  }
]
