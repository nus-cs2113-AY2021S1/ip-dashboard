[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_NO_DATA_TO_LOAD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasksData());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (e.getMessage().equals(ERROR_NO_DATA_TO_LOAD)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                ui.printNoDataLoaded();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                ui.printDukeErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        end();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void end() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Command command \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                command.execute(tasks, storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                ui.printDukeErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        new Duke(FILE_PATH).run();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 65,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        storage.saveTasksData(taskList.getTasks());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 19
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public DeadlineCommand(String taskDescription) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.addDeadlineTask(taskDescription);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DEADLINE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETETASK_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public DeleteCommand(String taskDescription) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.deleteTask(taskDescription);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DELETETASK_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public DoneCommand(String taskDescription) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.markTaskAsDone(taskDescription);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public EventCommand(String taskDescription) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.addEventTask(taskDescription);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_EVENT_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 10
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.printTaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 18
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_TODO_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TodoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.addTodoTask(taskDescription);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_TODO_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 29
    }
  },
  {
    "path": "src/main/java/duke/data/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_UNKNOWN_TASK_INDICATOR;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_WITH_FILE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Specifying file paths in an OS-independent way"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String CURRENT_DIRECTORY \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Different parts of a task when it is converted to a String"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final int TASK_TYPE_INDICATOR \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final int START_OF_TASK_DESCRIPTION \u003d 7;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String DEADLINE_TASK_DELIMITER \u003d \" \\\\(by:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String EVENT_TASK_DELIMITER \u003d \" \\\\(at:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Path dataDirectoryPath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Path dataFilePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String directoryName \u003d filepath.split(\"/\")[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String fileName \u003d filepath.split(\"/\")[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        dataDirectoryPath \u003d Paths.get(CURRENT_DIRECTORY, directoryName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        dataFilePath \u003d Paths.get(CURRENT_DIRECTORY, directoryName, fileName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void saveTasksData(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cString\u003e tasksStringList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Get a string representation of the tasks and store it into an ArrayList"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            tasksStringList.add(tasks.get(i).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Write tasks to data file - a text file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Files.write(dataFilePath, tasksStringList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_WITH_FILE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasksData() throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // If folder (data) and file (duke.txt) for saving and loading does not exist yet, create one for user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        createSaveLocationIfNotExist();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cString\u003e loadedTasksStringList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Requires casting as it only returns a list - superclass of arrayList"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Read from the saved file - if any"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            loadedTasksStringList \u003d (ArrayList\u003cString\u003e) Files.readAllLines(dataFilePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_WITH_FILE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (String task : loadedTasksStringList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            TaskType taskType;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Throws task type while catching unknown-task-type error"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskType \u003d getTaskType(task.charAt(TASK_TYPE_INDICATOR));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Using enums to check the type of task we are dealing with."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Unlikely to go to the default statement since enums are fixed values"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                loadTodoTask(task, loadedTasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                loadDeadlineTask(task, loadedTasks);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                loadEventTask(task, loadedTasks);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                throw new DukeException(ERROR_UNKNOWN_TASK_INDICATOR);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // If folder (data) and file (duke.txt) for saving and loading does not exist yet, create one for user."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void createSaveLocationIfNotExist() throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Create \u0027data\u0027 folder if it does not already exists"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (!Files.exists(dataDirectoryPath)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Files.createDirectory(dataDirectoryPath);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Create \u0027duke.txt\u0027 file if it does not already exists"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (!Files.exists(dataFilePath)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Files.createFile(dataFilePath);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_WITH_FILE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Identifies the given task type"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static TaskType getTaskType(char taskTypeIndicator) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // No breaks required as return statements are used"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        switch(taskTypeIndicator) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return TaskType.TODO;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return TaskType.EVENT;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_UNKNOWN_TASK_INDICATOR);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Identify if task was marked as done before and mark it as done in current session if yes"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void markTaskDoneIfDone (String task, ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (task.contains(Task.TICK_SYMBOL)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            loadedTasks.get(loadedTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Exceptions are already handled in Duke.java and hence we will assume these are appropriate tasks"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // No need to notify user that the task has been added too"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void loadTodoTask(String task, ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d task.substring(START_OF_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Load saved to_do task into current tasks"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Todo newTodoTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        loadedTasks.add(newTodoTask);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Recover its isDone status"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        markTaskDoneIfDone(task, loadedTasks);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Deadline tasks should be in the right format since exceptions were handled in Duke.java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // No need to notify user that the task has been added too"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void loadDeadlineTask(String task, ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d task.substring(START_OF_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] deadlineTaskParts \u003d taskDescription.split(DEADLINE_TASK_DELIMITER);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String deadlineTaskDescription \u003d deadlineTaskParts[0];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Took the substring of the deadline portion because we want to ignore the closing bracket at the end"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String deadline \u003d deadlineTaskParts[1].substring(0, deadlineTaskParts[1].length() - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Load saved deadline task into current tasks"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Deadline newDeadlineTask \u003d new Deadline(deadlineTaskDescription, deadline);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        loadedTasks.add(newDeadlineTask);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Recover its isDone status"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        markTaskDoneIfDone(task, loadedTasks);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Event tasks should be in the right format since exceptions were handled in Duke.java"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // No need to notify user that the task has been added too"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void loadEventTask(String task, ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d task.substring(START_OF_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] eventTaskParts \u003d taskDescription.split(EVENT_TASK_DELIMITER);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String eventTaskDescription \u003d eventTaskParts[0];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Took the substring of the deadline portion because we want to ignore the closing bracket at the end"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String eventTime \u003d eventTaskParts[1].substring(0, eventTaskParts[1].length() - 1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Load saved event task into current tasks"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Event newEventTask \u003d new Event(eventTaskDescription, eventTime);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        loadedTasks.add(newEventTask);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Recover its isDone status"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        markTaskDoneIfDone(task, loadedTasks);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 185
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "// Using errorType string to differentiate what type of error we are facing with"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "// To allow duke.DisplayManager to know what message to print through a switch statement"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "// Note: initially wanted to use an enum but that was not an option anymore as we should pass"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "// in a string instead to identify the type of error"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public DukeException(String errorType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/ErrorMessages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class ErrorMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Duke Error messages"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String SAD_FACE_EMOJI \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_COMMAND_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_TODO_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_EVENT_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_EVENT_WRONG_FORMAT_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The format to enter in an event task is \\\"\u003ctask\u003e /at \u003cevent\u0027s time\u003e\\\"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DEADLINE_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DEADLINE_WRONG_FORMAT_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The format to enter in a deadline task is \\\"\u003ctask\u003e /by \u003cdeadline\u003e\\\"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of the done command cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_WRONG_INDEX_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The task to mark as done must be an existing task.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_NOT_NUMBER_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! Use numbers to specify which task to be marked as done.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETETASK_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of the delete command cannot be empty.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETETASK_NOT_NUMBER_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! Use numbers to specify which task to be deleted.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETETASK_WRONG_INDEX_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The task to be deleted must be an existing task.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String UNEXPECTED_ERROR \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! An unidentified error has occurred! Please take note!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_UNKNOWN_TASK_INDICATOR_MESSAGE \u003d  SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! Unidentified task type! Load file fail.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // File Error message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String FILE_ERROR_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! Something is wrong with accessing the save file. Please check again\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 39
    }
  },
  {
    "path": "src/main/java/duke/exception/ErrorTypeManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class ErrorTypeManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Constants for error types"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_UNKNOWN_COMMAND \u003d \"error_command\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_TODO_EMPTY_DESCRIPTION \u003d \"error_todo_empty_description\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_EVENT_EMPTY_DESCRIPTION \u003d \"error_event_empty_description\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_EVENT_WRONG_FORMAT \u003d \"error_event_wrong_format\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DEADLINE_EMPTY_DESCRIPTION \u003d \"error_deadline_empty_description\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DEADLINE_WRONG_FORMAT \u003d \"error_deadline_wrong_format\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            \u003d \"error_markTaskDone_empty_description\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_WRONG_INDEX \u003d \"error_markTaskAsDone_wrong_index\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_NOT_NUMBER \u003d \"error_markTaskAsDone_not_number\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETETASK_EMPTY_DESCRIPTION"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            \u003d \"error_delete_empty_description\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETETASK_NOT_NUMBER \u003d \"error_deleteTask_not_number\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETETASK_WRONG_INDEX \u003d \"error_deleteTask_wrong_index\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_UNKNOWN_TASK_INDICATOR \u003d \"error_unknownTaskIndicator\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_NO_DATA_TO_LOAD \u003d \"error_no_data_to_load\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_WITH_FILE \u003d \"error_with_file\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 23
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String command \u003d getCommandFromInput(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d getTaskDescriptionFromInput(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Duke reads user commands and either show task list, mark task as done or add task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new DoneCommand(taskDescription);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new DeleteCommand(taskDescription);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new TodoCommand(taskDescription);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new DeadlineCommand(taskDescription);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new EventCommand(taskDescription);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Extracts command word from user inputs to decide what Duke will do"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static String getCommandFromInput(String userInput) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Splits user input into different words to distinguish between command and task\u0027s information"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] inputParts \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // User\u0027s command can be found in the first word of user\u0027s inputs"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return inputParts[0].toLowerCase();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Extracts task information from user inputs to decide what kind of task to add to list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static String getTaskDescriptionFromInput(String userInput) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Splits user input into different words to distinguish between command and task\u0027s information"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] inputParts \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Gets the informative parts from user input after the command (first word)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (int i \u003d 1; i \u003c inputParts.length; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskDescription \u003d String.join(\" \", taskDescription, inputParts[i]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskDescription \u003d taskDescription.trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String TASK_INDICATOR \u003d \"[D]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return TASK_INDICATOR + super.toString() + \" (by:\" + deadline + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String TASK_INDICATOR \u003d \"[E]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return TASK_INDICATOR + super.toString() + \" (at:\" + eventTime + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return (isDone ? TICK_SYMBOL : CROSS_SYMBOL); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Getter method for description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Setter method for isDone"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 32
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_WRONG_FORMAT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETETASK_NOT_NUMBER;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETETASK_WRONG_INDEX;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_WRONG_FORMAT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_NOT_NUMBER;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_WRONG_INDEX;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_NO_DATA_TO_LOAD;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents the entire list of tasks entered by the user during runtime and from"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * the data loaded from previous instances of program usage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String DEADLINE_TASK_DELIMITER \u003d \"/by\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String EVENT_TASK_DELIMITER \u003d \"/at\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /** Constructs task list from stored data */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedTasks) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (loadedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_NO_DATA_TO_LOAD);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks \u003d loadedTasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printSuccessfulDataLoading();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTaskList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTasks(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Given an index, able to mark the task at that index in the tasks arraylist to be done"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void markTaskAsDone(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int completedTaskIndex;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Task taskToBeMarkedAsDone;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Gets index of the task user specified to be done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Catch exceptions whereby if index specified is not in numeric form"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            completedTaskIndex \u003d Integer.parseInt(taskDescription.split(\" \")[0]) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_MARKTASKASDONE_NOT_NUMBER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Marks specified task as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Catch exceptions whereby user specified a negative index or an index without a task stored yet"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskToBeMarkedAsDone \u003d tasks.get(completedTaskIndex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_MARKTASKASDONE_WRONG_INDEX);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskToBeMarkedAsDone.markAsDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Notifies user that the task is marked as done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printMarkAsDoneMessage(taskToBeMarkedAsDone);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Given an index, able to delete the task at that index in the tasks arraylist"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void deleteTask(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int taskToDeleteIndex;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Task taskToBeDeleted;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Gets index of the task user specified to be deleted"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Catch exceptions whereby if index specified is not in numeric form"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskToDeleteIndex \u003d Integer.parseInt(taskDescription.split(\" \")[0]) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DELETETASK_NOT_NUMBER);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Delete specified task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Catch exceptions whereby user specified a negative index or an index without a task stored yet"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Notifies user that the task is deleted."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Prints message using the task instance before it is deleted."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskToBeDeleted \u003d tasks.get(taskToDeleteIndex);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DELETETASK_WRONG_INDEX);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTaskDeletedMessage(taskToBeDeleted, getTaskCount());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks.remove(taskToBeDeleted);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Adds ToDos typed task into the tasks arraylist"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void addTodoTask(String taskDescription) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Todo newTodoTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks.add(newTodoTask);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Notifies user that task has been added"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTaskAddedMessage(newTodoTask, getTaskCount());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Adds Deadline typed task into the tasks arraylist"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void addDeadlineTask(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Splits user input into task details and deadline"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] taskDescriptionParts \u003d taskDescription.split(DEADLINE_TASK_DELIMITER);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String deadlineTaskDescription;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String deadline;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Catches exceptions where user does not specify deadline in the correct format"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Also catches specific input of: \"deadline /by \" where both description and deadline are empty"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            deadlineTaskDescription \u003d taskDescriptionParts[0];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            deadline \u003d taskDescriptionParts[1];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DEADLINE_WRONG_FORMAT);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Catches the exception whereby user did not input any task description but has a deadline"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Sample input that will get caught: \"deadline /by tmr\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (deadlineTaskDescription.isBlank()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DEADLINE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Deadline newDeadlineTask \u003d new Deadline(deadlineTaskDescription, deadline);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks.add(newDeadlineTask);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Notifies user that task has been added"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTaskAddedMessage(newDeadlineTask, getTaskCount());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Adds Event typed task into the tasks arraylist"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void addEventTask(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Splits user input into task details and event timing"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] taskDescriptionParts \u003d taskDescription.split(EVENT_TASK_DELIMITER);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String eventTaskDescription;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String eventTime;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Catches exceptions where user does not specify event in the correct format"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Also catches specific input of: \"event /at \" where both description and event time are empty"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            eventTaskDescription \u003d taskDescriptionParts[0];"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            eventTime \u003d taskDescriptionParts[1];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_EVENT_WRONG_FORMAT);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Catches the exception whereby user did not input any task description but has an event time"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Sample input that will get caught: \"event /at tmr\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (eventTaskDescription.isBlank()) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_EVENT_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Event newEventTask \u003d new Event(eventTaskDescription, eventTime);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks.add(newEventTask);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Notifies user that task has been added"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTaskAddedMessage(newEventTask, getTaskCount());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 182
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String TASK_INDICATOR \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return TASK_INDICATOR + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 15
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_COMMAND_MESSAGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DEADLINE_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DEADLINE_WRONG_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DELETETASK_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DELETETASK_NOT_NUMBER_MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DELETETASK_WRONG_INDEX_MESSAGE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_EVENT_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_EVENT_WRONG_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_MARKTASKASDONE_NOT_NUMBER_MESSAGE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_MARKTASKASDONE_WRONG_INDEX_MESSAGE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_TODO_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_UNKNOWN_TASK_INDICATOR_MESSAGE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.FILE_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.UNEXPECTED_ERROR;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_WRONG_FORMAT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETETASK_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETETASK_NOT_NUMBER;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETETASK_WRONG_INDEX;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_WRONG_FORMAT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_NOT_NUMBER;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_WRONG_INDEX;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_TODO_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_UNKNOWN_TASK_INDICATOR;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_WITH_FILE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String DIVIDER \u003d \"______________________________________________________\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\" + System.lineSeparator()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String NOTE_TO_USER \u003d \"(Available commands are: \u0027list\u0027, \u0027todo\u0027, \u0027event\u0027,\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"\u0027deadline\u0027, \u0027done\u0027, \u0027delete\u0027 and \u0027bye\u0027)\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"(Note: Dates should be given in \u0027yyyy-mm-dd\u0027 format)\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String DUKE_LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // file load status"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String SUCCESSFUL_DATA_LOAD_MESSAGE \u003d \"(Note: \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"Your saved data was successfully loaded!)\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String FAIL_DATA_LOAD_MESSAGE \u003d \"(Note: \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"Could not detect any saved data!)\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return SCANNER.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints horizontal lines to wrap output for a clearer display"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printDivider() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints message to user wrapped with horizontal lines for clear display"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printMessageToUser(String message) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void printDukeHelloMessage() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(\"Hello from\\n\" + DUKE_LOGO);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void printNoteToUser() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(NOTE_TO_USER);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints welcome message to user"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDukeHelloMessage();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printNoteToUser();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints exit message to user"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints message to indicate user has added a task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTaskAddedMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(\"Got it. I\u0027ve added this task:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + \"  \" + task + System.lineSeparator()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + printTaskCount(numberOfTasks));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints message to indicate user has deleted a task"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTaskDeletedMessage (Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + \"  \" + task + System.lineSeparator()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + printTaskCount(numberOfTasks - 1));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints the current count of the tasks in the task ArrayList"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String printTaskCount(int numberOfTasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return(\"Now you have \" + numberOfTasks +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                (numberOfTasks \u003d\u003d 1 ? \" task in the list.\" : \" tasks in the list.\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints message to indicate user has marked a task as done"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printMarkAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(\"Nice! I\u0027ve marked this task as done: \""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + System.lineSeparator() + \"  \" + task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints list out for user when list command is received."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printSuccessfulDataLoading() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(SUCCESSFUL_DATA_LOAD_MESSAGE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printNoDataLoaded() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(FAIL_DATA_LOAD_MESSAGE);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Prints different error messages for different exceptions encountered"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printDukeErrorMessage(String errorType) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_UNKNOWN_COMMAND:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_TODO_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_TODO_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_EVENT_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_EVENT_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_EVENT_WRONG_FORMAT:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_EVENT_WRONG_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DEADLINE_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DEADLINE_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DEADLINE_WRONG_FORMAT:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DEADLINE_WRONG_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_MARKTASKASDONE_WRONG_INDEX:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_MARKTASKASDONE_WRONG_INDEX_MESSAGE);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_MARKTASKASDONE_NOT_NUMBER:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_MARKTASKASDONE_NOT_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DELETETASK_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DELETETASK_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DELETETASK_NOT_NUMBER:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DELETETASK_NOT_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DELETETASK_WRONG_INDEX:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DELETETASK_WRONG_INDEX_MESSAGE);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_UNKNOWN_TASK_INDICATOR:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_UNKNOWN_TASK_INDICATOR_MESSAGE);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_WITH_FILE:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(FILE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(UNEXPECTED_ERROR);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 199
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline do homework /by no idea :p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "wrong command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "todo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event /at Fri 2pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event testA /at"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline /by tmr 2pm"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline testB /by"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 50"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done a"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 50"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 40
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\commands\\*.java ..\\src\\main\\java\\duke\\data\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 2,
      "-": 19
    }
  }
]
