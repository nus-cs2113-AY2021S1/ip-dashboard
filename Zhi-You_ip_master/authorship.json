[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "Duke can help you **manage and keep track of your tasks** easily through the use of a Command Line Interface."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "*Start planning your daily schedule with Duke!*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "### Add tasks to your task list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "There are three types of tasks that you can add to your own task list:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "2. Deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "3. Event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "A **Todo** task should be used to keep track of a task without any timing constraints."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "A **Deadline** task can be used to keep track of any task with a specific deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "An **Event** task can be used to keep track of a task that will happen on a specfic date and time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "### Show the tasks on your task list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You can view your own list of tasks anytime while using Duke!"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "### Find tasks using keyword(s)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Search for specific tasks in your task list using keywords that match their descriptions."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "### Mark a task as done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Whenever you are done with a task, mark it as done within your task list!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "### Delete a task from your task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You can remove any task that you do not want to track anymore."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "### Duke understands dates"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Pass in a date in a simple format and Duke will store it for you in a clearer format!"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "### Your task list is automatically saved"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "You do not have to worry about losing any progress made on Duke as your task list is automatically saved after every action that affects the list. The saved data can be found in `data/tasks.txt` relative to the location storing the JAR file for Duke. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "### Your task list will be loaded automatically on start up"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Of course, all the tasks you have in your task list will always come back to you whenever you start up Duke again!"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "### Starting Duke"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "Ensure your computer has Java 11 before following the steps below to start up Duke."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "1. Place the JAR file in any folder"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "2. Open a command window in that folder"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "3. Run the following commands in the same folder as the jar file:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "chcp 65001"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -jar ip.jar"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "(Note: Could not detect any saved data!)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "(Available commands are: \u0027list\u0027, \u0027todo\u0027, \u0027event\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u0027deadline\u0027, \u0027done\u0027, \u0027delete\u0027, \u0027find\u0027 and \u0027bye\u0027)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "(Note: Dates should be given in \u0027yyyy-mm-dd\u0027 format)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "If tasks\u0027 done status icons appear as `?` for you instead of `✘` and `✓`, change the font in your terminal to NSimSun."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "### `todo` - Adds a Todo task to your task list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a Todo task into your task list based on the task\u0027s description."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Format: `todo [task description]`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  [T][✘] return book"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "### `deadline` - Adds a Deadline task to your task list"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a Deadline task into your task list based on the task\u0027s description and its deadline."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "Any date given in the format of `yyyy-mm-dd` (e.g., `2019-10-15`) will be registered in a nicer format of `MMM dd yyyy` (e.g., `Oct 15 2019`)."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Format: `deadline [task description] /by [deadline]`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "deadline finish math assignment /by 2020-10-10"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  [D][✘] finish math assignment  (by: Oct 10 2020)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "### `event` - Adds an Event task to your task list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Adds an Event task into your task list based on the task\u0027s description and its event timing."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "Any date given in the format of `yyyy-mm-dd` (e.g., `2019-10-15`) will be registered in a nicer format of `MMM dd yyyy` (e.g., `Oct 15 2019`)."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Format: `event [task description] /at [event timing]`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "event project meeting /at 2020-11-11 3pm at YIH"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  [E][✘] project meeting  (at: Nov 11 2020 3pm at YIH)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "### `list` - Displays your task list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "Prints out an indexed list of tasks that you have along with their done status and task\u0027s description."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "list"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "1.[T][✘] return book"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "2.[D][✘] finish math assignment  (by: Oct 10 2020)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "3.[E][✘] project meeting  (at: Nov 11 2020 3pm at YIH)"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "### `find` - Finds tasks based on keyword(s)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Prints out an indexed list of tasks with descriptions that contain matching sequence of characters with the keyword(s) you specified."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Format: `find [keywords]`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "find math"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "Here are the matching tasks in your list: "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "1.[D][✘] finish math assignment  (by: Oct 10 2020)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "### `done` - Marks a task as done "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "Marks the specified task as a completed task and its done status icon will automatically be updated to a tick to reflect this."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "You can specify the task using its index in the task list."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Format: `done [task index]`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "  [D][✓] finish math assignment  (by: Oct 10 2020)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "Using `list` now, the following task list will be displayed:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "1.[T][✘] return book"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "2.[D][✓] finish math assignment  (by: Oct 10 2020)"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "3.[E][✘] project meeting  (at: Nov 11 2020 3pm at YIH)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "### `delete` - Deletes a task from your task list"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "Removes a task, that you specify, from the task list."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "You can specify the task using its index in the task list."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "Format: `delete [task index]`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "  [D][✓] finish math assignment  (by: Oct 10 2020)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "Now you have 30 tasks in the list."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "Using `list` now, the following task list will be displayed:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "1.[T][✘] return book"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "2.[E][✘] project meeting  (at: Nov 11 2020 3pm at YIH)"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "### `bye` - Exits Duke"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "Terminates the Duke program when you are done using Duke."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "bye"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 22,
      "-": 239
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_NO_DATA_TO_LOAD;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /** Location of the save file */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Loads any previously saved task list for the current Duke execution."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Notifies user if saved data was successfully loaded or if there are no saved data found."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Also notifies user if an error has occurred when loading saved data from file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param filePath Location of the file to load from."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasksData());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (e.getMessage().equals(ERROR_NO_DATA_TO_LOAD)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                ui.printNoDataLoaded();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                ui.printDukeErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /** Runs the program until termination.  */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        end();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void end() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Command command \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                command.execute(tasks, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                ui.printDukeErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Starts the execution of Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        new Duke(FILE_PATH).run();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 79,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Checks if the last command entered by the user is the exit command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return An indication of whether the exit command was given."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Executes the command and saves the latest version of the user\u0027s tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskList TaskList object with user\u0027s list of tasks and methods to operate on tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param storage Used to save user\u0027s tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error saving tasks to the file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        storage.saveTasksData(taskList.getTasks());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Adds a Deadline task to the user\u0027s task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the task and its deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public DeadlineCommand(String taskDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Executes the command and adds a Deadline task if its description is given."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskList TaskList object with user\u0027s list of tasks and methods to operate on tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param storage Used to save user\u0027s tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error adding task or saving tasks to the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.addDeadlineTask(taskDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DEADLINE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETE_TASK_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Deletes a task from the user\u0027s task list, according to an index given by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the task to be deleted in the form of its index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public DeleteCommand(String taskDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Executes the command and deletes a task if its description is given."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskList TaskList object with user\u0027s list of tasks and methods to operate on tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param storage Used to save user\u0027s tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error deleting a task or saving the remaining tasks to the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.deleteTask(taskDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DELETE_TASK_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Marks a task in the task list as done, according to an index given by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the task to be marked as done in the form of its index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public DoneCommand(String taskDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Executes the command and marks a task as done, if its description is given."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskList TaskList object with user\u0027s list of tasks and methods to operate on tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param storage Used to save user\u0027s tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error marking a task as done or saving the tasks to the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.markTaskAsDone(taskDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Adds an Event task to the user\u0027s task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the task and its event time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public EventCommand(String taskDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Executes the command and adds an Event task if its description is given."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskList TaskList object with user\u0027s list of tasks and methods to operate on tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param storage Used to save user\u0027s tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error adding task or saving tasks to the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.addEventTask(taskDescription);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_EVENT_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 42
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 12
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_FIND_TASK_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Finds all tasks that contains a certain keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public FindCommand(String taskDescription) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.findTasksAndPrint(taskDescription);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_FIND_TASK_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Lists all tasks in the TaskList to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Executes the command and prints the lists of tasks to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskList TaskList object with user\u0027s list of tasks and methods to operate on tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param storage Used to save user\u0027s tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error saving tasks to the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.printTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.data.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_TODO_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Adds a Todo task to the user\u0027s task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TodoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Executes the command and adds a Todo task if its description is given."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskList TaskList object with user\u0027s list of tasks and methods to operate on tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param storage Used to save user\u0027s tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error adding task or saving tasks to the file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        checkTaskDescriptionNotEmpty();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskList.addTodoTask(taskDescription);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super.execute(taskList, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void checkTaskDescriptionNotEmpty() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (taskDescription.isBlank()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_TODO_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 39
    }
  },
  {
    "path": "src/main/java/duke/data/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_UNKNOWN_TASK_TYPE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_WITH_FILE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a storage for user\u0027s list of tasks in the machine\u0027s local filesystem."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to the location where user\u0027s data is saved, represented by a"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * filepath, e.g., \u003ccode\u003edata/tasks.txt\u003c/code\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final int TASK_TYPE_INDICATOR \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final int START_OF_TASK_DESCRIPTION \u003d 7;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String DEADLINE_TASK_DELIMITER \u003d \" \\\\(by:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String EVENT_TASK_DELIMITER \u003d \" \\\\(at:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /** Filepath of user\u0027s current directory, retrieved in an OS-independent way */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String CURRENT_DIRECTORY \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Path dataDirectoryPath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Path dataFilePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Creates a Storage object to save data into the specified filepath."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param filepath Location of where data should be stored."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String directoryName \u003d filepath.split(\"/\")[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String fileName \u003d filepath.split(\"/\")[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        dataDirectoryPath \u003d Paths.get(CURRENT_DIRECTORY, directoryName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        dataFilePath \u003d Paths.get(CURRENT_DIRECTORY, directoryName, fileName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Saves user\u0027s list of tasks into a text file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param tasks List of Task objects to be saved."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error while writing to the file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void saveTasksData(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cString\u003e tasksStringList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Gets a list of string representations of task objects that are to be stored into the text file"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            tasksStringList.add(tasks.get(i).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            Files.write(dataFilePath, tasksStringList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_WITH_FILE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Loads tasks from a text file located in the filepath specified in the Storage object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * If tasks are formatted properly in the save file, tasks will be loaded appropriately"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * according to their type (Deadline, Event or Todo)."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error reading from the file or if a task type is incorrect."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasksData() throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        createSaveFileIfNotExist();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cString\u003e loadedTasksStringList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Casting into an ArrayList because readAllLines returns a List"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            loadedTasksStringList \u003d (ArrayList\u003cString\u003e) Files.readAllLines(dataFilePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_WITH_FILE);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (String task : loadedTasksStringList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            // Using a TaskType enum to identify what type the task to be loaded is"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            TaskType taskType;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskType \u003d getTaskType(task.charAt(TASK_TYPE_INDICATOR));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                loadTodoTask(task, loadedTasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                loadDeadlineTask(task, loadedTasks);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                loadEventTask(task, loadedTasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                throw new DukeException(ERROR_UNKNOWN_TASK_TYPE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Creates the data folder or file if any of them does not already exist."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is an error creating the folder or the file."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void createSaveFileIfNotExist() throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (!Files.exists(dataDirectoryPath)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Files.createDirectory(dataDirectoryPath);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            if (!Files.exists(dataFilePath)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                Files.createFile(dataFilePath);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_WITH_FILE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static TaskType getTaskType(char taskTypeIndicator) throws DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        switch(taskTypeIndicator) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return TaskType.TODO;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return TaskType.DEADLINE;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return TaskType.EVENT;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_UNKNOWN_TASK_TYPE);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void markTaskDoneIfDone (String task, ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (task.contains(Task.TICK_SYMBOL)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            loadedTasks.get(loadedTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void loadTodoTask(String task, ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d task.substring(START_OF_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Todo newTodoTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        loadedTasks.add(newTodoTask);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        markTaskDoneIfDone(task, loadedTasks);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void loadDeadlineTask(String task, ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d task.substring(START_OF_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] deadlineTaskParts \u003d taskDescription.split(DEADLINE_TASK_DELIMITER);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String deadlineTaskDescription \u003d deadlineTaskParts[0];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Ignores the closing bracket of the saved task in the text file by taking length of substring - 1"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String deadline \u003d deadlineTaskParts[1].substring(0, deadlineTaskParts[1].length() - 1);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Deadline newDeadlineTask \u003d new Deadline(deadlineTaskDescription, deadline);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        loadedTasks.add(newDeadlineTask);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        markTaskDoneIfDone(task, loadedTasks);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void loadEventTask(String task, ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d task.substring(START_OF_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] eventTaskParts \u003d taskDescription.split(EVENT_TASK_DELIMITER);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String eventTaskDescription \u003d eventTaskParts[0];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Ignores the closing bracket of the saved task in the text file by taking length of substring - 1"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String eventTime \u003d eventTaskParts[1].substring(0, eventTaskParts[1].length() - 1);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Event newEventTask \u003d new Event(eventTaskDescription, eventTime);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        loadedTasks.add(newEventTask);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        markTaskDoneIfDone(task, loadedTasks);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 185
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Signals an error when running Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Covers all the different type of exceptions that can occur when running Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Uses \u003ccode\u003ee.getMessage\u003c/code\u003e to identify which specific error has occurred."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param errorType Identifies the specific error corresponding to one of the errors in ErrorTypeManager."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public DukeException(String errorType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/ErrorMessages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a collection of error messages to print out to the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * based on the type of error that occurred."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class ErrorMessages {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // Duke related error messages"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String SAD_FACE_EMOJI \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_COMMAND_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_TODO_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_EVENT_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_EVENT_WRONG_FORMAT_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The format to enter in an event task is \\\"event \u003ctask\u003e /at \u003cevent\u0027s time\u003e\\\"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DEADLINE_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DEADLINE_WRONG_FORMAT_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The format to enter in a deadline task is \\\"deadline \u003ctask\u003e /by \u003cdeadline\u003e\\\"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of the done command cannot be empty.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_WRONG_INDEX_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The task to mark as done must be an existing task.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_NOT_NUMBER_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! Use numbers to specify which task to be marked as done.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETE_TASK_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of the delete command cannot be empty.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETE_TASK_NOT_NUMBER_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! Use numbers to specify which task to be deleted.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETE_TASK_WRONG_INDEX_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The task to be deleted must be an existing task.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_FIND_TASK_EMPTY_DESCRIPTION_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! The description of the find command cannot be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String UNEXPECTED_ERROR \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! An unidentified error has occurred! Please take note!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_UNKNOWN_TASK_INDICATOR_MESSAGE \u003d  SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! Unidentified task type! Load file fail.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    // File Error message"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String FILE_ERROR_MESSAGE \u003d SAD_FACE_EMOJI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \" OOPS!!! Something is wrong with accessing the save file. Please check again\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 44
    }
  },
  {
    "path": "src/main/java/duke/exception/ErrorTypeManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Container for error types that can occur when running Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class ErrorTypeManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_UNKNOWN_COMMAND \u003d \"error_command\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_TODO_EMPTY_DESCRIPTION \u003d \"error_todo_empty_description\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_EVENT_EMPTY_DESCRIPTION \u003d \"error_event_empty_description\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_EVENT_WRONG_FORMAT \u003d \"error_event_wrong_format\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DEADLINE_EMPTY_DESCRIPTION \u003d \"error_deadline_empty_description\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DEADLINE_WRONG_FORMAT \u003d \"error_deadline_wrong_format\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            \u003d \"error_markTaskDone_empty_description\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_WRONG_INDEX \u003d \"error_markTaskAsDone_wrong_index\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_MARKTASKASDONE_NOT_NUMBER \u003d \"error_markTaskAsDone_not_number\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETE_TASK_EMPTY_DESCRIPTION"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            \u003d \"error_delete_empty_description\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETE_TASK_NOT_NUMBER \u003d \"error_deleteTask_not_number\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_DELETE_TASK_WRONG_INDEX \u003d \"error_deleteTask_wrong_index\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_FIND_TASK_EMPTY_DESCRIPTION\u003d \"error_find_task_empty_description\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_UNKNOWN_TASK_TYPE \u003d \"error_unknownTaskType\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_NO_DATA_TO_LOAD \u003d \"error_no_data_to_load\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String ERROR_WITH_FILE \u003d \"error_with_file\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 25
    }
  },
  {
    "path": "src/main/java/duke/parser/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a parser that parses date inputs into LocalDate objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static String dateSubstringInInput;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Searches a task\u0027s description for a string of the format \u0027yyyy-mm-dd\u0027 which represents a date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * specified by the user and returns a LocalDate object from it."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * If no such string is found, null is returned instead."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Task\u0027s description which might contain a string of the form \u0027yyyy-mm-dd\u0027."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return LocalDate object corresponding to the date specified by user in the task description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static LocalDate getTaskDate(String taskDescription) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] taskDescriptionParts \u003d taskDescription.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        LocalDate dateFoundFromInput \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Searches for a word with \u0027yyyy-mm-dd\u0027 format that could be parsed into a LocalDate object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (String substring : taskDescriptionParts) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                dateFoundFromInput \u003d LocalDate.parse(substring);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                dateSubstringInInput \u003d substring;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return dateFoundFromInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Updates the date description of a Deadline or Event task to reflect the formatted date string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * If task description did not contain a string of the format \u0027yyyy-mm-dd\u0027, it is assumed that"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the user did no specify any task and thus task description will not change."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Task description to be updated."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param dateInput Parsed date from task description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Updated date description."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static String newDateDescription(String taskDescription, LocalDate dateInput) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String formattedDate \u003d dateInput.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String newDescription \u003d taskDescription.replace(dateSubstringInInput, formattedDate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return newDescription;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 55
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a parser that parses user inputs into commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param userInput Full user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return The command object based on the user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If the command parsed is an unknown command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String command \u003d getCommandFromInput(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d getTaskDescriptionFromInput(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new DoneCommand(taskDescription);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new DeleteCommand(taskDescription);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new TodoCommand(taskDescription);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new DeadlineCommand(taskDescription);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new EventCommand(taskDescription);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            return new FindCommand(taskDescription);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static String getCommandFromInput(String userInput) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Splits user input into different words to distinguish the command from the task\u0027s information"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] inputParts \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String command \u003d inputParts[0].toLowerCase();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private static String getTaskDescriptionFromInput(String userInput) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] inputParts \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Forms the task description after splitting user input into words and ignoring the command word"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (int i \u003d 1; i \u003c inputParts.length; i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskDescription \u003d String.join(\" \", taskDescription, inputParts[i]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskDescription \u003d taskDescription.trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 76
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a Deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * a task represented by its done status, task description and deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * A date specified in deadline would be parsed into a LocalDate object if it is of the form: \u0027yyyy-mm-dd\u0027."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Example of a Deadline task: \u003ccode\u003e[D][✓] return book  (by: Sep 24 2020 10pm)\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String TASK_INDICATOR \u003d \"[D]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the deadline specified by the user as a string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Deadline as a string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Updates the deadline to include the formatted date string if a date was passed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * into the task description in a \u0027yyyy-mm-dd\u0027 format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param deadline Deadline description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void setDeadline(String deadline) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Sets a LocalDate object to the task\u0027s date attribute if a date string with the \u0027yyyy-mm-dd\u0027 format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * is found in the task description. If no string of such format is found, null will be set."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param date Date specified by the user for this task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the LocalDate object tied to this task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Date for this task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return TASK_INDICATOR + super.toString() + \" (by:\" + deadline + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents an Event task. An \u003ccode\u003eEvent\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * a task represented by its done status, task description and event timing."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * A date specified in event timing would be parsed into a LocalDate object if it is of the form: \u0027yyyy-mm-dd\u0027."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Example of an Event task: \u003ccode\u003e[E][✓] Christmas party  (at: Dec 24 2020 11pm)\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String TASK_INDICATOR \u003d \"[E]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the event time specified by the user as a string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Event time as a string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String getEventTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Updates the event time to include the formatted date string if a date was passed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * into the task description in a \u0027yyyy-mm-dd\u0027 format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param eventTime Event time description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void setEventTime(String eventTime) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Sets a LocalDate object to the task\u0027s date attribute if a date string with the \u0027yyyy-mm-dd\u0027 format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * is found in the task description. If no string of such format is found, null will be set."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param date Date specified by the user for this task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the LocalDate object tied to this task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Date for this task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return TASK_INDICATOR + super.toString() + \" (at:\" + eventTime + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a task created by the user. A \u003ccode\u003eTask\u003c/code\u003e object is represented by"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * its done status and task description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String TICK_SYMBOL \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public static final String CROSS_SYMBOL \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a tick or a cross symbol depending on the task\u0027s done status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Indication of the done status of a task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return (isDone ? TICK_SYMBOL : CROSS_SYMBOL);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the description of a task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Task information."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Sets the done status of a task to be done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 47
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.parser.DateParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_WRONG_FORMAT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETE_TASK_NOT_NUMBER;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETE_TASK_WRONG_INDEX;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_WRONG_FORMAT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_NOT_NUMBER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_WRONG_INDEX;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_NO_DATA_TO_LOAD;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents the task list and contains methods to operate on tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String DEADLINE_TASK_DELIMITER \u003d \"/by\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String EVENT_TASK_DELIMITER \u003d \"/at\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Constructs task list from stored data (if any)."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Also creates a new Ui object and prints a success message if data was loaded successfully."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param loadedTasks List of tasks loaded from save file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If there is no loaded data."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedTasks) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (loadedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_NO_DATA_TO_LOAD);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks \u003d loadedTasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printSuccessfulDataLoading();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Constructs an empty task list if there is no data to be loaded."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Creates a new Ui object as well."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a list of tasks that the user has currently."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return An ArrayList of tasks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns the current count for the number of tasks in the task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return Number of tasks in the task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints the list of tasks to the user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTaskList() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTasks(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Marks a task as done in the task list based on the index of the task passed in as"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the task description for the done command. If the operation is carried out successfully,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * a message will be printed out to notify the user that the specific task is marked as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the task to be marked as done in the form of its index."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If the task description is not a number to parse,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * or if the index passed in does not correspond to any task in the task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void markTaskAsDone(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int completedTaskIndex;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Task taskToBeMarkedAsDone;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            completedTaskIndex \u003d Integer.parseInt(taskDescription.split(\" \")[0]) - 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_MARKTASKASDONE_NOT_NUMBER);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskToBeMarkedAsDone \u003d tasks.get(completedTaskIndex);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_MARKTASKASDONE_WRONG_INDEX);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        taskToBeMarkedAsDone.markAsDone();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printMarkAsDoneMessage(taskToBeMarkedAsDone);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Deletes a task in the task list based on the index of the task passed in as"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * the task description for the delete command. If the operation is carried out successfully,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * a message will be printed out to notify the user that the specific task is deleted."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the task to be deleted in the form of its index."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If the task description is not a number to parse,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * or if the index passed in does not correspond to any task in the task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void deleteTask(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        int taskToDeleteIndex;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Task taskToBeDeleted;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskToDeleteIndex \u003d Integer.parseInt(taskDescription.split(\" \")[0]) - 1;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DELETE_TASK_NOT_NUMBER);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            taskToBeDeleted \u003d tasks.get(taskToDeleteIndex);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DELETE_TASK_WRONG_INDEX);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTaskDeletedMessage(taskToBeDeleted, getTaskCount());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks.remove(taskToBeDeleted);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Adds a Todo task, with its description filled, into the task list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message to notify the user if the Todo task is added successfully."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the todo task to be added."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void addTodoTask(String taskDescription) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Todo newTodoTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks.add(newTodoTask);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTaskAddedMessage(newTodoTask, getTaskCount());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Adds a Deadline task, with its description and deadline filled, into the task list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * If task description contains a string of the form \u0027yyyy-mm-dd\u0027, it would be parsed as a LocalDate object."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message to notify the user if the Deadline task is added successfully."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the Deadline task and its deadline."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If the Deadline task description is given in a wrong format or if it is empty."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void addDeadlineTask(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Splits full task description into task details and deadline"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] taskDescriptionParts \u003d taskDescription.split(DEADLINE_TASK_DELIMITER);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String deadlineTaskDescription;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String deadline;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            deadlineTaskDescription \u003d taskDescriptionParts[0];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            deadline \u003d taskDescriptionParts[1];"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DEADLINE_WRONG_FORMAT);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (deadlineTaskDescription.isBlank()) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_DEADLINE_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Deadline newDeadlineTask \u003d new Deadline(deadlineTaskDescription, deadline);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        LocalDate deadlineDate \u003d DateParser.getTaskDate(newDeadlineTask.getDeadline());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        newDeadlineTask.setDate(deadlineDate);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Updates task description to reflect the formatted date"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (deadlineDate !\u003d null) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            String newDeadline \u003d DateParser.newDateDescription(newDeadlineTask.getDeadline(), deadlineDate);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            newDeadlineTask.setDeadline(newDeadline);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks.add(newDeadlineTask);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTaskAddedMessage(newDeadlineTask, getTaskCount());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Adds an Event task, with its description and event time filled, into the task list."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * If task description contains a string of the form \u0027yyyy-mm-dd\u0027, it would be parsed as a LocalDate object."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message to notify the user if the Event task is added successfully."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param taskDescription Description of the Event task and its event time."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @throws DukeException If the Event task description is given in a wrong format or if it is empty."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void addEventTask(String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Splits full task description into task details and event timing"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String[] taskDescriptionParts \u003d taskDescription.split(EVENT_TASK_DELIMITER);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String eventTaskDescription;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        String eventTime;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            eventTaskDescription \u003d taskDescriptionParts[0];"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            eventTime \u003d taskDescriptionParts[1];"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_EVENT_WRONG_FORMAT);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (eventTaskDescription.isBlank()) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            throw new DukeException(ERROR_EVENT_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        Event newEventTask \u003d new Event(eventTaskDescription, eventTime);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        LocalDate eventDate \u003d DateParser.getTaskDate(newEventTask.getEventTime());"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        newEventTask.setDate(eventDate);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        // Updates task description to reflect the formatted date"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (eventDate !\u003d null) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            String newEventTime \u003d DateParser.newDateDescription(newEventTask.getEventTime(), eventDate);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            newEventTask.setEventTime(newEventTime);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        tasks.add(newEventTask);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printTaskAddedMessage(newEventTask, getTaskCount());"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints the list of tasks that contains the keyword as specified by the user."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param keyword Search keyword to find tasks that contain it."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void findTasksAndPrint(String keyword) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ArrayList\u003cTask\u003e foundTaskList \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                .filter((t) -\u003e t.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        ui.printFoundTasks(foundTaskList);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 256
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * Represents a Todo task. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * a task represented by its done status and task description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " * e.g., \u003ccode\u003e[T][✓] join sports club\u003c/code\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String TASK_INDICATOR \u003d \"[T]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return TASK_INDICATOR + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 20
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_COMMAND_MESSAGE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DEADLINE_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DEADLINE_WRONG_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DELETE_TASK_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DELETE_TASK_NOT_NUMBER_MESSAGE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_DELETE_TASK_WRONG_INDEX_MESSAGE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_EVENT_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_EVENT_WRONG_FORMAT_MESSAGE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_FIND_TASK_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_MARKTASKASDONE_NOT_NUMBER_MESSAGE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_MARKTASKASDONE_WRONG_INDEX_MESSAGE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_TODO_EMPTY_DESCRIPTION_MESSAGE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.ERROR_UNKNOWN_TASK_INDICATOR_MESSAGE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.FILE_ERROR_MESSAGE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorMessages.UNEXPECTED_ERROR;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DEADLINE_WRONG_FORMAT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETE_TASK_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETE_TASK_NOT_NUMBER;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_DELETE_TASK_WRONG_INDEX;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_EVENT_WRONG_FORMAT;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_FIND_TASK_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_NOT_NUMBER;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_MARKTASKASDONE_WRONG_INDEX;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_TODO_EMPTY_DESCRIPTION;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_UNKNOWN_TASK_TYPE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "import static duke.exception.ErrorTypeManager.ERROR_WITH_FILE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String DIVIDER \u003d \"______________________________________________________\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\" + System.lineSeparator()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String NOTE_TO_USER \u003d \"(Available commands are: \u0027list\u0027, \u0027todo\u0027, \u0027event\u0027,\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"\u0027deadline\u0027, \u0027done\u0027, \u0027delete\u0027, \u0027find\u0027 and \u0027bye\u0027)\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + System.lineSeparator() + \"(Note: Dates should be given in \u0027yyyy-mm-dd\u0027 format)\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String DUKE_LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String SUCCESSFUL_DATA_LOAD_MESSAGE \u003d \"(Note: \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"Your saved data was successfully loaded!)\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String FAIL_DATA_LOAD_MESSAGE \u003d \"(Note: \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            + \"Could not detect any saved data!)\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final String NO_MATCHING_TASK_MESSAGE \u003d \"There are no matching tasks in your list.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Gets input from the user and returns it as a string."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return SCANNER.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a horizontal line as a divider for clearer display of messages."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printDivider() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message wrapped in horizontal lines for a clearer display."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param message Message to be printed to the user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printMessageToUser(String message) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void printDukeHelloMessage() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(\"Hello from\\n\" + DUKE_LOGO);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a note to user to help them get started with using Duke."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    private void printNoteToUser() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(NOTE_TO_USER);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a welcome message at the start of program execution that consists"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * of greetings, Duke\u0027s logo and a note to user to help them get started with using Duke."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDukeHelloMessage();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printNoteToUser();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints an exit message upon the termination of the program."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(EXIT_MESSAGE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message to notify the user that a specific task is successfully added to the"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * task list. Includes information of how many tasks are currently in the list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param task Task being added to the task list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param numberOfTasks Number of tasks currently in the task list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTaskAddedMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(\"Got it. I\u0027ve added this task:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + \"  \" + task + System.lineSeparator()"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + printTaskCount(numberOfTasks));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message to notify the user that a specific task is successfully deleted from the"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * task list. Includes information of how many tasks are remaining in the list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param task Task being deleted from the task list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param numberOfTasks Number of tasks remaining in the task list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTaskDeletedMessage (Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + \"  \" + task + System.lineSeparator()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + printTaskCount(numberOfTasks - 1));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Returns a string containing information about the number of tasks currently in the task list."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param numberOfTasks Number of tasks currently in the task list."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public String printTaskCount(int numberOfTasks) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        return(\"Now you have \" + numberOfTasks +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                (numberOfTasks \u003d\u003d 1 ? \" task in the list.\" : \" tasks in the list.\"));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message to notify the user that a specific task is successfully marked as done."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param task Task being marked as done."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printMarkAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printMessageToUser(\"Nice! I\u0027ve marked this task as done: \""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                + System.lineSeparator() + \"  \" + task);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints the list of tasks to the user."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param tasks List of tasks the user has."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints the list of tasks that contains a keyword in their description."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Notifies user if there is no task contains the keyword they are searching for."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param tasks List of tasks containing the keyword in their description."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printFoundTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println(NO_MATCHING_TASK_MESSAGE);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "                System.out.println((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message to notify the user that task list data was successfully loaded into the"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * current program instance."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printSuccessfulDataLoading() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(SUCCESSFUL_DATA_LOAD_MESSAGE);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints a message to notify the user that no task list data was detected."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printNoDataLoaded() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        System.out.println(FAIL_DATA_LOAD_MESSAGE);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * Prints an error message, according to the specific error that occurred, to the user."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     * @param errorType Identity of the error that occurred."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    public void printDukeErrorMessage(String errorType) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_UNKNOWN_COMMAND:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_TODO_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_TODO_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_EVENT_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_EVENT_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_EVENT_WRONG_FORMAT:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_EVENT_WRONG_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DEADLINE_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DEADLINE_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DEADLINE_WRONG_FORMAT:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DEADLINE_WRONG_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_MARKTASKASDONE_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_MARKTASKASDONE_WRONG_INDEX:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_MARKTASKASDONE_WRONG_INDEX_MESSAGE);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_MARKTASKASDONE_NOT_NUMBER:"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_MARKTASKASDONE_NOT_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DELETE_TASK_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DELETE_TASK_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DELETE_TASK_NOT_NUMBER:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DELETE_TASK_NOT_NUMBER_MESSAGE);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_DELETE_TASK_WRONG_INDEX:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_DELETE_TASK_WRONG_INDEX_MESSAGE);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_FIND_TASK_EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_FIND_TASK_EMPTY_DESCRIPTION_MESSAGE);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_UNKNOWN_TASK_TYPE:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(ERROR_UNKNOWN_TASK_INDICATOR_MESSAGE);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        case ERROR_WITH_FILE:"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(FILE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            printMessageToUser(UNEXPECTED_ERROR);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 276
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline do homework /by no idea :p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "wrong command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "todo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event /at Fri 2pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event testA /at"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline /by tmr 2pm"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline testB /by"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 50"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done a"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 50"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "find hi"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "find why"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "find homework"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "find work"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "find book"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "find project"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "find o"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "find"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline test parse date OK /by 2020-09-24 10pm"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline test parse date /by 2020-09-224 10pm"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline test parse date /by no Date 10pm"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event test parse date OK /at 2020-12-24 11pm"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event test parse date /at 2020-09-00"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "event test parse date /at no Date"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "deadline test parse date OK /by 2020-10-10"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "done 12"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "delete 12"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 63
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\commands\\*.java ..\\src\\main\\java\\duke\\data\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhi-You"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Zhi-You": 2,
      "-": 19
    }
  }
]
