[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### List tasks "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Lists existing tasks that have been entered."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### Add Todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Adds a todo task to the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### Add Deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Adds a deadline task to the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### Add Event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Adds an event task to the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### Done Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Marks task as complete."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### Delete Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Deletes task from task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### Find Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Finds task from list of existing tasks containing keywords."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Existing tasks in the task list will be shown."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\u0027list\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": "  \u003e You currently have no tasks, sire!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": "  \u003e Here are your tasks, sire: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "  1.[T][✘] read book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### \u0027todo\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Adds a todo task to the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\u0027todo read book\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Very well. This task has been added: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\t[T][✘] read book"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Now you have 1 task in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "randynyl"
        },
        "content": " "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### \u0027deadline\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Adds a deadline task to the list with a finish-by time separated by \u0027/by\u0027."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Finish-by time must be in the format yyyy-mm-dd."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\u0027deadline read book /by 2020-10-10\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Very well. This task has been added: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\t[D][✘] read book (by: Oct 10 2020)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Now you have 1 task in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### \u0027event\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Adds an event task to the list with event details separated by \u0027/at\u0027."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\u0027event group meeting /at wed 2pm\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Very well. This task has been added: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\t[E][✘] read book (at: wed 2pm)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Now you have 1 task in the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "randynyl"
        },
        "content": "  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### \u0027done\u0027"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Marks an existing task as completed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\u0027done 1\u0027"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Excellent. This task shall be marked as done: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t  [T][✓] read book"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### \u0027delete\u0027"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Deletes an existing task from the task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\u0027delete 1\u0027"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Very Well. Your task has been removed:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\t[T][✓] read book"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Now you have 0 tasks in the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "randynyl"
        },
        "content": "### \u0027fine\u0027"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "randynyl"
        },
        "content": "Finds tasks containing the specified key phrase."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\u0027find book\u0027"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t\u003e Here are the matching tasks in your wondrous list:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t1.[D][✘] read book (by: Oct 10 2020)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t2.[D][✘] return book (by: Oct 11 2020)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "randynyl"
        },
        "content": "\t3.[E][✘] book fair (at: Nov 18 2pm)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      }
    ],
    "authorContributionMap": {
      "randynyl": 99,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Main class of the program"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * to allow users to track various sorts of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    static TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Constructor to load previously stored tasks, if any."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * If no previously stored tasks, a new task list will be created."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param filePath string path of file to load and store task information"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks \u003d new TaskList(IOManager.getTasksFromFile(filePath));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printFileErrorMessage(e);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Begins interaction with user to simulate a virtual assistant"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printGreetings();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Parser.executeCommand(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            IOManager.writeToFile(FILE_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printFileErrorMessage(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printGoodbye();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Main function to call the start of the program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        new Duke(FILE_PATH).run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 51,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/IOManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Handles the loading and storing of the tasks to a file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class IOManager {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Reads an existing file of previously stored tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param filePath Path of the file in the directory."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return The list of tasks that was previously stored."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @throws FileNotFoundException No existing file is found."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static ArrayList\u003cTask\u003e readFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Task nextTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            String[] taskComponents \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            String taskTag \u003d taskComponents[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            String taskComplete \u003d taskComponents[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            String taskName \u003d taskComponents[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            switch(taskTag) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"[T]\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                nextTask \u003d new Todo(taskComponents[2]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"[D]\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                String deadlineDetails \u003d taskComponents[3];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                nextTask \u003d new Deadline(taskName, deadlineDetails);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"[E]\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                String eventDetails \u003d taskComponents[3];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                nextTask \u003d new Event(taskName, eventDetails);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                throw new IllegalStateException(\"Unexpected task tag: \" + taskTag);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            if (\"1\".equals(taskComplete)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                nextTask.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks.add(nextTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Writes the current list of tasks to the file to be saved."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param filePath Path of the file to be stored in the directory."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @throws IOException File could not be saved."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void writeToFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        StringBuilder textToWrite \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        for (Task task : Duke.tasks.getTasks()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            textToWrite.append(task.getTag()).append(\" | \").append(task.getStatusBinary()).append(\" | \").append(task.getTaskName());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            if (task instanceof Event || task instanceof Deadline) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                textToWrite.append(\" | \").append(task.getDetails());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            textToWrite.append(System.lineSeparator());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        fw.write(String.valueOf(textToWrite));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Retrieves the tasks from a previously saved file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * If no previously saved file, creates a new file for future tasks"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * to be saved in."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param filePath Path of file in the directory."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return The list of tasks that was previously stored."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @throws IOException Error loading file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTasksFromFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks.addAll(readFileContents(filePath));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 98
    }
  },
  {
    "path": "src/main/java/duke/command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Exception in the event user enters a non-existing number pertaining to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * an item that should exist in the list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 8
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Handles respective user inputs and commands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Receives user\u0027s input and carries out the necessary command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Loops back if invalid command is entered for user to try again"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void executeCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String userCommand \u003d userInput.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        while (!\"bye\".equals(userCommand)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printLineBorder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            switch (userCommand) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                tasks.listTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                executeDone(tasks, userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                executeTodo(tasks, userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                executeDeadline(tasks, userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                executeEvent(tasks, userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                executeDelete(tasks, userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                executeFind(tasks, userInput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                Ui.printRetryMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printLineBorder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            userCommand \u003d userInput.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static void executeFind(TaskList tasks, String userInput) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            String stringToMatch \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            ArrayList\u003cTask\u003e tasksFound \u003d tasks.findTasks(stringToMatch);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printFoundTasksMessage(tasksFound);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printInvalidFindMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static void executeDelete(TaskList tasks, String userInput) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks.deleteTask(userInput);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printInvalidDeleteMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static void executeEvent(TaskList tasks, String userInput) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Event newEvent \u003d getEventFromInput(userInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks.addTask(newEvent);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printInvalidEventMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static void executeDeadline(TaskList tasks, String userInput) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Deadline newDeadline \u003d getDeadlineFromInput(userInput);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks.addTask(newDeadline);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printInvalidDeadlineMessage();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printInvalidTimeMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static void executeTodo(TaskList tasks, String userInput) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Todo newTodo \u003d getTodoFromInput(userInput);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks.addTask(newTodo);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printInvalidTodoMessage();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static void executeDone(TaskList tasks, String userInput) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            tasks.resolveTask(userInput);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            Ui.printInvalidDoneMessage();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static Event getEventFromInput(String userInput) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String[] eventComponents \u003d userInput.split(\"event | /at \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String eventName \u003d eventComponents[1];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String eventDetails \u003d eventComponents[2];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Event newEvent \u003d new Event(eventName, eventDetails);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return newEvent;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static Deadline getDeadlineFromInput(String userInput) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String[] deadlineComponents \u003d userInput.split(\"deadline | /by \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String taskName \u003d deadlineComponents[1];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String taskDeadline \u003d deadlineComponents[2];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(taskName, taskDeadline);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return newDeadline;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static Todo getTodoFromInput (String userInput) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String taskName \u003d userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Todo newTodo \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return newTodo;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 130
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Represents a task with both a description and a finish-by time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private LocalDate deadlineTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static final String DEADLINE_TAG \u003d \"[D]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Constructor for the Deadline Class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param taskName description of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param deadlineTime time to finish task by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public Deadline(String taskName, String deadlineTime) throws DateTimeParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        this.deadlineTime \u003d LocalDate.parse(deadlineTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * converts the Deadline object to a string for its details to be printed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the string format of its tag, name and finish-by time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String deadlineDetails \u003d \" (by: \" + getDetails() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return DEADLINE_TAG + super.toString() + deadlineDetails;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * gets the deadline tag for identification of task type"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the tag \"[D]\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return DEADLINE_TAG;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * gets the finish-by time of the deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the finish-by time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return deadlineTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Represents an upcoming task with both a description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * and further details such as time or place."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static final String EVENT_TAG \u003d \"[E]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Constructor for the Event Class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param taskName description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param details time or place of event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public Event(String taskName, String details) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * converts the Event object to a string for its details to be printed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the string format of its tag, name and details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String eventDetails \u003d \" (at: \" + details + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return EVENT_TAG + super.toString() + eventDetails;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * gets the event tag for identification of task type"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the tag \"[E]\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return EVENT_TAG;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * gets the details of the event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the event\u0027s details."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Abstract class that can be inherited by either a Task, Event or Deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Constructor of the Task abstract class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param taskName Description of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Getter for task name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return Name of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Setter for task name."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param taskName New name of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Marks task as completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Checks if the task has been completed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return True if the task has been marked as completed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Gets the icon of the task in ASCII representing if it has been completed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the tick symbol if task has been completed, a cross symbol if it has not."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Gets the binary string completion status of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return 1 if task has been completed, 0 if it has not."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getStatusBinary() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Converts the Task object to a string for its details to be printed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return The string format details of the Task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getTaskName();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * returns a tag specific to the type of Task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the tag of the respective type of task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public abstract String getTag();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Gets the additional details respective to the task, if any."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return a string format of the details of the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "randynyl": 89
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.command.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Represents the collection of tasks that the user has entered."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param tasks Any tasks that have previously been entered and stored."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            this.tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Default class constructor."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Called if no tasks are loaded."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * returns the array of tasks currently stored."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Deletes an existing task in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param userInput String number of the task representing its position in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @throws DukeException User enters an integer of a non-existing list item."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @throws NumberFormatException User does not enter an integer."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public void deleteTask(String userInput)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        if (taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Task taskToRemove \u003d tasks.get(taskNumber-1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        tasks.remove(taskNumber-1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printDeleteTaskMessage(taskToRemove);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printTaskCountMessage(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Completes a task inside the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param userInput String number of the task representing its position in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @throws DukeException User enters an integer of a non-existing list item."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @throws NumberFormatException User does not enter an integer."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public void resolveTask(String userInput)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        if (taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printTaskDoneMessage(tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        tasks.get(taskNumber-1).markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printTaskDetails(tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints all the tasks currently in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Includes the task number, task tag, description of task and details, if any."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printListTasksMessage(tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param task Task object to be added."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printAddedTaskMessage(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        Ui.printTaskCountMessage(tasks);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String stringToMatch) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        for (Task task : getTasks()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            if (task.getTaskName().toLowerCase().contains(stringToMatch.toLowerCase())) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                tasksFound.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 103
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * Represents a basic task with only a description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": " * and no additional details"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static final String TODO_TAG \u003d \"[T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Constructor of the To-do class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param taskName The description of the to-do task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * converts the Task object to a string for its details to be printed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the string format of its tag and name."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return TODO_TAG + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * gets the to-do tag for identification of task type"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @return the tag \"[T]\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        return TODO_TAG;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 35
    }
  },
  {
    "path": "src/main/java/duke/ui/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Ui.TAB_SPACE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"\u003e Ohhh my sire please give me a valid command\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_TASK_DELETED \u003d \"\u003e Very Well. Your task has been removed:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"\u003e Goodbye, sire. Fare thee well.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d TAB_SPACE + \"\u003e Good day, sire, Percival at your disposal.\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            + System.lineSeparator() + TAB_SPACE + \"\u003e How may I be of service?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_TASK_ADDED \u003d \"\u003e Very well. This task has been added: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_INVALID_DONE \u003d \"\u003e Please enter an existing task number to complete!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_INVALID_TODO \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            \"\u003e Pardon me my lord but the description of a todo mustn\u0027t be empty!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_INVALID_DEADLINE \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            \"\u003e Sire, please ensure you have the deadline name and time separated with \u0027/by\u0027\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_INVALID_DEADLINE_TIME \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            \"\u003e Please enter the date in YYYY-MM-DD format!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_INVALID_EVENT \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            \"\u003e Sire, please ensure you have the event name and time separated with \u0027/at\u0027\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_INVALID_DELETE \u003d \"\u003e Please enter an existing task number to delete!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_LIST_TASKS \u003d \"\u003e Here are your tasks, sire: \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_LIST_TASKS_NONE \u003d \"\u003e You currently have no tasks, sire!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_FOUND_TASKS_NONE \u003d \"\u003e No tasks found milord!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_FOUND_TASKS \u003d \"\u003e Here are the matching tasks in your wondrous list:\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String MESSAGE_INVALID_FIND \u003d \"\u003e Please enter a string to match your tasks with!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 28
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_COMMAND_FORMAT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_TASK_DELETED;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_GOODBYE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_TASK_ADDED;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_DONE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_TODO;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_DEADLINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_DEADLINE_TIME;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_EVENT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_DELETE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_LIST_TASKS;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_LIST_TASKS_NONE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_FOUND_TASKS_NONE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_FOUND_TASKS;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "randynyl"
        },
        "content": "import static duke.ui.Messages.MESSAGE_INVALID_FIND;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "randynyl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static final String TAB_SPACE \u003d \"\\t\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    private static final String DIVIDER \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints the message confirming task deletion."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param task Task that was deleted."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printDeleteTaskMessage(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_TASK_DELETED);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + TAB_SPACE + task.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints the message informing user that the entered command was invalid"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * and allow user to re-enter a command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printRetryMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_INVALID_COMMAND_FORMAT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints the line borders signifying the start and end"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * of an output message block."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printLineBorder() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + DIVIDER);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints the farewell message to the user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * upon exit of the program."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        printLineBorder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        printLineBorder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints the greetings message to the user"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * on the start of the program."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printGreetings() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        printLineBorder();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        printLineBorder();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message indicating the number of tasks currently"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * in the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printTaskCountMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        String plural;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            plural \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            plural \u003d \"s\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.printf(TAB_SPACE + \"\u003e Now you have \" + tasks.size() + \" task%s in the list.%n\", plural);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message confirming that a task has been added."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param task Task that was just added."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printAddedTaskMessage(Task task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_TASK_ADDED);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + TAB_SPACE + task.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message informing the user that the done command was invalid."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printInvalidDoneMessage() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_INVALID_DONE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message informing the user that the to-do command was invalid."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printInvalidTodoMessage() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_INVALID_TODO);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message informing the user that the deadline command was invalid."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printInvalidDeadlineMessage() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_INVALID_DEADLINE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message informing the user that"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * the deadline time entered was invalid."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printInvalidTimeMessage() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_INVALID_DEADLINE_TIME);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message informing the user that the event command was invalid."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printInvalidEventMessage() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_INVALID_EVENT);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message informing the user that the delete command was invalid."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printInvalidDeleteMessage() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_INVALID_DELETE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message informing the user that"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * a saved file was could not be loaded."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printFileErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.print(\"Could not find saved file.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints a message confirming that a task has been marked as complete."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param task Task that was just marked complete."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printTaskDoneMessage(Task task) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            System.out.println(TAB_SPACE + \"\u003e This task has already been completed!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            System.out.println(TAB_SPACE + \"\u003e Excellent. This task shall be marked as done: \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints the string format of a task\u0027s description and details, if any."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printTaskDetails(Task task) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + \"  \" + task.toString());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * Prints the strings of all the tasks currently in the list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     * @param tasks Tasks that currently exist in the task list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "randynyl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printListTasksMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            System.out.println(TAB_SPACE + MESSAGE_LIST_TASKS_NONE);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            System.out.println(TAB_SPACE + MESSAGE_LIST_TASKS);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                System.out.println(TAB_SPACE + (i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printFoundTasksMessage(ArrayList\u003cTask\u003e tasksFound) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        if (tasksFound.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            System.out.println(TAB_SPACE + MESSAGE_FOUND_TASKS_NONE);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            System.out.println(TAB_SPACE + MESSAGE_FOUND_TASKS);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            for (int i \u003d 0; i \u003c tasksFound.size(); i++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "randynyl"
        },
        "content": "                System.out.println(TAB_SPACE + (i + 1) + \".\" + tasksFound.get(i).toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "randynyl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    public static void printInvalidFindMessage() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "randynyl"
        },
        "content": "        System.out.println(TAB_SPACE + MESSAGE_INVALID_FIND);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "randynyl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "randynyl"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "randynyl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "randynyl": 202
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "randynyl"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "randynyl"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "randynyl"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "randynyl"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "randynyl"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "randynyl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "randynyl": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "randynyl"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "randynyl": 1,
      "-": 20
    }
  }
]
