[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    private enum MainCommand{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        LIST, BYE, TODO, EVENT, DEADLINE, DONE, DELETE"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public static void deleteTask(int index){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        Task removedTask \u003d taskList.remove(index-1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + removedTask.toString() +\"\\nNow you have \"+ taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public static void printCommandList(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        for (i\u003d0; i\u003c Task.getNumberOfTasks(); i++){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            if (taskList.get(i).isCompleted()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                System.out.println((i+1) + \". \" +taskList.get(i)); // use a tostring method"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                System.out.println((i+1) + \". \" +taskList.get(i));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public static MainCommand findMainCommand(String command){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        if (command.toLowerCase().matches(\"^deadline.*$\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return MainCommand.DEADLINE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        } else if (command.toLowerCase().matches(\"^todo.*$\")){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return MainCommand.TODO;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        } else if (command.toLowerCase().matches(\"^event.*$\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return MainCommand.EVENT;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        } else if (command.equals(\"bye\")){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return MainCommand.BYE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        } else if (command.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return MainCommand.LIST;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        } else if (command.toLowerCase().matches(\"done [1-9]([0-9]{2})?\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return MainCommand.DONE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        } else if (command.toLowerCase().matches(\"delete [1-9]([0-9]{2})?\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return MainCommand.DELETE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    ////// COULD WRITE A FUNCTION TO EXTRACT THE COMMAND ///////"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"; */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        MainCommand mainCommand \u003d findMainCommand(command);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        while (mainCommand !\u003d MainCommand.BYE){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            if (mainCommand \u003d\u003d MainCommand.LIST){ // calls for list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                //print the list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                printCommandList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            } else if (mainCommand \u003d\u003d MainCommand.DONE){ // marks for done"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                if (taskList.get(taskNumber-1) !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    taskList.get(taskNumber-1).setCompleted(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    System.out.println(\"You have completed: \" + taskList.get(taskNumber-1).getTaskName());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    System.out.println(\"Index out of bounds.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            } else if (mainCommand \u003d\u003d MainCommand.DELETE){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    int index \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    deleteTask(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                } catch (InputMismatchException e){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    System.out.println(\"Invalid Index\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    System.out.println(\"Maximum Index is: \" + taskList.size());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            } else{ // for new task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                if (mainCommand \u003d\u003d MainCommand.DEADLINE){ // SHOULD CHANGE THE REGEX"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String deadlineWithDueDateString \u003d command.substring(\"deadline\".length()).trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String [] deadlineAndDueDateArray \u003d deadlineWithDueDateString.split(\"/\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String trimmedDeadline \u003d deadlineAndDueDateArray[0].trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String trimmedDueDate;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    if (deadlineAndDueDateArray.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        trimmedDueDate \u003d deadlineAndDueDateArray[1].substring(3).trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        trimmedDueDate \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        taskList.add(new Deadline(trimmedDeadline, trimmedDueDate));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }catch (DukeException e){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        System.out.println(\"Name cannot be empty\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    // this part maybe can rewrite ah"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                } else if (mainCommand \u003d\u003d MainCommand.TODO){ // SHOULD CHANGE THE REGEX"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String toDo \u003d command.substring(\"todo\".length()).trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        taskList.add(new ToDo(toDo));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }catch (DukeException e){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        System.out.println(\"Name cannot be empty\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                } else if (mainCommand \u003d\u003d MainCommand.EVENT){ //SHOULD CHANGE THE REGEX"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    // need to write this"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String eventWithEventDateString \u003d command.substring(\"event\".length()).trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String [] eventAndEventDateArray \u003d eventWithEventDateString.split(\"/\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String trimmedEvent \u003d eventAndEventDateArray[0].trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    String trimmedEventDate;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    if (eventAndEventDateArray.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        trimmedEventDate \u003d eventAndEventDateArray[1].substring(3).trim();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        trimmedEventDate \u003d \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        taskList.add(new Event(trimmedEvent, trimmedEventDate));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    } catch (DukeException e){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                        System.out.println(\"Name cannot be empty\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                    System.out.println(\"I don\u0027t understand, please try again.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "                System.out.println(\"Now you have \" + Task.getNumberOfTasks()+ \" tasks in the list.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            mainCommand \u003d findMainCommand(command);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 137,
      "-": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "//import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    //private GregorianCalendar dueDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public Deadline(String deadlineName, String dueDate) throws DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        super(deadlineName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return \"[D] \" + super.toString()+ \" (by: \" + this.dueDate + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public void setDueDate(String dueDate) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public duke.task.Deadline(String deadlineName, int year, int month, int date, int hour, int minute){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        super(deadlineName);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        GregorianCalendar dueDate \u003d new GregorianCalendar(year, month, date, hour, minute);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public GregorianCalendar getDueDate() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public void setDueDate(GregorianCalendar dueDate) { // can use this method to change the due date in future"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return \"[D] \" + super.toString() + \"(by: \" + dueDate.toString() + \")\"; //not sure of how this will turn out yet"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 43
    }
  },
  {
    "path": "src/main/java/duke/task/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    private String eventDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public Event(String eventName, String eventDate) throws DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        super(eventName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return  \"[E] \" + super.toString()+ \" (at: \" + this.eventDate + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    private boolean completed; //MIGHT NEED TO CHANGE THIS"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    private static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public Task(String taskName) throws DukeException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        if (taskName.isBlank()){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return completed;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public void setCompleted(boolean completed) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public static int getNumberOfTasks() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return numberOfTasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    //should write a tostring method here"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        if (completed \u003d\u003d true){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return \"[\\u2713] \" + this.taskName;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "            return \"[\\u2718] \" + this.taskName ;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 47
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public ToDo(String toDoName) throws DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        super(toDoName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "todo shit"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 1
    }
  },
  {
    "path": "text-ui-test/output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "Now you have 1 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e output.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "dos2unix output.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "diff output.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kiathwe97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kiathwe97": 5,
      "-": 33
    }
  }
]
