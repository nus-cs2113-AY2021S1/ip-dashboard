[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Storage.loadTasks(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Ui.run(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 10,
      "-": 4
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected void printAddMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added: this task:\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t   \" + tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 15
    }
  },
  {
    "path": "src/main/java/commands/AddDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class AddDeadline extends AddCommand{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile(COMMAND_WORD + \"(.*\\\\S.*)/by(.*\\\\S.*)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String datetime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public AddDeadline(String trimmedInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(trimmedInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            description \u003d matcher.group(1).trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            datetime \u003d matcher.group(2).trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, datetime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        updateFile(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printAddMessage(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 33
    }
  },
  {
    "path": "src/main/java/commands/AddEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class AddEvent extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile(COMMAND_WORD + \"(.*\\\\S.*)/at(.*\\\\S.*)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String datetime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public AddEvent(String trimmedInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(trimmedInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            description \u003d matcher.group(1).trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            datetime \u003d matcher.group(2).trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Event event \u003d new Event(description, datetime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        updateFile(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printAddMessage(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 33
    }
  },
  {
    "path": "src/main/java/commands/AddTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class AddTodo extends AddCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile(COMMAND_WORD + \"(.*\\\\S.*)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public AddTodo(String trimmedInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(trimmedInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            description \u003d matcher.group(1).trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        updateFile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printAddMessage(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 31
    }
  },
  {
    "path": "src/main/java/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.bye();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Ui.stop();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 14
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public abstract void execute(TaskList tasks);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    protected void updateFile(TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Storage.updateFile(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 12
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile(COMMAND_WORD + \"\\\\s*(\\\\d*)\\\\s*\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static int taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public DeleteCommand(String trimmedInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(trimmedInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            taskNum \u003d Integer.parseInt(matcher.group(1));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        updateFile(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 28
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final Pattern COMMAND_PATTERN \u003d Pattern.compile(COMMAND_WORD + \"\\\\s*(\\\\d*)\\\\s*\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static int taskNum;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public DoneCommand(String trimmedInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Matcher matcher \u003d COMMAND_PATTERN.matcher(trimmedInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (matcher.find()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            taskNum \u003d Integer.parseInt(matcher.group(1));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.markAsDone(taskNum);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        updateFile(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 27
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.list();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 11
    }
  },
  {
    "path": "src/main/java/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String HORIZONTAL_LINE \u003d \"\\t______________________________\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            \"______________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String GREET \u003d \"\\t Hello! I\u0027m Duke\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            \"\\t What can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static final String BYE \u003d \"\\t Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void printHorizontalLine() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void printMessage(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printMessage(GREET);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printMessage(BYE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 27
    }
  },
  {
    "path": "src/main/java/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.print(\"\\t \" + (i + 1) + \". \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(tasks.get(i));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"\\tInvalid task number!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t   \" + tasks.remove(taskNum - 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void markAsDone(int taskNum) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"\\tInvalid task number!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (tasks.get(taskNum - 1).isDone()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"\\tTask already done!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.get(taskNum - 1).setDone(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t   \" + tasks.get(taskNum - 1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 61
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"\\tCheck command format!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 8
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"\\tCheck command word!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 8
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static Command processInput(String rawInput) throws InvalidCommandException, UnknownCommandException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String trimmedInput \u003d rawInput.trim();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (trimmedInput.startsWith(AddTodo.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new AddTodo(trimmedInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (trimmedInput.startsWith(AddEvent.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new AddEvent(trimmedInput);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (trimmedInput.startsWith(AddDeadline.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new AddDeadline(trimmedInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (trimmedInput.startsWith(DoneCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new DoneCommand(trimmedInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (trimmedInput.startsWith(DeleteCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new DeleteCommand(trimmedInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (trimmedInput.startsWith(ListCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (trimmedInput.startsWith(ByeCommand.COMMAND_WORD)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 29
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String DIRECTORY_NAME \u003d \"data\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String FILE_NAME \u003d \"Duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void updateFile(TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            writeTasksToFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"Check file path!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static void writeTasksToFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        FileWriter file \u003d new FileWriter(DIRECTORY_NAME + \"/\" + FILE_NAME);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (int i \u003d 0; tasks.size() \u003e i; i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            file.write(tasks.get(i).getCode() + \"|\" + (tasks.get(i).isDone() ? \"1\" : \"0\") + \"|\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    tasks.get(i).getDescription() + \"|\" + tasks.get(i).getDatetime() + System.lineSeparator());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void loadTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // created \u003d True -\u003e first time running -\u003e no need to load"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // created \u003d False -\u003e directory exists OR fail to create (exists)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (!createDirectory()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            // handle directory exists case"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                readTasksFromFile(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                System.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static boolean createDirectory() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        File directory \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        boolean directoryCreated \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                directoryCreated \u003d directory.mkdir();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            e.getStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return directoryCreated;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static void readTasksFromFile(TaskList tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        File file \u003d new File(DIRECTORY_NAME + \"/\" + FILE_NAME);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            processLine(tasks, scanner.nextLine());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static void processLine(TaskList tasks, String line) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String[] parts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        boolean done \u003d (!\"0\".equals(parts[1]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        switch (parts[0]) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String todoDescription \u003d parts[2];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Todo(done, todoDescription));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String eventDescription \u003d parts[2];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String eventDatetime \u003d parts[3];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Event(done, eventDescription, eventDatetime));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String deadlineDescription \u003d parts[2];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String deadlineDatetime \u003d parts[3];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Deadline(done, deadlineDescription, deadlineDatetime));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 91
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String CODE \u003d \"D\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setBy(by);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Deadline(boolean done, String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setBy(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getCode() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return CODE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return getBy();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"[\" + getCode() + \"]\" + getStatusIcon() + \" \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                getDescription() + \" (by: \" + getDatetime() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 40
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String CODE \u003d \"E\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setAt(at);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Event(boolean done, String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setAt(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getCode() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return CODE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return getAt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"[\" + getCode() + \"]\" + getStatusIcon() + \" \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                getDescription() + \" (at: \" + getDatetime() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 40
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String TICK_ICON \u003d \"[\\u2714]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String CROSS_ICON \u003d \"[\\u2716]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setDone(false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task(boolean done, String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setDone(done);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return isDone() ? TICK_ICON : CROSS_ICON;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public abstract String getCode();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 48
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String CODE \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Todo(boolean done, String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getCode() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return CODE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"[\" + getCode() + \"]\" + getStatusIcon() + \" \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 24
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static boolean running;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void run(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Messages.greet();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        running \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                Command command \u003d Parser.processInput(scanner.nextLine());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                command.execute(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }  catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                System.out.println(\"\\tInvalid task number!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } catch (UnknownCommandException | InvalidCommandException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void stop() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        running \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event project meeting /at Monday 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "dsajkld"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "todo abc"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event    /at 3pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event games /by 5pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event meeting /at TUE 4pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "lsit"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "dealine foo /by 8pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline      /by 9pm"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline abba /at 6pm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline Report /by 10pm"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done two"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 7423897482937489230461947238647218364781964423179347"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete two"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 87329163232132173862178648932314723891647326472"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 42
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "if exist .\\data rmdir .\\data /s /q"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "if exist ACUTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 4,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 1,
      "-": 37
    }
  }
]
