[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    // Assume no more than 100 tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(MAX_TASKS);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String DIRECTORY_NAME \u003d \"data\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String FILE_NAME \u003d \"Duke.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        loadTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (executeCommand(scanner.nextLine()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void printHorizontalLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t______________________________\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                \"______________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void printMessage(String message) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void list() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.print(\"\\t \" + (i + 1) + \". \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(tasks.get(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printMessage(\"\\t Hello! I\u0027m Duke\" + System.lineSeparator() +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                \"\\t What can I do for you?\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printMessage(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void addTask(String trimmedCommand) throws UnknownCommandException, InvalidCommandException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (trimmedCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String todoInfo \u003d trimmedCommand.replace(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (isEmptyDescription(todoInfo)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Todo(todoInfo));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if  (trimmedCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String[] deadlineInfo \u003d trimmedCommand.replace(\"deadline\", \"\").split(\"/by\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (isEmptyDescription(deadlineInfo[0].trim()) || deadlineInfo.length !\u003d 2) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String description \u003d deadlineInfo[0].trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String datetime \u003d deadlineInfo[1].trim();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Deadline(description, datetime));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (trimmedCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String[] eventInfo \u003d trimmedCommand.replace(\"event\", \"\").split(\"/at\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (isEmptyDescription(eventInfo[0].trim()) || eventInfo.length !\u003d 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String description \u003d eventInfo[0].trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String datetime \u003d eventInfo[1].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Event(description, datetime));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added: this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t   \" + tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        updateFile();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"\\tInvalid task number!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t   \" + tasks.remove(taskNum - 1));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        updateFile();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static boolean isEmptyDescription(String description) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return (\"\".equals(description));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void markAsDone(int taskNum) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"\\tInvalid task number!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } else if (tasks.get(taskNum - 1).isDone()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"\\tTask already done!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        tasks.get(taskNum - 1).setDone(true);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        System.out.println(\"\\t   \" + tasks.get(taskNum - 1));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        updateFile();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void updateFile() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            writeTasksToFile();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"Check file path!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void writeTasksToFile() throws IOException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        FileWriter file \u003d new FileWriter(DIRECTORY_NAME + \"/\" + FILE_NAME);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            file.write(t.getCode() + \"|\" + (t.isDone() ? \"1\" : \"0\") + \"|\" +"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                    t.getDescription() + \"|\" + t.getDatetime() + System.lineSeparator());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void loadTasks() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // created \u003d True -\u003e first time running -\u003e no need to load"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // created \u003d False -\u003e directory exists OR fail to create (exists)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        if (!createDirectory()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            // handle directory exists case"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                readTasksFromFile();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                System.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static boolean createDirectory() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        File directory \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        boolean directoryCreated \u003d false;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (!directory.exists()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                directoryCreated \u003d directory.mkdir();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            e.getStackTrace();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return directoryCreated;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void readTasksFromFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        File file \u003d new File(DIRECTORY_NAME + \"/\" + FILE_NAME);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            processLine(scanner.nextLine());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static void processLine(String line) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String[] parts \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        boolean done \u003d (!\"0\".equals(parts[1]));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        switch (parts[0]) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String todoDescription \u003d parts[2];"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Todo(done, todoDescription));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String eventDescription \u003d parts[2];"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String eventDatetime \u003d parts[3];"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Event(done, eventDescription, eventDatetime));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String deadlineDescription \u003d parts[2];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            String deadlineDatetime \u003d parts[3];"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            tasks.add(new Deadline(done, deadlineDescription, deadlineDatetime));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public static boolean executeCommand(String rawCommand) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        boolean loop \u003d true;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        // remove leading and trailing space"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        String trimmedCommand \u003d rawCommand.trim();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            if (trimmedCommand.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                loop \u003d false;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } else if (trimmedCommand.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                list();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } else if (trimmedCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                int taskNum \u003d Integer.parseInt(trimmedCommand.split(\" \")[1]);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                markAsDone(taskNum);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } else if (trimmedCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                int taskNum \u003d Integer.parseInt(trimmedCommand.split(\" \")[1]);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                deleteTask(taskNum);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                addTask(trimmedCommand);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }  catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"\\tTask number should be numeric and within Integer range!\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(\"\\tPlease provide task number for done command!\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        } catch (UnknownCommandException | InvalidCommandException e) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return loop;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 228,
      "-": 5
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"\\tCheck command format!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 8
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"\\tCheck command word!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 8
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String CODE \u003d \"D\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setBy(by);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Deadline(boolean done, String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setBy(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getCode() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return CODE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return getBy();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"[\" + getCode() + \"]\" + getStatusIcon() + \" \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                getDescription() + \" (by: \" + getDatetime() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 40
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String CODE \u003d \"E\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setAt(at);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Event(boolean done, String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setAt(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getCode() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return CODE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return getAt();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"[\" + getCode() + \"]\" + getStatusIcon() + \" \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                getDescription() + \" (at: \" + getDatetime() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 40
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String TICK_ICON \u003d \"[\\u2714]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String CROSS_ICON \u003d \"[\\u2716]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setDone(false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Task(boolean done, String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        setDone(done);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return isDone() ? TICK_ICON : CROSS_ICON;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public abstract String getCode();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getDatetime() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 48
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    private static final String CODE \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public Todo(boolean done, String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String getCode() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return CODE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "//    public String getDatetime() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "//        return \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "        return \"[\" + getCode() + \"]\" + getStatusIcon() + \" \" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "                getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event project meeting /at Monday 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "add"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "dsajkld"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "todo abc"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event    /at 3pm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event games /by 5pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "event meeting /at TUE 4pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "lsit"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "dealine foo /by 8pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline      /by 9pm"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline abba /at 6pm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "deadline Report /by 10pm"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done two"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 7423897482937489230461947238647218364781964423179347"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete two"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 87329163232132173862178648932314723891647326472"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 42
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "QX-CHEN"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "QX-CHEN": 1,
      "-": 37
    }
  }
]
