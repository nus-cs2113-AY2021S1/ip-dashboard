[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.FileFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String FILE_LOCATION \u003d \"./data/\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String FILE_NAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        storage \u003d new Storage(FILE_LOCATION, FILE_NAME);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            storage.checkFileExists();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            taskManager \u003d new TaskManager(storage.loadTasks());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            ui.showLoadSuccessful();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            ui.showLoadError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } catch (FileFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            ui.showFileFormatError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            ui.showDivider();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            String line \u003d ui.readCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            ui.showDivider();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                Command command \u003d parser.parseCommand(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                command.execute(taskManager, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                isBye \u003d command.isBye();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                System.out.println(e.getErrorMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            } catch (InvalidArgumentException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                System.out.println(e.getErrorMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                System.out.println(e.getErrorMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            ui.showDivider();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } while (!isBye);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 66,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public AddDeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        taskManager.addDeadline(description, by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 19
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public AddEventCommand(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        taskManager.addEvent(description, at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 19
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        taskManager.addTodo(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            ui.showByeMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            storage.saveTasks(taskManager.getTasks());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            ui.showSaveError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_ADD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_ADD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public abstract void execute(TaskManager taskManager, Ui ui, Storage storage) throws InvalidIndexException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        taskManager.deleteTask(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 19
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        taskManager.markAsDone(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 19
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void execute(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        taskManager.printTasks();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/FileFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class FileFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private String errorMessage \u003d null;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public InvalidArgumentException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private String errorMessage \u003d null;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public InvalidIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return Ui.ERROR_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 10
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Command parseCommand(String line) throws UnknownCommandException, InvalidArgumentException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String[] arguments \u003d line.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String rootCommand \u003d arguments[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String argumentString \u003d line.replaceFirst(rootCommand + \" \", \"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        // Solution for refactoring to obtain Commands from separate functions adapted from"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        // https://github.com/se-edu/addressbook-level2"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        switch (rootCommand) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case Command.COMMAND_LIST:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case Command.COMMAND_BYE:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case Command.COMMAND_DONE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            command \u003d createDoneCommand(arguments);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case Command.COMMAND_DELETE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            command \u003d createDeleteCommand(arguments);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case Command.COMMAND_ADD_TODO:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            command \u003d createAddTodoCommand(arguments, argumentString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case Command.COMMAND_ADD_DEADLINE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            command \u003d createAddDeadlineCommand(arguments, argumentString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case Command.COMMAND_ADD_EVENT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            command \u003d createAddEventCommand(arguments, argumentString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private Command createDoneCommand(String[] arguments) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkExactArgumentsLength(arguments.length, 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkValidInteger(arguments[1], Ui.ERROR_DONE_ARGUMENT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        int doneIndex \u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return new DoneCommand(doneIndex - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private Command createDeleteCommand(String[] arguments) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkExactArgumentsLength(arguments.length, 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkValidInteger(arguments[1], Ui.ERROR_DELETE_ARGUMENT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        int deleteIndex \u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return new DeleteCommand(deleteIndex - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private Command createAddTodoCommand(String[] arguments, String argumentString) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkMinimumArgumentsLength(arguments.length, 2, Ui.ERROR_TODO_NO_DESCRIPTION);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return new AddTodoCommand(argumentString);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private Command createAddDeadlineCommand(String[] arguments, String argumentString)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throws InvalidArgumentException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String[] deadlineDetails \u003d argumentString.split(\" /by \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkMinimumArgumentsLength(arguments.length, 2, Ui.ERROR_DEADLINE_NO_DESCRIPTION);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkMinimumArgumentsLength(deadlineDetails.length, 2, Ui.ERROR_NO_DEADLINE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String description \u003d argumentString.replace(\" /by \" + deadlineDetails[1], \"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return new AddDeadlineCommand(description, deadlineDetails[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private Command createAddEventCommand(String[] arguments, String argumentString) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String[] eventDetails \u003d argumentString.split(\" /at \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkMinimumArgumentsLength(arguments.length, 2, Ui.ERROR_EVENT_NO_DESCRIPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        checkMinimumArgumentsLength(eventDetails.length, 2, Ui.ERROR_NO_EVENT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String description \u003d argumentString.replace(\" /at \" + eventDetails[1], \"\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return new AddEventCommand(description, eventDetails[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private void checkExactArgumentsLength(int argumentLength, int expectedLength)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throws InvalidArgumentException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        if (argumentLength !\u003d expectedLength) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new InvalidArgumentException(Ui.ERROR_INVALID_ARGUMENT_LENGTH);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private void checkMinimumArgumentsLength(int argumentLength, int minimumLength, String errorMessage)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throws InvalidArgumentException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        if (argumentLength \u003c minimumLength) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new InvalidArgumentException(errorMessage);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private void checkValidInteger(String integerString, String errorMessage) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            Integer.parseInt(integerString);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new InvalidArgumentException(errorMessage);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 116
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.FileFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private final String fileLocation;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private final String fileName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Storage(String fileLocation, String fileName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.fileLocation \u003d fileLocation;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void checkFileExists() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        if (!Files.exists(Path.of(fileLocation))) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            Files.createDirectories(Path.of(fileLocation));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        if (!Files.exists(Path.of(fileLocation + fileName))) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            Files.createFile(Path.of(fileLocation + fileName));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws FileNotFoundException, FileFormatException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        File file \u003d new File(fileLocation + fileName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        Scanner in \u003d new Scanner(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        while (in.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            String[] taskDetails \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            // add the existing tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                tasks.add(new Todo(taskDetails[2]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                tasks.add(new Deadline(taskDetails[2], taskDetails[3]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                tasks.add(new Event(taskDetails[2], taskDetails[3]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                throw new FileFormatException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fileLocation + fileName);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            fw.write(task.toSaveString() + System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 76
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String isDoneString \u003d (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"D | \" + isDoneString + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String isDoneString \u003d (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"E | \" + isDoneString + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public abstract String toSaveString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String isDoneString \u003d (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"T | \" + isDoneString + \" | \" + description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 17
    }
  },
  {
    "path": "src/main/java/duke/taskmanager/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.taskmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public TaskManager(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            System.out.println(index + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void deleteTask(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            Task removedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            System.out.println(removedTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            System.out.println(\"Now you have \" + getTasksCount() + \" tasks in the list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new InvalidIndexException(Ui.ERROR_DELETE_ARGUMENT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void markAsDone(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new InvalidIndexException((Ui.ERROR_DONE_ARGUMENT));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void addDeadline(String description, String by) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(\"Added \" + description + \" as a Deadline.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void addTodo(String description) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(\"Added \" + description + \" as a Todo.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void addEvent(String description, String at) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(\"Added \" + description + \" as an Event.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public int getTasksCount() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 77
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String DUKE_DIVIDER \u003d \"\u003e\u003e\u003e\u003e++----------------------------------\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String DUKE_GREETINGS \u003d \"Hello! I\u0027m Duke!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String DUKE_LOGO \u003d \"Hello from\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String DUKE_BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String TASK_LOAD_SUCCESSFUL \u003d \"Tasks loaded successfully.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_TODO_NO_DESCRIPTION \u003d \"☹ OOPS!!! The description of a Todo cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_DEADLINE_NO_DESCRIPTION \u003d \"☹ OOPS!!! The description of a Deadline cannot be\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            \" empty.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_EVENT_NO_DESCRIPTION \u003d \"☹ OOPS!!! The description of an Event cannot be empty.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_NO_DEADLINE \u003d \"☹ OOPS!!! Your Deadline doesn\u0027t contain a deadline!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_NO_EVENT \u003d \"☹ OOPS!!! Your Event doesn\u0027t contain a date\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_DONE_ARGUMENT \u003d \"☹ OOPS!!! Your done argument is invalid!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_DELETE_ARGUMENT \u003d \"☹ OOPS!!! Your delete argument is invalid!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_INVALID_ARGUMENT_LENGTH \u003d \"☹ OOPS!!! You have an invalid number of arguments!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_UNKNOWN_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_TASK_LOAD \u003d \"☹ OOPS!!! I\u0027m sorry, but I couldn\u0027t load the tasks :-(\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_TASK_FORMAT \u003d \"☹ OOPS!!! Your tasks are in the wrong format :-(\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_TASK_SAVE \u003d \"☹ OOPS!!! I\u0027m sorry, but I couldn\u0027t save the tasks :-(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private final Scanner scanner;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void showDivider() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(DUKE_DIVIDER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(DUKE_LOGO);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(DUKE_GREETINGS);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(DUKE_BYE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void showLoadSuccessful() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(TASK_LOAD_SUCCESSFUL);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void showLoadError() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(ERROR_TASK_LOAD);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void showFileFormatError() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(ERROR_TASK_FORMAT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void showSaveError() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(ERROR_TASK_SAVE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 72
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline do homework /by next monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event go to school /at tomorrow 1pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "blah"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline write user stories"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline write user stories /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline write user stories /by thursday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event meet up with cs2113 group"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event meet up with cs2113 group /at"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event meet up with cs2113 group /at 11am"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "hello world"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done x"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 2x"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 38
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\ui\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\taskmanager\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 2,
      "-": 19
    }
  }
]
