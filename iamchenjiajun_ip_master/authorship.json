[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_ADD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String COMMAND_ADD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String DUKE_DIVIDER \u003d \"\u003e\u003e\u003e\u003e++----------------------------------\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String DUKE_GREETINGS \u003d \"Hello! I\u0027m Duke!\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String DUKE_LOGO \u003d \"Hello from\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String DUKE_BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_TODO_NO_DESCRIPTION \u003d \"☹ OOPS!!! The description of a Todo cannot be empty.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_DEADLINE_NO_DESCRIPTION \u003d \"☹ OOPS!!! The description of a Deadline cannot be\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            \" empty.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_EVENT_NO_DESCRIPTION \u003d \"☹ OOPS!!! The description of an Event cannot be empty.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_NO_DEADLINE \u003d \"☹ OOPS!!! Your Deadline doesn\u0027t contain a deadline!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_NO_EVENT \u003d \"☹ OOPS!!! Your Event doesn\u0027t contain a date\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_NO_DONE_ARGUMENT \u003d \"☹ OOPS!!! You need an argument to be done with!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_DONE_ARGUMENT \u003d \"☹ OOPS!!! Your done argument is invalid!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final String ERROR_UNKNOWN_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private static final TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void showDivider() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(DUKE_DIVIDER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(DUKE_LOGO);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(DUKE_GREETINGS);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        showDivider();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(DUKE_BYE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void checkArgumentsLength(int argumentLength, int expectedLength, String errorMessage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throws InvalidArgumentException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        if (argumentLength \u003c expectedLength) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new InvalidArgumentException(errorMessage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void checkValidInteger(String integerString, String errorMessage) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            Integer.parseInt(integerString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new InvalidArgumentException(errorMessage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void checkValidIntegerRange(int checkInteger, int expectedValue, String errorMessage)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throws InvalidArgumentException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        boolean isMoreThan \u003d checkInteger \u003e expectedValue;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        boolean isLessThanOne \u003d checkInteger \u003c 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        if (isMoreThan || isLessThanOne) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new InvalidArgumentException(errorMessage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void parseCommand(String line) throws UnknownCommandException, InvalidArgumentException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String[] arguments \u003d line.split(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String command \u003d arguments[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String argumentString \u003d line.replaceFirst(command + \" \", \"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            taskManager.printTasks();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            bye();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            checkArgumentsLength(arguments.length, 2, ERROR_NO_DONE_ARGUMENT);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            checkValidInteger(arguments[1], ERROR_DONE_ARGUMENT);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            int listNumber \u003d Integer.parseInt(arguments[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            checkValidIntegerRange(listNumber, taskManager.getTasksCount(), ERROR_DONE_ARGUMENT);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            taskManager.markAsDone(listNumber - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case COMMAND_ADD_TODO:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            checkArgumentsLength(arguments.length, 2, ERROR_TODO_NO_DESCRIPTION);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            taskManager.addTodo(argumentString);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case COMMAND_ADD_DEADLINE:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            String[] deadlineDetails \u003d argumentString.split(\" /by \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            checkArgumentsLength(arguments.length, 2, ERROR_DEADLINE_NO_DESCRIPTION);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            checkArgumentsLength(deadlineDetails.length, 2, ERROR_NO_DEADLINE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            description \u003d argumentString.replace(\" /by \" + deadlineDetails[1], \"\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            taskManager.addDeadline(description, deadlineDetails[1]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        case COMMAND_ADD_EVENT:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            String[] eventDetails \u003d argumentString.split(\" /at \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            checkArgumentsLength(arguments.length, 2, ERROR_EVENT_NO_DESCRIPTION);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            checkArgumentsLength(eventDetails.length, 2, ERROR_NO_EVENT);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            description \u003d argumentString.replace(\" /at \" + eventDetails[1], \"\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            taskManager.addEvent(description, eventDetails[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        boolean isBye;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            isBye \u003d line.equals(COMMAND_BYE);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                parseCommand(line);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                System.out.println(e.getErrorMessage());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            } catch (InvalidArgumentException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "                System.out.println(e.getErrorMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            showDivider();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        } while (!isBye);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 141,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public static final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private Task[] tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private int tasksCount;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks \u003d new Task[MAX_TASKS];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasksCount \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksCount; i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "            System.out.println(index + \".\" + tasks[i]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks[index].markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(tasks[index]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void addDeadline(String description, String by) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks[tasksCount] \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(\"Added \" + description + \" as a Deadline.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(tasks[tasksCount]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasksCount++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void addTodo(String description) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks[tasksCount] \u003d new Todo(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(\"Added \" + description + \" as a Todo.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(tasks[tasksCount]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasksCount++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void addEvent(String description, String at) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasks[tasksCount] \u003d new Event(description, at);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(\"Added \" + description + \" as an Event.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        System.out.println(tasks[tasksCount]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        tasksCount++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public int getTasksCount() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 55
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    private String errorMessage \u003d null;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public InvalidArgumentException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return Duke.ERROR_UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline do homework /by next monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event go to school /at tomorrow 1pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "blah"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline write user stories"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline write user stories /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "deadline write user stories /by thursday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event meet up with cs2113 group"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event meet up with cs2113 group /at"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "event meet up with cs2113 group /at 11am"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "hello world"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done x"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "done 2x"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 34
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\exception\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamchenjiajun"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "iamchenjiajun": 2,
      "-": 19
    }
  }
]
