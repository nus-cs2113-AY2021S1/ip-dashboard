[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 1,
      "-": 25
    }
  },
  {
    "path": "src/main/java/Duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.ALL_USER_TASKS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.BYE_COMMAND;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DEADLINE_COMMAND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DELETE_COMMAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DONE_COMMAND;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.EMPTY_LIST_ERROR;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.EVENT_COMMAND;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.INDEX_OFFSET;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.INVALID_COMMAND_MESSAGE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.INVALID_TASK_NUMBER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.LIST_COMMAND;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.MESSAGE_BOUNDARY;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TASK_NOT_FOUND;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TODO_COMMAND;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.getTaskAddedMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.getTaskDoneMessage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.getTaskRemovedMessage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    //private final Messages messageContainer \u003d new Messages();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private String[] tokenizedInput;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private String[] taskDescriptionRemarksFieldsInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private String queryTaskNumberText;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Command(String keyword) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Command(String keyword, String queryTaskNumberTextInput) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.queryTaskNumberText \u003d queryTaskNumberTextInput;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Command(String keyword, String[] tokenizedInput, String[] processedUserInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.tokenizedInput \u003d tokenizedInput;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.taskDescriptionRemarksFieldsInput \u003d processedUserInput;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void runCommand(TaskList taskListInput, Ui uiInput) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        switch (keyword.toLowerCase()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (BYE_COMMAND):"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (LIST_COMMAND):"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            printTaskList(taskListInput, uiInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (DONE_COMMAND):"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskIsDone(taskListInput, uiInput, queryTaskNumberText);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (DELETE_COMMAND):"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            deleteTask(taskListInput, queryTaskNumberText);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            insertNewTask(taskListInput, uiInput, tokenizedInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private void insertNewTask(TaskList listInput, Ui uiInput, String[] tokenizedInput) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        switch (tokenizedInput[0]) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (TODO_COMMAND):"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newTask \u003d new ToDo(taskDescriptionRemarksFieldsInput[0], taskDescriptionRemarksFieldsInput[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (DEADLINE_COMMAND):"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newTask \u003d new Deadline(taskDescriptionRemarksFieldsInput[0], taskDescriptionRemarksFieldsInput[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (EVENT_COMMAND):"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newTask \u003d new Event(taskDescriptionRemarksFieldsInput[0], taskDescriptionRemarksFieldsInput[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        listInput.addTask(newTask);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String taskAddedMessage \u003d getTaskAddedMessage(newTask, listInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(taskAddedMessage + MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void printTaskList(TaskList listInput, Ui uiInput) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String taskListPrintOutput \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //if list empty, inform user and await next command"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (listInput.getTaskCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(EMPTY_LIST_ERROR);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //if list non-empty, print out all existing tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        for (int i \u003d 0; i \u003c listInput.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskListPrintOutput +\u003d  + (i + 1) + \".\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                    + listInput.getTaskList().get(i).toString() +\"\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(MESSAGE_BOUNDARY+\"\\n\"+ALL_USER_TASKS+\"\\n\"+taskListPrintOutput+MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void taskIsDone(TaskList listInput, Ui uiInput, String taskNumberInput) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int queryNumber;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            queryNumber \u003d Integer.parseInt(taskNumberInput);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //throw error if taskNumber is a string eg. \"remove foo\" OR whitespaces only"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        boolean isOutOfRange \u003d queryNumber \u003c 1 || queryNumber \u003e listInput.getTaskCount();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //handle case where user inputs non-existing task number to mark as done"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (isOutOfRange){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        listInput.markTaskAsDone(queryNumber-INDEX_OFFSET);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String taskDoneMessage \u003d getTaskDoneMessage(queryNumber, listInput);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(taskDoneMessage +\"\\n\"+ MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private void deleteTask(TaskList listInput, String taskNumberInput) throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int taskNumberForRemoval;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //TODO: exceptions - second input out of bounds, not integer, no second input, only whitespaces after first input"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskNumberForRemoval \u003d Integer.parseInt(taskNumberInput);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        boolean isOutOfBounds \u003d (taskNumberForRemoval \u003c\u003d 0 || taskNumberForRemoval \u003e listInput.getTaskCount());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (isOutOfBounds) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Task removedTask \u003d listInput.deleteTask(Integer.valueOf(taskNumberForRemoval)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                - INDEX_OFFSET);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String taskRemovedMessage \u003d getTaskRemovedMessage(removedTask, listInput);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(taskRemovedMessage+MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 147
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.ERROR_SAVING_INTO_TEXT_FILE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Messages messageContainer \u003d new Messages();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            this.tasks \u003d new TaskList(storage.loadFileToMyTasks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //ui.showLoadingError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Duke main \u003d new Duke(\"Duke/duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        main.startDuke();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        main.runLoopUntilExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        main.byeDuke();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void startDuke() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        ui.sayIntro();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void runLoopUntilExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Parser commandParser \u003d new Parser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        while (!commandParser.userWantsToLeave()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                String userInputText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                Command nextCommand \u003d commandParser.parseCommand(userInputText);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                nextCommand.runCommand(tasks, ui);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                ui.displayErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void byeDuke() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //TODO: save tasklist to storage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            storage.saveMyTasksToFile(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            ui.displayErrorMessage(ERROR_SAVING_INTO_TEXT_FILE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 61,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.BYE_COMMAND;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DEADLINE_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DELETE_COMMAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DONE_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.EVENT_COMMAND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.INVALID_COMMAND_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.LIST_COMMAND;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.NO_DESCRIPTION;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TODO_COMMAND;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TOO_LITTLE_PARAMETERS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TOO_MANY_PARAMETERS;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final int MAX_SUBSTRING_FIELDS \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public boolean shouldEndChat \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    //command to validate task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Command parseCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Command newCommand;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] tokenizedInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String commandKeyword \u003d tokenizedInput[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] resolveInputIntoDescriptions;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        switch (commandKeyword.toLowerCase()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (BYE_COMMAND):"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (LIST_COMMAND):"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (commandKeyword.equals(BYE_COMMAND)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                shouldEndChat \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newCommand \u003d new Command(commandKeyword);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case(DONE_COMMAND):"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case(DELETE_COMMAND):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                newCommand \u003d new Command(commandKeyword, tokenizedInput[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(TOO_MANY_PARAMETERS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (TODO_COMMAND):"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            resolveInputIntoDescriptions \u003d splitToDoInput(userInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newCommand \u003d new Command(commandKeyword, tokenizedInput, resolveInputIntoDescriptions);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (EVENT_COMMAND):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (DEADLINE_COMMAND):"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            resolveInputIntoDescriptions \u003d splitDeadlineOrEventInput(userInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newCommand \u003d new Command(commandKeyword, tokenizedInput, resolveInputIntoDescriptions);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return newCommand;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private String[] splitDeadlineOrEventInput(String userInput) throws DukeException{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] returnValue \u003d new String[MAX_SUBSTRING_FIELDS];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] separatedSections;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (userInput.contains(\" /\")){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            separatedSections \u003d userInput.split(\" /\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            String commandWord \u003d separatedSections[0].split(\" \", 2)[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                String testForMissingRemarks \u003d separatedSections[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(TOO_LITTLE_PARAMETERS);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            // get description part of userInput without the command word"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                returnValue[0] \u003d separatedSections[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(TOO_LITTLE_PARAMETERS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (returnValue[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(NO_DESCRIPTION);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            // get additional remark part of userInput"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            returnValue[1] \u003d separatedSections[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            boolean isRemarksEmpty \u003d ((commandWord.toLowerCase().equals(EVENT_COMMAND)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                    || commandWord.toLowerCase().equals(DEADLINE_COMMAND))  \u0026\u0026 returnValue[1].trim().length() \u003d\u003d 0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (isRemarksEmpty){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(NO_DESCRIPTION);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String[] splitToDoInput(String originalInput) throws DukeException{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] returnValue \u003d new String[MAX_SUBSTRING_FIELDS];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] separatedSections;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        // get description part of userInput without the command word"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        separatedSections \u003d originalInput.split(\" \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String commandWord \u003d separatedSections[0].split(\" \", 2)[0];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //only the keyword input"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (Integer.valueOf(separatedSections.length).equals(1)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(TOO_LITTLE_PARAMETERS);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //similar to above, event and deadline should not be missing a description section"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (commandWord.toLowerCase().equals(EVENT_COMMAND) || commandWord.toLowerCase().equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(NO_DESCRIPTION);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        returnValue[0] \u003d originalInput.trim().split(\" \", 2)[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        // remark column is an empty string"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        returnValue[1] \u003d \"\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public boolean userWantsToLeave(){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.shouldEndChat;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 120
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Storage(String filePathInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.filePath \u003d filePathInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void saveMyTasksToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            fw \u003d new FileWriter(this.filePath); //overwrite existing file contents when called"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new IOException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //convert newTaskData to string format for storing in duke.txt"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String newTaskString;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //boolean hasDescription \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        for (int i\u003d0; i \u003c taskList.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            Task newTaskData \u003d taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (newTaskData instanceof ToDo) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                //Format of todo is different with 3 fields, while Deadline/Event has 4"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                newTaskString \u003d newTaskData.getTaskData()[0] + \" | \" + newTaskData.getTaskData()[1] + \" | \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                        + newTaskData.getTaskData()[2] + System.lineSeparator();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                newTaskString \u003d newTaskData.getTaskData()[0] + \" | \" + newTaskData.getTaskData()[1] + \" | \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                        + newTaskData.getTaskData()[2] + \" | \" + newTaskData.getTaskData()[3] + System.lineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            fw.write(newTaskString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFileToMyTasks() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        File loadingFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (!loadingFile.exists()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            File newDirectory \u003d new File(\"Duke\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            boolean isNewDirectoryCreated \u003d newDirectory.mkdir();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (isNewDirectoryCreated) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                File newFile \u003d new File(\"Duke/duke.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                    newFile.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                } catch (IOException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                    System.out.println(\"Failed to create file in new directory\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                System.out.println(\"Failed to create directory\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        ArrayList\u003cTask\u003e taskListToReturn \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Scanner fileContent \u003d new Scanner(loadingFile);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        while (fileContent.hasNext()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //For each new line, add task to List myTasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //Process each line first, and construct new Todo/Event/Deadline object"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            String taskString \u003d fileContent.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            String[] splitTaskString \u003d taskString.trim().split(\" \\\\| \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            Task loadTaskToList;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            switch(splitTaskString[0].toUpperCase()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            case (\"T\"):"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                loadTaskToList \u003d new ToDo(splitTaskString[2] , \"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            case (\"E\"):"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                loadTaskToList \u003d new Event(splitTaskString[2], splitTaskString[3]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            case (\"D\"):"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                loadTaskToList \u003d new Deadline(splitTaskString[2], splitTaskString[3]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(\"There seems to be an error loading a task, sorry...\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //if task was previously marked done already, make sure to mark it as done when loading to myTasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (splitTaskString[1].equals(\":)\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                loadTaskToList.markAsDone();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskListToReturn.add(loadTaskToList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\"Hi user! your previous tasks have been loaded into Duke...\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return taskListToReturn;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /*public static void autoSaveIntoFile(List\u003cTask\u003e myTasks){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            saveMyTasksToFile(FILEPATH, myTasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            System.out.println(\"Encountered an error trying to save your task into duke.txt\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 108
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskListFromSave) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.tasks \u003d taskListFromSave;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public boolean getTaskDoneStatus(int taskNumber) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.get(taskNumber).getIsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.tasks.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getTaskDescription(int taskNumber) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.get(taskNumber).getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getTaskStatusIcon(int taskNumber) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.get(taskNumber).getStatusIcon();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.tasks.add(taskToAdd);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Task deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 48
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DUKE_SAYS_HI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.ERROR_EMOJI;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.LOGO;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.NO_INPUT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.SAY_SAYONARA;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Messages messageContainer \u003d new Messages();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void sayIntro(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.print(LOGO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(messageContainer.printResponseWithBorder(DUKE_SAYS_HI));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void sayBye(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(messageContainer.printResponseWithBorder(SAY_SAYONARA));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    //Print out full task list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void displayErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(ERROR_EMOJI + errorMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //Take out all empty/whitespace lines"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        while (isInputEmpty(userInput)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            displayErrorMessage(NO_INPUT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private boolean isInputEmpty(String rawInput) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return rawInput.trim().isEmpty();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 54
    }
  },
  {
    "path": "src/main/java/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String MESSAGE_BOUNDARY \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    //private static final String FILEPATH \u003d \"Duke/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String ERROR_EMOJI \u003d \"(O_o) OOPS!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final int INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String DUKE_SAYS_HI \u003d \"Hello! I\u0027m Duke d(^u^)\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String INVALID_TASK_NUMBER \u003d \"Task reference number needs to be a valid integer...\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TOO_MANY_PARAMETERS \u003d \"Too many parameters input for the command.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TOO_LITTLE_PARAMETERS \u003d \"Too little parameters input for the command.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String INVALID_PARAMETERS \u003d \"Invalid parameters input for the command.Try again :c\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String NO_DESCRIPTION \u003d \"The task must have a description.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TASK_NOT_FOUND \u003d \"No such task was found.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String NO_INPUT \u003d \"No valid input detected, try again...\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TASK_LOADED_INTO_DUKE \u003d \"Hi user! your previous tasks have been loaded into Duke...\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String FAILED_TO_LOAD_TEXT_FILE \u003d \"Can\u0027t load from file.Creating a new file duke.txt in new folder Duke.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String ERROR_SAVING_INTO_TEXT_FILE \u003d \"Encountered an error trying to save your task into duke.txt\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String ALL_USER_TASKS \u003d \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String MARKED_TASK_AS_DONE \u003d \"Nice, I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String REMOVE_TASK_FOR_USER \u003d \"Noted! I\u0027ve deleted this task for you: \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String EMPTY_LIST_ERROR \u003d \"The task list is empty.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String SAY_SAYONARA \u003d \"Bye, hope to see you soon! \";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String INVALID_COMMAND_MESSAGE \u003d \"Happy to see you too, but i don\u0027t know what you\u0027re saying...\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String printResponseWithBorder(String sampleText) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return MESSAGE_BOUNDARY + \"\\n\" + sampleText + \"\\n\" + MESSAGE_BOUNDARY;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static String getTaskDoneMessage(int queryNumber, TaskList listInput) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return MARKED_TASK_AS_DONE   + Integer.toString(queryNumber)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \".[\" + listInput.getTaskStatusIcon(queryNumber - INDEX_OFFSET) + \"] \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + listInput.getTaskDescription(queryNumber - INDEX_OFFSET);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static String getTaskAddedMessage(Task newTask, TaskList listInput) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String plural \u003d ((listInput.getTaskCount()  \u003e 1) ? \"s\" : \"\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \" + newTask.toString() + \".\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"Now you have \" + listInput.getTaskCount() + \" task\" + plural + \" in the list.\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static String getTaskRemovedMessage(Task removedTask, TaskList listInput) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String plural \u003d ((listInput.getTaskCount()  \u003e 1) ? \"s\" : \"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"Got it. I\u0027ve removed this task: \\n\" + removedTask.toString()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \". Now you have \" + listInput.getTaskCount() + \" task\" + plural +\" in the list.\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 89
    }
  },
  {
    "path": "src/main/java/data/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static final int NUMBER_OF_FIELDS_DEADLINE_FORMAT \u003d 4; // format: D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static final String DEADLINE_CHARACTER \u003d \"D\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "   /* public static Deadline checkDeadlineError(String in) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Scanner query \u003d new Scanner(in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(in.contains(\"deadline /by\")){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(\"Description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(!in.contains(\"/by\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(\"Did not detect \u0027/by\u0027 from user, please try again.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int index \u003d in.indexOf(\"/by\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(in.length() \u003c\u003d (index+3)){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(\"End date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        in \u003d in.replace(\"deadline\",\"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] deadlineSplit \u003d in.split(\"/by\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return new Deadline(deadlineSplit[0], deadlineSplit[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String[] getTaskData(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] taskValues \u003d new String[NUMBER_OF_FIELDS_DEADLINE_FORMAT];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[0] \u003d DEADLINE_CHARACTER;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_DONE_NOTATION;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_NOT_DONE_NOTATION;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[2] \u003d this.getDescription();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[3] \u003d this.getBy();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return taskValues;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 54
    }
  },
  {
    "path": "src/main/java/data/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/* use when user uses wrong terms, example: blah, and not the keywords,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 9
    }
  },
  {
    "path": "src/main/java/data/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static final int NUMBER_OF_FIELDS_EVENT_FORMAT \u003d 4;// format: E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static final String EVENT_CHARACTER \u003d \"E\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /*public static Event checkEventError(String in) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Scanner query \u003d new Scanner(in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(in.contains(\"event /at\")){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(\"Description of an Event cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(!in.contains(\"/at\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(\"Did not detect \u0027/at\u0027 from user, please try again.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int index \u003d in.indexOf(\"/at\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(in.length() \u003c\u003d (index+3)){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(\"Venue of an Event cannot be empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        in \u003d in.replace(\"event\",\"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] eventSplit \u003d in.split(\"/at\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return new Event(eventSplit[0], eventSplit[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String[] getTaskData(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] taskValues \u003d new String[NUMBER_OF_FIELDS_EVENT_FORMAT];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[0] \u003d EVENT_CHARACTER;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_DONE_NOTATION;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_NOT_DONE_NOTATION;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[2] \u003d this.getDescription();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[3] \u003d this.getAt();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return taskValues;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 54
    }
  },
  {
    "path": "src/main/java/data/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        protected final String TASK_DONE_NOTATION \u003d \":)\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        protected final String TASK_NOT_DONE_NOTATION \u003d \":(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        public String getDescription(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return (isDone ? \"(^u^)\" : \"(\u0027n\u0027)\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        public boolean getIsDone(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return this.isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return String.format(\"[%s]%s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        public abstract String[] getTaskData();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 37
    }
  },
  {
    "path": "src/main/java/data/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final int NUMBER_OF_FIELDS_TODO_FORMAT \u003d 3;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TODO_CHARACTER \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public ToDo(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String[] getTaskData(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] taskValues \u003d new String[NUMBER_OF_FIELDS_TODO_FORMAT];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[0] \u003d TODO_CHARACTER;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_DONE_NOTATION;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_NOT_DONE_NOTATION;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[2] \u003d this.getDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return taskValues;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 31
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 2,
      "-": 19
    }
  }
]
