[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 1,
      "-": 25
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* [1. Introduction](#1-introduction)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* [2. Quick Start](#2-quick-start)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* [3. Command Format](#3-command-format)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "* [4. Features](#4-features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.1. Add tasks](#41-add-a-task)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        + [4.1.1 Todos](#411-todo---adds-a-todo-task)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        + [4.1.2 Events](#412-event---adds-an-event-task)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        + [4.1.3 Deadlines](#413-deadline---adds-a-deadline-task)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.2. Mark task as done](#42-done---mark-task-as-done)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.3. Display all tasks](#43-list---displays-all-tasks-in-list)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.4. Find task by keyword](#44-find---find-tasks-that-match-keyword)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.5. Delete tasks](#45-delete---deletes-task-from-list)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + [4.6. Exiting Duke](#46-bye---exits-the-program)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- [5. Command Summary](#5-command-summary)   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Duke is a CLI-based application that "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "keeps track of your tasks. This application is"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "for people who prefer using a Command-Line Interface."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Ensure that you have Java 11 installed in your Computer."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1.Download the latest Duke_IP.jar from [here](https://github.com/BenardoTang/ip/releases)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "2.Copy the file to the folder you want to use as the home folder for your Duke program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "3.Open a command window in that folder."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "4.Run the command `java -jar Duke_IP.jar`."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "5.You should see something like this below:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "___________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Hello! I\u0027m Duke d(^u^)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "___________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "   ```    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 3. Command Format"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Words enclosed within angle brackets `\u003c\u003e` are the parameters to be supplied by the user. Other keywords stated are compulsory and should be included."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "For example, in `event \u003cTask Description\u003e /at \u003cVenue\u003e`, `event` is the command keyword that adds an Event task. `\u003cTask Description\u003e` is the description of the event to be supplied by you. `\u003cVenue\u003e` represents additional information about the event to be added, like the date and time."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "A valid input would be `event Meeting /at Mon 4pm`."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 4. Features"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.1 Add a task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Duke allows you to add 3 different types of tasks: todo, deadline and event. Refer to the subheadings below for more information on each type."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "#### 4.1.1 `todo` - Adds a todo task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "This command adds a todo task to the current task list. ToDos contain a description only."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Format: `todo \u003cDescription\u003e`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Example of usage:`todo watch movie` - Adds a todo task with description \"watch movie\" to the list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "todo watch movie"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Got it. I\u0027ve added this task: [T][(\u0027n\u0027)]watch movie."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "#### 4.1.2 `event` - Adds an event task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "This command adds an event task to the current task list. Events contain a description and a remark (usually the event date and time)."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " `event \u003cDescription\u003e /at \u003cVenue\u003e`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- Adds an event and its event time and/or place to the list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- Text that follows **\"/at\"** will be placed in the venue section of the event."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- Valid `\u003cVenue\u003e` formats include:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + Any String value (e.g. **Mon 4pm**) "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "`event Tom\u0027s birthday /at Tom\u0027s house 3pm`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "event Tom\u0027s birthday /at Tom\u0027s house 3pm"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Got it. I\u0027ve added this task: [E][(\u0027n\u0027)]Tom\u0027s birthday (at Tom\u0027s house 3pm)."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "``` "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "#### 4.1.3 `deadline` - Adds a deadline task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "This command adds a deadline task to the current task list. Deadlines contain a description and a date."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " `deadline \u003cDescription\u003e /by \u003ctime\u003e`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- Adds a deadline and its time and/or place to the list"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- Text that follows **\"/by\"** will be placed in the time section of the deadline."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- Valid `\u003ctime\u003e` formats include:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    + Any String value (e.g. **31 Dec 12pm**) "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "`deadline CS2113 iP submission /by 31 Dec 12pm`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "deadline CS2113 iP submission /by 31 Dec 12pm"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Got it. I\u0027ve added this task: [D][(\u0027n\u0027)]CS2113 iP submission (by 31 Dec 12pm)."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.2 `done` - Mark task as done"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "This command marks a task as completed. When executed, the task completion box of the specified task changes `[(\u0027n\u0027)]` (not completed) to `[/]` (completed)."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " `done \u003cIndex\u003e`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " - Marks the task as done at the specified index."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " - `\u003cIndex\u003e` refers to the index number of a specific task in the displayed task list."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " - The index must be a positive integer: 1, 2, 3, etc."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Assuming this is our existing list:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1.[T][(\u0027n\u0027)]watch movie"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "2.[E][(\u0027n\u0027)]Tom\u0027s birthday (at Tom\u0027s house 3pm)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "3.[D][(\u0027n\u0027)]CS2113 iP submission (by 31 Dec 12pm)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Nice, I\u0027ve marked this task as done: 1.[(^u^)] watch movie"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.3 `list` - Displays all tasks in list"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "This command displays all existing tasks in an easy-to-read format, including the task type notation `[T/E/D]`, completion status and task details."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " `list`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome (if task list empty):"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "list"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "(O_o) OOPS!The task list is empty."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome (if task list non-empty):"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1.[T][(^u^)]watch movie"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "2.[E][(\u0027n\u0027)]Tom\u0027s birthday (at Tom\u0027s house 3pm)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "3.[D][(\u0027n\u0027)]CS2113 iP submission (by 31 Dec 12pm)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.4 `find` - Find tasks that match keyword"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "This command displays the list of all Tasks containing your search keyword."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " `find \u003cKeyword\u003e`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- `\u003cKeyword\u003e` is the term that will be searched across task fields."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- Tasks with fields that contain the `\u003cKeyword\u003e` are displayed. "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "`find movie`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Assuming this is our existing list:"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1.[T][(^u^)]watch movie"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "2.[E][(\u0027n\u0027)]Tom\u0027s birthday (at Tom\u0027s house 3pm)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "3.[D][(\u0027n\u0027)]CS2113 iP submission (by 31 Dec 12pm)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "find movie"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Here are the matching tasks in your list: "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1.[T][(^u^)]watch movie"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome (if no matching results):"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "find 123"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "(O_o) OOPS!No tasks matching the keyword were found"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.5 `delete` - Deletes task from list"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "This command removes a specified task from the list of existing tasks."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " `delete \u003cIndex\u003e`"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "- Deletes the task at the specified index."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " - `\u003cIndex\u003e` refers to the index number of a specific task in the displayed task list."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " - The index must be a positive integer 1, 2, 3, etc."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Assuming this is our existing list:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1.[T][(^u^)]watch movie"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "2.[E][(\u0027n\u0027)]Tom\u0027s birthday (at Tom\u0027s house 3pm)"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "3.[D][(\u0027n\u0027)]CS2113 iP submission (by 31 Dec 12pm)"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Got it. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "[T][(^u^)]watch movie. Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "The resulting list:"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Here are the tasks in your list: "
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "1.[E][(\u0027n\u0027)]Tom\u0027s birthday (at Tom\u0027s house 3pm)"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "2.[D][(\u0027n\u0027)]CS2113 iP submission (by 31 Dec 12pm)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "### 4.6 `bye` - Exits the program"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Saves task list to a local storage file and exits program."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " `bye`"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "```"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "bye"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "Bye, hope to see you soon! "
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "______________________________________________________"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "``` "
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "\u0026nbsp;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "## 5. Command Summary "
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * *Todo* : `todo \u003cDescription\u003e` \\"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " e.g. `todo read book`"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * *Event* : `event \u003cDescription\u003e /\u003cRemark\u003e` \\"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " e.g. `event Tom\u0027s birthday /at Tom house Sat 8pm`"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * *Deadline* : `deadline \u003cDescription\u003e /\u003cRemark\u003e` \\"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " e.g. `deadline CS2113 iP submission /31 Dec 12pm`"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * *Mark as Done* : `done \u003cIndex\u003e` \\"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " e.g. `done 1`"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * *List* : `list` "
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * *Delete* : `delete \u003cIndex\u003e` \\"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " e.g. `delete 1`"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * *Help* : `help`"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "  "
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * *Exit* : `bye`"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 335,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.ALL_USER_TASKS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.BYE_COMMAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DEADLINE_COMMAND;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DELETE_COMMAND;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DONE_COMMAND;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.EMPTY_LIST_ERROR;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.ERROR_SAVING_INTO_TEXT_FILE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.EVENT_COMMAND;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.FIND_COMMAND;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.INDEX_OFFSET;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.INVALID_COMMAND_MESSAGE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.INVALID_TASK_NUMBER;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.LIST_COMMAND;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.MATCHES_MESSAGE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.MESSAGE_BOUNDARY;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.NO_MATCHES_MESSAGE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TASK_NOT_FOUND;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TODO_COMMAND;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.getTaskAddedMessage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.getTaskDoneMessage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.getTaskRemovedMessage;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class deals with commands. The call for command execution is done through here. It also executes the relevant"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * operations on the {@link TaskList} containing the Tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * @see TaskList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private String[] tokenizedInput;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private String[] taskDescriptionRemarksFieldsInput;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private String query;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * Constructor for LIST and BYE command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param keyword indicates the operation to be executed"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Command(String keyword) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * Constructor for DONE, DELETE and FIND command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param keyword indicates the operation to be executed"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param queryInput this input is a number index for DONE and DELETE command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * and search keyword for FIND command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Command(String keyword, String queryInput) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.query \u003d queryInput;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * Constructor for TODO, EVENT or DEADLINE command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param keyword indicates the operation to be executed"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param tokenizedInput a string array of the original user input string"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param processedUserInput a string array of the description and remarks fields of the task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Command(String keyword, String[] tokenizedInput, String[] processedUserInput) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.tokenizedInput \u003d tokenizedInput;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.taskDescriptionRemarksFieldsInput \u003d processedUserInput;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method parses the keyword attribute of the {@link Command} object, and carries out the operation corresponding to the keyword on a {@link TaskList} list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * If any exception is encountered during the operation, they will be thrown and caught by the exception handler"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * in the main class ({@link Duke})"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param taskListInput the list of tasks"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param uiInput for displaying Ui elements"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param saveToList for saving updated task list to local save file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void runCommand(TaskList taskListInput, Ui uiInput, Storage saveToList) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.storage \u003d saveToList;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        switch (keyword.toLowerCase()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (BYE_COMMAND):"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (LIST_COMMAND):"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            printTaskList(taskListInput, uiInput);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (DONE_COMMAND):"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskIsDone(taskListInput, uiInput, query, storage);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (DELETE_COMMAND):"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            deleteTask(taskListInput,uiInput, query, storage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (FIND_COMMAND):"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            findTasksByKeyword(taskListInput, uiInput, query);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            insertNewTask(taskListInput, uiInput, tokenizedInput , storage);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method constructs a new {@link Task} from the attributes of the {@link Command} object,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * and inserts it into a given {@link TaskList} list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param listInput         the list of Tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param uiInput           for displaying Ui elements"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param tokenizedInput    a string array of the original user input string"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param saveToList for saving updated task list to local save file"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private void insertNewTask(TaskList listInput, Ui uiInput, String[] tokenizedInput , Storage saveToList) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        switch (tokenizedInput[0]) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (TODO_COMMAND):"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newTask \u003d new ToDo(taskDescriptionRemarksFieldsInput[0], taskDescriptionRemarksFieldsInput[1]);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (DEADLINE_COMMAND):"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newTask \u003d new Deadline(taskDescriptionRemarksFieldsInput[0], taskDescriptionRemarksFieldsInput[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (EVENT_COMMAND):"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newTask \u003d new Event(taskDescriptionRemarksFieldsInput[0], taskDescriptionRemarksFieldsInput[1]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        listInput.addTask(newTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String taskAddedMessage \u003d getTaskAddedMessage(newTask, listInput);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(taskAddedMessage + MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            saveToList.saveMyTasksToFile(listInput);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (java.io.IOException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(ERROR_SAVING_INTO_TEXT_FILE);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method prints out the {@link Task} objects that are currently in the given {@link TaskList} list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * The list includes the type ({@link ToDo}, {@link Event}, {@link Deadline}) of each Task and the status"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * of each task. If there are no tasks in the TaskList, an empty list message is printed instead."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param listInput the list of Tasks"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param uiInput   for displaying Ui elements"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see ToDo"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void printTaskList(TaskList listInput, Ui uiInput) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String taskListPrintOutput \u003d \"\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //if list empty, inform user and await next command"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (listInput.getTaskCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(EMPTY_LIST_ERROR);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //if list non-empty, print out all existing tasks"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        for (int i \u003d 0; i \u003c listInput.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskListPrintOutput +\u003d  + (i + 1) + \".\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                    + listInput.getTaskList().get(i).toString() +\"\\n\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(MESSAGE_BOUNDARY+\"\\n\"+ALL_USER_TASKS+\"\\n\"+taskListPrintOutput+MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method marks a {@link Task} object (denoted by task number) in the {@link TaskList} list as \"done\"."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * If the task number given is not a valid number or falls outside the range of existing tasks,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * an error message will be shown stating that the number chosen is out of range"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param listInput         the list of tasks"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param taskNumberInput   the task number of the task to be marked done"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param uiInput           for displaying Ui elements"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param saveToList for saving updated task list to local save file"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void taskIsDone(TaskList listInput, Ui uiInput, String taskNumberInput, Storage saveToList) throws DukeException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int queryNumber;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            queryNumber \u003d Integer.parseInt(taskNumberInput);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //throw error if taskNumber is a string eg. \"remove foo\" OR whitespaces only"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        boolean isOutOfRange \u003d queryNumber \u003c 1 || queryNumber \u003e listInput.getTaskCount();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //handle case where user inputs non-existing task number to mark as done"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (isOutOfRange){"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        listInput.markTaskAsDone(queryNumber-INDEX_OFFSET);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String taskDoneMessage \u003d getTaskDoneMessage(queryNumber, listInput);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(taskDoneMessage +\"\\n\"+ MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            saveToList.saveMyTasksToFile(listInput);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (java.io.IOException e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(ERROR_SAVING_INTO_TEXT_FILE);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method constructs a new {@link Task} from the attributes of the {@link Command} object,"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * and inserts it into a given {@link TaskList} list."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * If the task number given is not a valid number or falls outside the range of existing tasks,"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * an error message will be shown stating that the number chosen is out of range"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param listInput         the list of Tasks"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param taskNumberInput   the task number of the task to be deleted"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param saveToList for saving updated task list to local save file"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private void deleteTask(TaskList listInput,Ui uiInput, String taskNumberInput , Storage saveToList) throws DukeException {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int taskNumberForRemoval;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskNumberForRemoval \u003d Integer.parseInt(taskNumberInput);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        boolean isOutOfBounds \u003d (taskNumberForRemoval \u003c\u003d 0 || taskNumberForRemoval \u003e listInput.getTaskCount());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (isOutOfBounds) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Task removedTask \u003d listInput.deleteTask(taskNumberForRemoval"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                - INDEX_OFFSET);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String taskRemovedMessage \u003d getTaskRemovedMessage(removedTask, listInput);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(taskRemovedMessage+MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            saveToList.saveMyTasksToFile(listInput);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (java.io.IOException e) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(ERROR_SAVING_INTO_TEXT_FILE);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method searches the Tasks in the {@link TaskList} object input for a keyword. It filters out"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * Tasks containing the search keyword and prints them."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param listInput the TaskList to be searched"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param uiInput for displaying Ui elements"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param searchQuery the keyword to be searched for in Tasks"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private void findTasksByKeyword(TaskList listInput, Ui uiInput, String searchQuery) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        int resultNumber \u003d 1;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        ArrayList\u003cTask\u003e searchResults \u003d listInput.searchTaskList(listInput.getTaskList(), searchQuery);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (Integer.valueOf(searchResults.size()).equals(0)) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            uiInput.displayErrorMessage(NO_MATCHES_MESSAGE);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            String searchOutput \u003d MATCHES_MESSAGE + \"\\n\";"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            for (Task result : searchResults) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                searchOutput +\u003d resultNumber + \".\" + result.toString() + \"\\n\";"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                resultNumber++;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            System.out.println(MESSAGE_BOUNDARY +\"\\n\"+ searchOutput + MESSAGE_BOUNDARY);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 280
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.ERROR_SAVING_INTO_TEXT_FILE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TASKLIST_SAVE_DIRECTORY;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This is the main class that runs the entire Duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Messages messageContainer \u003d new Messages();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This constructor initializes the other classes to be used in the Duke program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     *\u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * The constructor will also attempt to to load any existing local TaskList saved"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * at the location specified in the filePath."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     *\u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param filePath the location of the file with the local TaskList save."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Storage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Storage#loadFileToMyTasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            this.tasks \u003d new TaskList(storage.loadFileToMyTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Duke main \u003d new Duke(TASKLIST_SAVE_DIRECTORY);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        main.startDuke();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        main.runLoopUntilExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        main.byeDuke();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * Displays the startup greeting to user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     *\u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui#sayIntro"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void startDuke() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        ui.sayIntro();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method runs the main loop where where Duke obtains command from user and converts"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * it into a {@link Command} object that executes the corresponding operation."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     *\u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This loop continues till the user enters the \"bye\" command. It will then exit the loop.\u003c/p\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui#getUserCommand`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Parser#parseCommand"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Command#runCommand"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void runLoopUntilExit() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Parser commandParser \u003d new Parser();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        while (!commandParser.userWantsToLeave()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                String userInputText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                Command nextCommand \u003d commandParser.parseCommand(userInputText);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                nextCommand.runCommand(tasks, ui, storage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                ui.displayErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method is used to exit Duke."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * Occurs when the \"bye\" command is entered. It saves the current task list before saying goodbye."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Storage#saveMyTasksToFile"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui#sayBye()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void byeDuke() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            storage.saveMyTasksToFile(tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            ui.displayErrorMessage(ERROR_SAVING_INTO_TEXT_FILE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 97,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.BYE_COMMAND;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DEADLINE_COMMAND;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DELETE_COMMAND;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DONE_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.EVENT_COMMAND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.FIND_COMMAND;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.INVALID_COMMAND_MESSAGE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.LIST_COMMAND;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.NO_DESCRIPTION;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TODO_COMMAND;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TOO_LITTLE_PARAMETERS;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.TOO_MANY_PARAMETERS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class resolves the user input into a {@link Command} object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final int MAX_SUBSTRING_FIELDS \u003d 2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public boolean shouldEndChat \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method resolves the user input and returns a {@link Command} based on the parameters given."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * The command keywords in the user input follow specified formats. If there are issues in the input,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * an exception will be thrown with an error message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp?\u003c/p\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param userInput a String containing the processed command input provided by the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return a Command object that will be executed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Command parseCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Command newCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] tokenizedInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String commandKeyword \u003d tokenizedInput[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] resolveInputIntoDescriptions;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        switch (commandKeyword.toLowerCase()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (BYE_COMMAND):"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (LIST_COMMAND):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (commandKeyword.equals(BYE_COMMAND)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                shouldEndChat \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newCommand \u003d new Command(commandKeyword);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case(DONE_COMMAND):"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case(FIND_COMMAND):"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case(DELETE_COMMAND):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                newCommand \u003d new Command(commandKeyword, tokenizedInput[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(TOO_MANY_PARAMETERS);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (TODO_COMMAND):"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            resolveInputIntoDescriptions \u003d splitToDoInput(userInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newCommand \u003d new Command(commandKeyword, tokenizedInput, resolveInputIntoDescriptions);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (EVENT_COMMAND):"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        case (DEADLINE_COMMAND):"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            resolveInputIntoDescriptions \u003d splitDeadlineOrEventInput(userInput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            newCommand \u003d new Command(commandKeyword, tokenizedInput, resolveInputIntoDescriptions);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(INVALID_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return newCommand;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method attempts to split the user input into appropriate parameters of the Task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * It is only applicable for the EVENT and DEADLINE commands."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param userInput a String containing the processed command input provided by the user"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return a String array of size 2, containing the appropriate parameters of the Task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private String[] splitDeadlineOrEventInput(String userInput) throws DukeException{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] returnValue \u003d new String[MAX_SUBSTRING_FIELDS];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] separatedSections;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (userInput.contains(\" /\")){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            separatedSections \u003d userInput.split(\" /\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            String commandWord \u003d separatedSections[0].split(\" \", 2)[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                String testForMissingRemarks \u003d separatedSections[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(TOO_LITTLE_PARAMETERS);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            // get description part of userInput without the command word"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                returnValue[0] \u003d separatedSections[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(TOO_LITTLE_PARAMETERS);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (returnValue[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(NO_DESCRIPTION);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            // get additional remark part of userInput"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            returnValue[1] \u003d separatedSections[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            boolean isRemarksEmpty \u003d ((commandWord.toLowerCase().equals(EVENT_COMMAND)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                    || commandWord.toLowerCase().equals(DEADLINE_COMMAND))  \u0026\u0026 returnValue[1].trim().length() \u003d\u003d 0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (isRemarksEmpty){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(NO_DESCRIPTION);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method attempts to split the user input into appropriate parameters of the TODO Task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * It is only applicable for the TODO command. It was separated due to having a different format."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param originalInput a String containing the processed command input provided by the user"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return a String array of size 2, containing the appropriate parameters of the Task."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String[] splitToDoInput(String originalInput) throws DukeException{"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] returnValue \u003d new String[MAX_SUBSTRING_FIELDS];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] separatedSections;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        // get description part of userInput without the command word"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        separatedSections \u003d originalInput.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String commandWord \u003d separatedSections[0].split(\" \", 2)[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //only the keyword input"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (Integer.valueOf(separatedSections.length).equals(1)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(TOO_LITTLE_PARAMETERS);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //similar to above, event and deadline should not be missing a description section"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (commandWord.toLowerCase().equals(EVENT_COMMAND) || commandWord.toLowerCase().equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new DukeException(NO_DESCRIPTION);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        returnValue[0] \u003d originalInput.trim().split(\" \", 2)[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        // remark column is an empty string"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        returnValue[1] \u003d \"\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public boolean userWantsToLeave(){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.shouldEndChat;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 150
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class is used to load and save the data of Tasks in the {@link TaskList} object to a local .txt file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Storage(String filePathInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.filePath \u003d filePathInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method saves the data stored in the Tasks of the {@link TaskList} into the local save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param taskList      the arraylist of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @throws IOException  this exception occurs if the data is unable to be written to the local save file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void saveMyTasksToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            fw \u003d new FileWriter(this.filePath); //overwrite existing file contents when called"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new IOException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //convert newTaskData to string format for storing in duke.txt"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String newTaskString;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        for (int i\u003d0; i \u003c taskList.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            Task newTaskData \u003d taskList.getTaskList().get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (newTaskData instanceof ToDo) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                //Format of todo is different with 3 fields, while Deadline/Event has 4"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                newTaskString \u003d newTaskData.getTaskData()[0] + \" | \" + newTaskData.getTaskData()[1] + \" | \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                        + newTaskData.getTaskData()[2] + System.lineSeparator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                newTaskString \u003d newTaskData.getTaskData()[0] + \" | \" + newTaskData.getTaskData()[1] + \" | \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                        + newTaskData.getTaskData()[2] + \" | \" + newTaskData.getTaskData()[3] + System.lineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            fw.write(newTaskString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method loads the saved data from the local save file before returning a {@link TaskList}."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003eIf there is no saved data present, an empty task list is created."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * Else, it will load the saved tasks to a TaskList \u003c/p\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return an ArrayList\u003cTask\u003e containing the tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @throws FileNotFoundException this exception occurs if no local save file is found."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * Handled by the Duke class which creates a new empty TaskList\u003cTask\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFileToMyTasks() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        File loadingFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (!loadingFile.exists()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            File newDirectory \u003d new File(\"Duke\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            boolean isNewDirectoryCreated \u003d newDirectory.mkdir();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (isNewDirectoryCreated) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                File newFile \u003d new File(\"Duke/duke.txt\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                    newFile.createNewFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                } catch (IOException ex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                    System.out.println(\"Failed to create file in new directory\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                System.out.println(\"Failed to create directory\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        ArrayList\u003cTask\u003e taskListToReturn \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        Scanner fileContent \u003d new Scanner(loadingFile);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        while (fileContent.hasNext()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //For each new line, add task to List myTasks"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //Process each line first, and construct new Todo/Event/Deadline object"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            String taskString \u003d fileContent.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            String[] splitTaskString \u003d taskString.trim().split(\" \\\\| \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            Task loadTaskToList;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            switch(splitTaskString[0].toUpperCase()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            case (\"T\"):"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                loadTaskToList \u003d new ToDo(splitTaskString[2] , \"\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            case (\"E\"):"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                loadTaskToList \u003d new Event(splitTaskString[2], splitTaskString[3]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            case (\"D\"):"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                loadTaskToList \u003d new Deadline(splitTaskString[2], splitTaskString[3]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                throw new DukeException(\"There seems to be an error loading a task, sorry...\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            //if task was previously marked done already, make sure to mark it as done when loading to myTasks"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            if (splitTaskString[1].equals(\":)\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                loadTaskToList.markAsDone();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskListToReturn.add(loadTaskToList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(\"Hi user! your previous tasks have been loaded into Duke...\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return taskListToReturn;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 116
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class is a list of {@link Task} objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * @see ArrayList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskListFromSave) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.tasks \u003d taskListFromSave;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.tasks.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getTaskDescription(int taskNumber) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.get(taskNumber).getDescription();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getTaskStatusIcon(int taskNumber) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.get(taskNumber).getStatusIcon();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.tasks.add(taskToAdd);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Task deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public ArrayList\u003cTask\u003e searchTaskList(ArrayList\u003cTask\u003e taskListToSearch, String searchKeyword) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        ArrayList\u003cTask\u003e matchingResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        for (Task task : taskListToSearch) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            task.tasksWithMagicWord(matchingResults, searchKeyword);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return matchingResults;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 57
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.DUKE_SAYS_HI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.ERROR_EMOJI;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.LOGO;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.NO_INPUT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import static common.Messages.SAY_SAYONARA;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class represents the user interaction with Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * It contains methods to take in user input and display messages."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private final Messages messageContainer \u003d new Messages();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Ui(InputStream in) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method greets the user on startup."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void sayIntro(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.print(LOGO);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(messageContainer.printResponseWithBorder(DUKE_SAYS_HI));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method says goodbye to the user on program termination."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void sayBye(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(messageContainer.printResponseWithBorder(SAY_SAYONARA));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    //Print out full task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This methods prints out the message input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param errorMessage the message to be printed"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void displayErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        System.out.println(ERROR_EMOJI + errorMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method collects input from the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * It runs a loop that continues if the user provides an empty input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * It only breaks when the user provides a non-empty command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return the command given as a String."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        //Take out all empty/whitespace lines"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        while (isInputEmpty(userInput)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            displayErrorMessage(NO_INPUT);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private boolean isInputEmpty(String rawInput) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return rawInput.trim().isEmpty();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 76
    }
  },
  {
    "path": "src/main/java/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class acts as a container for most of the error messages and strings"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * that are used by the rest of the classes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * \u003cp\u003eIt also holds some generalized methods that can be used to print messages,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * mainly for the classes that add and remove tasks..\u003c/p\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String MESSAGE_BOUNDARY \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String ERROR_EMOJI \u003d \"(O_o) OOPS!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final int INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String DUKE_SAYS_HI \u003d \"Hello! I\u0027m Duke d(^u^)\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String INVALID_TASK_NUMBER \u003d \"Task reference number needs to be a valid integer...\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TOO_MANY_PARAMETERS \u003d \"Too many parameters input for the command.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TOO_LITTLE_PARAMETERS \u003d \"Too little parameters input for the command.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TASKLIST_SAVE_DIRECTORY \u003d \"Duke/duke.txt\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String NO_DESCRIPTION \u003d \"The task must have a description.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TASK_NOT_FOUND \u003d \"No such task was found.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String NO_INPUT \u003d \"No valid input detected, try again...\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String ERROR_SAVING_INTO_TEXT_FILE \u003d \"Encountered an error trying to save your task into duke.txt\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String NO_MATCHES_MESSAGE \u003d \"No tasks matching the keyword were found\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String MATCHES_MESSAGE \u003d \"Here are the matching tasks in your list: \";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String ALL_USER_TASKS \u003d \"Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String MARKED_TASK_AS_DONE \u003d \"Nice, I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String EMPTY_LIST_ERROR \u003d \"The task list is empty.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String SAY_SAYONARA \u003d \"Bye, hope to see you soon! \";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String INVALID_COMMAND_MESSAGE \u003d \"Happy to see you too, but i don\u0027t know what you\u0027re saying...\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String printResponseWithBorder(String sampleText) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return MESSAGE_BOUNDARY + \"\\n\" + sampleText + \"\\n\" + MESSAGE_BOUNDARY;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static String getTaskDoneMessage(int queryNumber, TaskList listInput) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return MARKED_TASK_AS_DONE   + Integer.toString(queryNumber)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \".[\" + listInput.getTaskStatusIcon(queryNumber - INDEX_OFFSET) + \"] \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + listInput.getTaskDescription(queryNumber - INDEX_OFFSET);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static String getTaskAddedMessage(Task newTask, TaskList listInput) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String plural \u003d ((listInput.getTaskCount()  \u003e 1) ? \"s\" : \"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \" + newTask.toString() + \".\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \"Now you have \" + listInput.getTaskCount() + \" task\" + plural + \" in the list.\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static String getTaskRemovedMessage(Task removedTask, TaskList listInput) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String plural \u003d ((listInput.getTaskCount()  \u003e 1) ? \"s\" : \"\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"Got it. I\u0027ve removed this task: \\n\" + removedTask.toString()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "                + \". Now you have \" + listInput.getTaskCount() + \" task\" + plural +\" in the list.\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 94
    }
  },
  {
    "path": "src/main/java/data/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class represents the DEADLINE division of Tasks that can be stored in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * It contains a description and a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static final int NUMBER_OF_FIELDS_DEADLINE_FORMAT \u003d 4; // format: D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static final String DEADLINE_CHARACTER \u003d \"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method adds the current Deadline task to an ArrayList if the Task\u0027s description or"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * field contains the keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003eThis method is used for the FIND command.\u003c/p\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param searchResults a list of Tasks containing the magic keyword"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param magicKeyword the \u0027magic\u0027 keyword to be searched for in each Deadline object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void tasksWithMagicWord(ArrayList\u003cTask\u003e searchResults, String magicKeyword){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(this.getDescription().contains(magicKeyword)||this.getBy().contains(magicKeyword)){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            searchResults.add(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (\" + by + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method converts the data from a DEADLINE object into a String array."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return a String array consisting of the Task, its completion status and the description"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String[] getTaskData(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] taskValues \u003d new String[NUMBER_OF_FIELDS_DEADLINE_FORMAT];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[0] \u003d DEADLINE_CHARACTER;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_DONE_NOTATION;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_NOT_DONE_NOTATION;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[2] \u003d this.getDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[3] \u003d this.getBy();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return taskValues;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 61
    }
  },
  {
    "path": "src/main/java/data/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This exception is thrown for most errors that are encountered by Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 11
    }
  },
  {
    "path": "src/main/java/data/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class represents the EVENT division of Tasks that can be stored in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * It contains a description and a venue."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static final int NUMBER_OF_FIELDS_EVENT_FORMAT \u003d 4;// format: E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    private static final String EVENT_CHARACTER \u003d \"E\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method adds the current Event task to an ArrayList if the Task\u0027s description or"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * field contains the keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003eThis method is used for the FIND command.\u003c/p\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param searchResults a list of Tasks containing the magic keyword"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param magicKeyword the \u0027magic\u0027 keyword to be searched for in each Event object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void tasksWithMagicWord(ArrayList\u003cTask\u003e searchResults, String magicKeyword){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(this.getDescription().contains(magicKeyword)||this.getAt().contains(magicKeyword)){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            searchResults.add(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (\" + at + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method converts the data from a EVENT object into a String array."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return a String array consisting of the Task, its completion status and the description"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String[] getTaskData(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] taskValues \u003d new String[NUMBER_OF_FIELDS_EVENT_FORMAT];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[0] \u003d EVENT_CHARACTER;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_DONE_NOTATION;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_NOT_DONE_NOTATION;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[2] \u003d this.getDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[3] \u003d this.getAt();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return taskValues;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 61
    }
  },
  {
    "path": "src/main/java/data/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class is the superclass of all tasks that can be stored in Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected final String TASK_DONE_NOTATION \u003d \":)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected final String TASK_NOT_DONE_NOTATION \u003d \":(\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return (isDone ? \"(^u^)\" : \"(\u0027n\u0027)\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return String.format(\"[%s]%s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This abstract method is overridden in the subclasses of Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * It converts the data for Task objects into a String array."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This data is used by the Storage class when saving the task into the local save file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return the subclass will return its respective task information"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see ToDo"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public abstract String[] getTaskData();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This abstract method is overridden in the subclasses of Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * The task object is added into a searchResults"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * ArrayList if the Task\u0027s description or field contains the \u0027magic\u0027 keyword."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003eView the subclasses to see how the method is overridden.\u003c/p\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param searchResults a list of Tasks containing the search keyword"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param magicKeyword the keyword to be searched for in the Task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @see ToDo"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public abstract void tasksWithMagicWord(ArrayList\u003cTask\u003e searchResults, String magicKeyword);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 66
    }
  },
  {
    "path": "src/main/java/data/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * This class represents the TODO division of Tasks that can be stored in Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " * It contains a description"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final int NUMBER_OF_FIELDS_TODO_FORMAT \u003d 3;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public static final String TODO_CHARACTER \u003d \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public ToDo(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method adds the current ToDo task to an ArrayList if the Task\u0027s description or"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * field contains the keyword."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * \u003cp\u003eThis method is used for the FIND command.\u003c/p\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param searchResults a list of Tasks containing the magic keyword"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @param magicKeyword the \u0027magic\u0027 keyword to be searched for in each ToDo object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public void tasksWithMagicWord(ArrayList\u003cTask\u003e searchResults, String magicKeyword){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if(this.getDescription().contains(magicKeyword)){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            searchResults.add(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * This method converts the data from a TODO object into a String array."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     * @return a String array consisting of the Task, its completion status and the description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    public String[] getTaskData(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        String[] taskValues \u003d new String[NUMBER_OF_FIELDS_TODO_FORMAT];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[0] \u003d TODO_CHARACTER;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_DONE_NOTATION;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "            taskValues[1] \u003d TASK_NOT_DONE_NOTATION;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        taskValues[2] \u003d this.getDescription();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "        return taskValues;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BenardoTang"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "BenardoTang": 2,
      "-": 19
    }
  }
]
