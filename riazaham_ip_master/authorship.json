[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "riazaham"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import javax.sound.midi.SysexMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "riazaham"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * Chatbot for managing tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "riazaham"
        },
        "content": " *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * Current commands:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * todo \"task description\"                            -\u003e adds todo task to list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * deadlilne \"task description /by deadline\"          -\u003e adds deadline task to list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * event \"task description /at event\"                 -\u003e adds event task to list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * list                                               -\u003e shows the list of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * done \"index\"                                       -\u003e marks the task at that index as done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * e.g done 1                                         -\u003e marks the 1st task as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * delete \"index\"                                     -\u003e deletes the task at that index"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * e.g delete 1                                       -\u003e deletes the 1st task from the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * bye                                                -\u003e system exits after exit message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "riazaham"
        },
        "content": " * any other input                                    -\u003e echos the input and adds it to a list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "riazaham"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    //Variables"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static ArrayList\u003cTask\u003e userInputList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "riazaham"
        },
        "content": "         * String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "riazaham"
        },
        "content": "         *         + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "riazaham"
        },
        "content": "         *         + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "riazaham"
        },
        "content": "         *         + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "riazaham"
        },
        "content": "         *         + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "riazaham"
        },
        "content": "         * System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "riazaham"
        },
        "content": "         */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        introMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            getTasksFromFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        } catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Scanner in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Check user input and add/modify accordingly"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            String[] userInputs \u003d userInput.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            if (!userInput.equals(\"bye\")) { //this line is so that bye is not \u0027added\u0027"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    switch (userInputs[0]) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        addTodoToList(userInputs, true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        addDeadlineToList(userInputs, true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        addEventToList(userInputs, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        listTasks();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        markTaskAsDone(userInputs);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        deleteTask(userInputs);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) { //done and delete"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    System.out.println(\"OOPS!!! The command needs to be followed by a task number.\" );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    System.out.println(\"OOPS!!! The specified task does not exist. There are only \" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                            userInputList.size() + \" tasks\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    System.out.println(\"OOPS!!! Something went wrong.\" );"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        } while (!userInput.equals(\"bye\"));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        exitDuke();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void getTasksFromFile() throws IOException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        File f \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        boolean mkdir \u003d new File(\"./data\").mkdir();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        boolean result \u003d f.createNewFile();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (mkdir | result) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            System.out.println(\"New file created at [project root]/data/duke.txt\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        while(s.hasNext()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            String[] lines \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            String taskDescription \u003d lines[2];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            switch (lines[0]) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                Todo addedTodo \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                userInputList.add(addedTodo);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                Deadline addedDeadline \u003d new Deadline(taskDescription);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                userInputList.add(addedDeadline);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                Event addedEvent \u003d new Event(taskDescription);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                userInputList.add(addedEvent);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                System.out.println(\"Invalid Format!\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            //Mark as done"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            if (Integer.parseInt(lines[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                userInputList.get(counter - 1).setIsDone(true);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            //System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        listTasks();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void deleteTask(String[] userInputs) throws ArrayIndexOutOfBoundsException, IOException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Check for only \u0027delete\u0027"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (userInputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        int indexToBeDeleted \u003d Integer.parseInt(userInputs[1]) - 1;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        Task deletedTask \u003d userInputList.remove(indexToBeDeleted);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Modify local file"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        writeListToFile();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Notify user"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"    \" + deletedTask);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Now you have \" + userInputList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void markTaskAsDone(String[] userInputs) throws ArrayIndexOutOfBoundsException, IOException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Check for only \u0027done\u0027"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (userInputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //List indexed from 0, offset by 1"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        int listNumber \u003d Integer.parseInt(userInputs[1]) - 1;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        userInputList.get(listNumber).setIsDone(true);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Modify local file"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        writeListToFile();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //notify user"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n    \" + userInputList.get(listNumber));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void listTasks() {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        for (Task task : userInputList) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            System.out.println(counter + \". \" + task);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void introMessage() {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Intro message"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    //Split at delimiter with format -\u003e before (delimiter: after)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static String getFormattedString(String[] userInputs, String delimiter) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        for (int i \u003d 1; i \u003c userInputs.length; i++) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            if (userInputs[i].equals(delimiter)) { //split at delimiter"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                switch (delimiter){"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                case \"/by\":"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    text +\u003d \"(by: \";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                case \"/at\":"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    text +\u003d \"(at: \";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    text +\u003d delimiter;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            } else if (i \u003d\u003d userInputs.length - 1) { //last word"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                text +\u003d userInputs[i] + \")\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                text +\u003d userInputs[i] + \" \";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void exitDuke() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    //Not implemented"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void addTaskToList(Task addedTask, Boolean notify) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Add duke.tasks.Task to list"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        userInputList.add(addedTask);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Notify user"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"    \" + addedTask);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Now you have \" + userInputList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void addEventToList(String[] userInputs, Boolean notify) throws DukeException {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Check for only \"event\""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (userInputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Split event -\u003e format -\u003e \"description (at: event)\""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        String event \u003d getFormattedString(userInputs, \"/at\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        Event addedEvent \u003d new Event(event);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Add into local file"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            writeToFile(\"E\", event);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Add into list"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        userInputList.add(addedEvent);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (notify) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            notifyUser(addedEvent);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void addDeadlineToList(String[] userInputs, Boolean notify) throws DukeException {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Check for only \"deadline\""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (userInputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Split deadline -\u003e format -\u003e \"description (by: deadline)\""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        String deadline \u003d getFormattedString(userInputs, \"/by\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        Deadline addedDeadline \u003d new Deadline(deadline);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Add into local file"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            writeToFile(\"D\", deadline);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Add into list"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        userInputList.add(addedDeadline);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (notify) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            notifyUser(addedDeadline);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void addTodoToList(String[] userInputs, Boolean notify)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        String todo \u003d \"\";"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Check for only \"todo\""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (userInputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Add words after todo into a string"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        for (int i \u003d 1; i \u003c userInputs.length; i++) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            todo +\u003d userInputs[i] + \" \";"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        Todo addedTodo \u003d new Todo(todo);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Add into local file"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            writeToFile(\"T\", todo);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Add into list"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        userInputList.add(addedTodo);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        if (notify) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            notifyUser(addedTodo);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void writeToFile(String taskType, String taskDescription) throws IOException {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"./data/duke.txt\", true);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        String textToAdd \u003d taskType + \"|0|\" + taskDescription + \"\\n\";"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void writeListToFile() throws IOException {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        for (Task task : userInputList) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            String[] taskDescriptions \u003d task.toString().split(\"\\\\s+\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            String taskType \u003d String.valueOf(taskDescriptions[0].charAt(1));"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            String done \u003d String.valueOf(taskDescriptions[0].charAt(4)).equals(TICK) ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            String taskDescription \u003d String.join(\" \","
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "riazaham"
        },
        "content": "                    Arrays.copyOfRange(taskDescriptions, 1, taskDescriptions.length));"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            textToAdd \u003d taskType + \"|\" + done + \"|\" + taskDescription + \"\\n\";"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "riazaham"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public static void notifyUser(Task task) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        //Notify user"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        System.out.println(\"Now you have \" + userInputList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "riazaham": 356,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "riazaham"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "riazaham"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    private String typeOfTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public DukeException(String typeOfTask) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        this.typeOfTask \u003d typeOfTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return typeOfTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return \"OOPS!!! The description of a \" + typeOfTask + \" cannot be empty.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "riazaham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "riazaham": 18
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "riazaham"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "riazaham"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "riazaham"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    protected final String typeOfTask \u003d \"[D]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return typeOfTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return getTypeOfTask() + getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "riazaham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "riazaham": 20
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "riazaham"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "riazaham"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    protected final String typeOfTask \u003d \"[E]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return typeOfTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return getTypeOfTask() + getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "riazaham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "riazaham": 18
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "riazaham"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "riazaham"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public void setIsDone(boolean done) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "riazaham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "riazaham": 36
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "riazaham"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "riazaham"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    protected final String typeOfTask \u003d \"[T]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return typeOfTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "riazaham"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "riazaham"
        },
        "content": "        return getTypeOfTask() + getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "riazaham"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "riazaham"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "riazaham": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "riazaham"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "riazaham"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "riazaham"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "riazaham"
        },
        "content": "event RHG /at Lounge"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "riazaham"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "riazaham"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "riazaham"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "riazaham"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "riazaham": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "riazaham"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "riazaham"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "riazaham": 2,
      "-": 19
    }
  }
]
