[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": "Duke is a desktop app for managing tasks, "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "optimised for use via a Command Line Interface (CLI). "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "These are the type of tasks that can be managed in Duke:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. Todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. Deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "1. Event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "\u003eNote about the command format:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "\u003e* Words in `UPPER_CASE` are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Adding a Todo: `todo`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "Adds a Todo to the list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `todo TASK_NAME`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "Example: `todo CS iP Level 10`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Adding a Deadline: `deadline`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "Adds a Deadline to the list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `deadline TASK_NAME /by TASK_DEADLINE`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "Example: `deadline User Guide /by 1st Oct`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Adding an Event: `event`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "Adds an Event to the list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `event TASK_NAME /at TASK_DAY_OR_TIME`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "Example: `event CS Tutorial /at Friday 12pm`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "Shows a list of all the tasks in Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "* The `list` command is case-insensitive."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "Example: `list` displays the list of tasks currently stored in Duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Marking a task as done: `done`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "Marks a certain task in the list as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `done TASK_INDEX`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "* The `TASK_INDEX` starts from 1."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "Example: `done 2` marks the second task in the list as done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "if there are 2 or more tasks in the list, "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "or is recognised as an invalid command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "if there are less than 2 tasks in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": "Removes a certain task from the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `delete TASK_INDEX`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": "* The `TASK_INDEX` starts from 1."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": "Example: `delete 2` deletes the second task in the list "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "if there are 2 or more tasks in the list, "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerct"
        },
        "content": "or is recognised as an invalid command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerct"
        },
        "content": "if there are less than 2 tasks in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Saving data"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "The tasks that you add or mark as done will be saved externally in a file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "When you start the program, these data will be loaded "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "so that you can continue from where you left off the previous time. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Finding a task: `find`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "Finds a task by searching for a keyword."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "Example: `find CS` displays a list of tasks whose names contain `CS`."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerct"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerct"
        },
        "content": "Quits the Duke program."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerct"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerct"
        },
        "content": "* The `bye` command is case-insensitive."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerct"
        },
        "content": "Example: `bye` causes the program to end, "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerct"
        },
        "content": "and the user is no longer prompted for more inputs."
      }
    ],
    "authorContributionMap": {
      "kerct": 73,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Represents the different commands recognised."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "    TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "    LIST(\"list\"), DONE(\"done\"), DELETE(\"delete\"), FIND(\"find\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    BY(\"/by\"), AT(\"/at\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "    EXIT(\"bye\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "    INVALID(\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private final String KEYWORD;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "    Command(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "        KEYWORD \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String getKeyword() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return KEYWORD;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "import exception.EmptyNameException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import exception.MissingArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates a Duke instance with data loaded from and stored at the specified file path."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param filePath File path where data will be loaded from and stored."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "            Scanner reader \u003d storage.getReader();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "            while (reader.hasNext()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "                String input \u003d reader.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "                Command command \u003d parser.identifyCommand(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "                handleCommand(input, command, false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "            ui.printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Starts the Duke program where users will be prompted for inputs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Command command \u003d parser.identifyCommand(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "        while (command !\u003d Command.EXIT) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "            handleCommand(input, command, true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "            command \u003d parser.identifyCommand(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "        ui.printEndMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private void handleCommand(String input, Command command, boolean toPrint) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerct"
        },
        "content": "                ui.printDottedLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "            executeCommand(input, command, toPrint);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\tPlease enter the task number too!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I can\u0027t find this task\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "                ui.printDottedLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private void executeCommand(String input, Command command, boolean toPrint)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerct"
        },
        "content": "            throws InvalidIndexException, IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerct"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerct"
        },
        "content": "            ui.printTaskList(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case DONE: {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerct"
        },
        "content": "            int index \u003d parser.getIndexFromInput(input, command, tasks.getTotal());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "            Task task \u003d tasks.markTaskAsDone(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerct"
        },
        "content": "                ui.printTaskMarkedAsDone(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerct"
        },
        "content": "                storage.appendToFile(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case DELETE: {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerct"
        },
        "content": "            int index \u003d parser.getIndexFromInput(input, command, tasks.getTotal());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerct"
        },
        "content": "            Task task \u003d tasks.removeTask(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (toPrint) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerct"
        },
        "content": "                ui.printTaskRemoved(task, tasks.getTotal());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerct"
        },
        "content": "                storage.appendToFile(input);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerct"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerct"
        },
        "content": "                String name \u003d parser.getNameFromInput(input, command);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerct"
        },
        "content": "                Task todo \u003d new Todo(name);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerct"
        },
        "content": "                tasks.addToTaskList(todo);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerct"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    ui.printTaskAdded(todo, tasks.getTotal());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerct"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerct"
        },
        "content": "            } catch (EmptyNameException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerct"
        },
        "content": "                System.out.println(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerct"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerct"
        },
        "content": "                Task deadline \u003d parser.getDeadlineFromInput(input);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": "                tasks.addToTaskList(deadline);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerct"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    ui.printTaskAdded(deadline, tasks.getTotal());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerct"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerct"
        },
        "content": "            } catch (MissingArgumentException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerct"
        },
        "content": "                System.out.println(\"\\tPlease tell me when this is due!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerct"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kerct"
        },
        "content": "                Task event \u003d parser.getEventFromInput(input);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kerct"
        },
        "content": "                tasks.addToTaskList(event);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kerct"
        },
        "content": "                if (toPrint) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    ui.printTaskAdded(event, tasks.getTotal());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kerct"
        },
        "content": "                    storage.appendToFile(input);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kerct"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kerct"
        },
        "content": "            } catch (MissingArgumentException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kerct"
        },
        "content": "                System.out.println(\"\\tPlease tell me when is this event!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kerct"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kerct"
        },
        "content": "                String searchTerm \u003d parser.getNameFromInput(input, command);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kerct"
        },
        "content": "                TaskList matchingTasks \u003d tasks.findTasks(searchTerm);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kerct"
        },
        "content": "                ui.printMatchingTasks(matchingTasks);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kerct"
        },
        "content": "            } catch (EmptyNameException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kerct"
        },
        "content": "                System.out.println(\"\\tWhat do you want to find?\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kerct"
        },
        "content": "        case INVALID:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kerct"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\tSomething went wrong here...\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kerct"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 152,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "import exception.EmptyNameException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import exception.MissingArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Acts an a helper class to make sense of user inputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns the Command to carry out based on the given input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param input The input keyed in by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return Command to be executed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Command identifyCommand(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (input.trim().equalsIgnoreCase(Command.LIST.getKeyword())) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else if (input.startsWith(Command.DONE.getKeyword())) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else if (input.startsWith(Command.DELETE.getKeyword())) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else if (input.startsWith(Command.TODO.getKeyword())) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else if (input.startsWith(Command.DEADLINE.getKeyword())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else if (input.startsWith(Command.EVENT.getKeyword())) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else if (input.startsWith(Command.FIND.getKeyword())) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else if (input.trim().equalsIgnoreCase(Command.EXIT.getKeyword())) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.EXIT;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "            return Command.INVALID;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns the index of the task list which the user is referring to,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * based on the given input and recognised command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param input The input keyed in by the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param command The identified command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param numOfTasks The number of tasks in the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return The index of the identified task in the task list, which starts from 0."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @throws NumberFormatException If the given input is not a number."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @throws InvalidIndexException If the given input is a number that is out of range."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public int getIndexFromInput(String input, Command command, int numOfTasks)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "            throws NumberFormatException, InvalidIndexException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "        int index \u003d Integer.parseInt(input.substring(command.getKeyword().length()).trim()) - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (index \u003c 0 || index \u003e numOfTasks - 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns the name of the task obtained from the given input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param input The input keyed in by the user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param command The identified command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return The name of the task inputted."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @throws EmptyNameException If there was no name inputted."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String getNameFromInput(String input, Command command) throws EmptyNameException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String name \u003d input.substring(command.getKeyword().length()).trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (name.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "            throw new EmptyNameException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates and returns a Deadline object from the given input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param input The input keyed in by the user."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return The new Deadline object."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @throws MissingArgumentException If there was no deadline specified."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Deadline getDeadlineFromInput(String input) throws MissingArgumentException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerct"
        },
        "content": "        int byIndex \u003d input.indexOf(Command.BY.getKeyword());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (byIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerct"
        },
        "content": "            throw new MissingArgumentException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String name \u003d input.substring(Command.DEADLINE.getKeyword().length(), byIndex).trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String by \u003d input.substring(byIndex + Command.BY.getKeyword().length()).trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return new Deadline(name, by);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates and returns an Event object from the given input."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param input The input keyed in by the user."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return The new Event object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @throws MissingArgumentException If the event date or time was not specified."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Event getEventFromInput(String input) throws MissingArgumentException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerct"
        },
        "content": "        int atIndex \u003d input.indexOf(Command.AT.getKeyword());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (atIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerct"
        },
        "content": "            throw new MissingArgumentException();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String name \u003d input.substring(Command.EVENT.getKeyword().length(), atIndex).trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String at \u003d input.substring(atIndex + Command.AT.getKeyword().length()).trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return new Event(name, at);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 108
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Deals with loading tasks from and saving tasks to a file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates a new Storage object with a File created at the specified file path."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param filePath File path whereby data is loaded from and stored at."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns a scanner object to read the file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return Scanner to read the file of the Storage object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @throws FileNotFoundException If the file cannot be found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Scanner getReader() throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Appends the specified input to the storage file and creates a new line."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param input The input to be appended to the file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @throws IOException If the file cannot be opened or modified."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void appendToFile(String input) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "        // creates a FileWriter in append mode"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "        fw.write(input + System.lineSeparator());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Represents the list of Tasks in a Duke program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Prints out the given message followed by all the tasks in the current list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param message Message to be printed before listing the tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printList(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfTasks; i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \". \" + task.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns the total number of tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return Size of the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public int getTotal() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Marks the task at the given index as completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param index Index of the task to be marked as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return The task marked as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Task markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Removes the task at the given index from the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param index Index of the task to be removed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return The task which was removed from the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Adds the given Task to the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param task Task to be added to the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void addToTaskList(Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public TaskList findTasks(String searchTerm) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": "        tasks.forEach(task -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "            if (task.getName().contains(searchTerm)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "                matchingTasks.addToTaskList(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "        });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 76
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Deals with the display of messages to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private final String DOTTED_LINE \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "            \"\\t----------------------------------------------------------\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates a new Ui object and prints out the logo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Displays a greeting message to welcome the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(DOTTED_LINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(DOTTED_LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Displays an ending message to say goodbye to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printEndMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(DOTTED_LINE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(DOTTED_LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Formats and displays the given error message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param errorMessage The error message to be printed out."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printErrorMessage(String errorMessage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(DOTTED_LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\tERROR\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\t\" + errorMessage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(DOTTED_LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Prints a dotted line which acts as a line break to distinguish between sections."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printDottedLine() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(DOTTED_LINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Displays a notification that the given Task is marked as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param task Task that was marked as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printTaskMarkedAsDone(Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Displays a notification that the given Task is removed,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * and prints out the total number of tasks left."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param task Task that was removed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param numOfTasks Total number of tasks left."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printTaskRemoved(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kerct"
        },
        "content": "        printTaskAndTotal(task, numOfTasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Displays a notification to show that the Task was added."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param task Task that was just added."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param numOfTasks Total number of tasks in the list after adding."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printTaskAdded(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kerct"
        },
        "content": "        printTaskAndTotal(task, numOfTasks);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private void printTaskAndTotal(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kerct"
        },
        "content": "        System.out.println(\"\\t\\t\" + task.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\tNow you only have 1 task in the list!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kerct"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\tNow you have \" + numOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Prints out the tasks in the list, if any."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (tasks.getTotal() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\tThere are no tasks in your list!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kerct"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kerct"
        },
        "content": "            tasks.printList(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Prints out the matched tasks, if any."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param tasks List of matched tasks."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void printMatchingTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kerct"
        },
        "content": "        if (tasks.getTotal() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kerct"
        },
        "content": "            System.out.println(\"\\tNo tasks found!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kerct"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kerct"
        },
        "content": "            tasks.printList(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kerct"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 129
    }
  },
  {
    "path": "src/main/java/exception/EmptyNameException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Represents an exception whereby the inputted name is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class EmptyNameException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Represents an exception whereby the inputted index is out of bounds."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class InvalidIndexException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 7
    }
  },
  {
    "path": "src/main/java/exception/MissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Represents an exception whereby the number of arguments given is not enough."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class MissingArgumentException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 7
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates a Deadline object with the given name, to be completed by the given date or time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param name Name of the task to be done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param by Date or time that the task is to be completed by."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns a string representation of the Deadline object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Consists of the status of the task, its name and the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return String representation."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + name + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 30
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Represents an event at a certain date or time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates an Event object with the given name, to be held at the given date or time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param name Name of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param at Date or time of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns a string representation of the Event object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Consists of the status of the event, its name and the event date or time."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return String representation."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + name + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 30
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": "    private final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates a Task object with the given name."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * By default, the task is not completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param name Name of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns the string representing the icon of the task status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * A completed task is represented by a tick,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * while a task that is not done is represented by a cross."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return The unicode representation of the status icon."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kerct"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return (isDone ? TICK_ICON : CROSS_ICON);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns a string representation of the Task object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Consists of the task status and name."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return String representation."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + name;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns the name of the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return Name of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 58
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kerct"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kerct"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kerct"
        },
        "content": " * Represents a task to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kerct"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kerct"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Creates a Todo object with the given name."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @param name Name of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kerct"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kerct"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kerct"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Returns a string representation of the Todo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * Consists of the status of the todo and its name."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kerct"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kerct"
        },
        "content": "     * @return String representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kerct"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kerct"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kerct"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kerct"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kerct"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kerct"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kerct": 26
    }
  }
]
