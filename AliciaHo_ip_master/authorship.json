[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "# Duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "AliciaHo": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                super.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AliciaHo": 17
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        Task[] list \u003d new Task[100];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        int noOfTask \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //Get input from user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.Duke\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        int divider \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //If bye was not inputted, ask for input again"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            //If user inputted list, return list of items"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            if (userInput.contains(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                listTask(list, noOfTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            //If user inputted done, then mark the task as done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } else if (userInput.contains(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                doneTask(userInput, list, divider);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            //If user inputted deadline, then add the task under deadline cat"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } else if (userInput.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                noOfTask \u003d Deadline(userInput, list, noOfTask, divider);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            //If user inputted to do, then add the task under to do cat"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } else if (userInput.contains(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                noOfTask \u003d Todo(userInput, list, noOfTask, divider);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            //If user inputted event, then add task under event cat"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } else if (userInput.contains(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                noOfTask \u003d Event(userInput, list, noOfTask, divider);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            //else print added statement and add the item to list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                new Exception(\"random\", null);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    private static int Event(String line, Task[] list, int noOfTask, int divider) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        int dividerDate \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //Run description error"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        if (line.equals(\"event\") || line.equals(\"event \")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            new Exception(\"description\", \"event\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //Run date error"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        } else if (line.endsWith(\"/\") || line.endsWith(\"/ \")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            new Exception(\"date\", \"event\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //If no error, run code to store event"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            list[noOfTask] \u003d new Event(line.substring((divider + 1),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                    (dividerDate - 1)), line.substring(dividerDate + 4));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            noOfTask++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            System.out.println(\"  \" + list[noOfTask - 1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            if ((noOfTask - 1) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"Now you have \" + noOfTask + \" task in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"Now you have \" + noOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        return noOfTask;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    private static int Todo(String line, Task[] list, int noOfTask, int divider) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //Run description error"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        if (line.equals(\"todo\") || line.equals(\"todo \")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            new Exception(\"description\", \"todo\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //If no error, run code to store to do"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            list[noOfTask] \u003d new Todo(line.substring(divider + 1));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            noOfTask++;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            System.out.println(\"  \" + list[noOfTask - 1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            if ((noOfTask - 1) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"Now you have \" + noOfTask + \" task in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"Now you have \" + noOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        return noOfTask;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    private static int Deadline(String line, Task[] list, int noOfTask, int divider) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        int dividerDate \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //Run description error"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        if (line.equals(\"deadline\") || line.equals(\"deadline \")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            new Exception(\"description\", \"deadline\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //Run date error"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        } else if (line.endsWith(\"/\") || line.endsWith(\"/ \")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            new Exception(\"date\", \"deadline\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //If no error, run code to store deadline"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            list[noOfTask] \u003d new Deadline(line.substring((divider + 1),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                    (dividerDate - 1)), line.substring(dividerDate + 4));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            noOfTask++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            System.out.println(\"  \" + list[noOfTask - 1]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            if ((noOfTask - 1) \u003c\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"Now you have \" + noOfTask + \" task in the list.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"Now you have \" + noOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        return noOfTask;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    private static void doneTask(String line, Task[] list, int divider) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //Run description error"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        if (line.equals(\"done\") || line.equals(\"done \")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            new Exception(\"description\", \"done\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //If no description error, run code to tick done"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(line.substring(divider + 1));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                list[taskNumber - 1].setDone();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"  \" + list[taskNumber - 1]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            //If no number is input, throw error"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"Please input the task number!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    private static void listTask(Task[] list, int noOfTask) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //Run empty error"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        if (noOfTask \u003d\u003d 0) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            new Exception(\"empty\", null);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        //If no error, run code to list task"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            for (int i \u003d 0; i \u003c noOfTask; i++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                int listNumber \u003d i + 1;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(listNumber + \".\" + list[i]);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AliciaHo": 158,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                super.description + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AliciaHo": 17
    }
  },
  {
    "path": "src/main/java/Duke/Exception.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "public class Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public Exception (String type, String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            case \"description\":"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                        + description + \" cannot be empty.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"☹ OOPS!!! The date of a \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                        + description + \" cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            case \"random\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "            case \"empty\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but there is no tasks in list. :-(\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AliciaHo": 23
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AliciaHo": 19
    }
  },
  {
    "path": "src/main/java/Duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "                super.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AliciaHo": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AliciaHo"
        },
        "content": "java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "AliciaHo": 2,
      "-": 19
    }
  }
]
