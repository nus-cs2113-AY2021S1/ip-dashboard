[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 1,
      "-": 25
    }
  },
  {
    "path": "source_list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\DukeList.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Exceptions\\DukeException.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Exceptions\\ExceptionType.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Deadline.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Event.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\TaskType.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 10
    }
  },
  {
    "path": "src/main/java/duke/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        dukeList.addTask(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(new String[] {\"Task added: \", task.toString(), dukeList.reportListSize()});"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 18
    }
  },
  {
    "path": "src/main/java/duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    protected CommandType commandType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public CommandType getCommandType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public abstract void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 18
    }
  },
  {
    "path": "src/main/java/duke/Command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    CMD_EXIT, CMD_LIST, CMD_DONE, CMD_DELETE, CMD_TODO, CMD_DEADLINE, CMD_EVENT, CMD_INVALID"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 5
    }
  },
  {
    "path": "src/main/java/duke/Command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DeadlineCommand(String name, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        task \u003d new Deadline(name, time);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 10
    }
  },
  {
    "path": "src/main/java/duke/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_DELETE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(dukeList.deleteTask(index));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 22
    }
  },
  {
    "path": "src/main/java/duke/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_DONE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(dukeList.markAsDone(index));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 22
    }
  },
  {
    "path": "src/main/java/duke/Command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public EventCommand(String name, String time) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        task \u003d new Event(name, time);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 11
    }
  },
  {
    "path": "src/main/java/duke/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_EXIT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        store.writeToFile(dukeList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOutSingle(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 20
    }
  },
  {
    "path": "src/main/java/duke/Command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_INVALID;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOutSingle(\"Woah hol up! That is not a valid command.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 19
    }
  },
  {
    "path": "src/main/java/duke/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_LIST;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(dukeList.listTasks());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 19
    }
  },
  {
    "path": "src/main/java/duke/Command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public TodoCommand(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        task \u003d new ToDo(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_TODO;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 12
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Command.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String DATA_FILE_PATH \u003d \"data/list_data.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String[] GREETING \u003d {getLogo(), \"Hello, I am Duke\", \"What can I do for you?\"};"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private DukeList dukeList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private Storage store;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        store \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        dukeList \u003d new DukeList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            store.readFromFile(dukeList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            ui.printOutSingle(ex.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "       new Duke(DATA_FILE_PATH).run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(GREETING);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                Command cmd \u003d Parser.parseRaw(ui.readLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                cmd.executeCommand(dukeList, ui, store);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                if (cmd.getCommandType() \u003d\u003d CommandType.CMD_EXIT) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } catch (DukeException | IndexOutOfBoundsException | IOException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                ui.printOutSingle(ex.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * System.out.println(getLogo()) prints the logo."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String that can be printed directly to print the logo."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static String getLogo() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return (\"____        _        \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 47,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/DukeList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DukeList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DukeList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates a new task and adds it to the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param task is the name of task to be added to the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Deletes a task from the list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param serialNum serial number of task as printed when tasks are listed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String array to indicate success."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] deleteTask(int serialNum) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        int index \u003d serialNum - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] result \u003d {\"Task removed:\", tasks.get(index).toString(), \"\"};"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        result[2] \u003d reportListSize();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates an array of task names in our list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * The first element is a string that serves as a header for the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Each subsequent element begins with the serial number which is 1 more than the task index."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Each subsequent element of the array also has a status field."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Y indicates that task is done and N indicates that the task is not done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return Array of Strings that enumerates the tasks in our list. Null if list empty."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] listTasks() throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            throw new DukeException(ExceptionType.EMPTY_LIST);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] result \u003d new String[tasks.size() + 1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        result[0] \u003d \"The following items are tracked:\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            // Format list entry as \u003cserial number\u003e. [\u003cstatus\u003e] \u003ctask name\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result[i] \u003d i + \". \" + task.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Mark a task as done by setting isDone attribute to true."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param serialNum serial number of task as printed when tasks are listed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String array to indicate success."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] markAsDone(int serialNum) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        int index \u003d serialNum - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Task currentTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        currentTask.setIsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (new String[] {\"Nice! You have completed the following item: \","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                \"  \" + currentTask.toString()});"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Reports the number of tasks in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return string that reports the number of tasks in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String reportListSize() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"This list has \" + tasks.size() + \" task\" + ((tasks.size() \u003e 1) ? \"s.\" : \".\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (tasks.size() \u003c\u003d 0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 88
    }
  },
  {
    "path": "src/main/java/duke/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private ExceptionType exType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DukeException(ExceptionType exType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.exType \u003d exType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String msg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        switch (exType) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case EMPTY_LIST:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"There are no tasks to list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case NO_TODO_DESCRIPTION:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"Hey! Description of todo cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case NO_DEADLINE_DESCRIPTION:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"Hey! Description of deadline cannot be empty.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case NO_EVENT_DESCRIPTION:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"Hey! Description of event cannot be empty.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            // Should not happen. Only create exceptions with valid types."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"uhh this is bad.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ExceptionType getExType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return exType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 37
    }
  },
  {
    "path": "src/main/java/duke/Exceptions/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    EMPTY_LIST, NO_TODO_DESCRIPTION, NO_DEADLINE_DESCRIPTION, NO_EVENT_DESCRIPTION"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 5
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.ExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public static Command parseRaw(String rawCommand) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Command result;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] arguments \u003d rawCommand.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_EXIT:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new ExitCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_LIST:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_DONE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            index \u003d Integer.valueOf(arguments[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new DoneCommand(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_DELETE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            index \u003d Integer.valueOf(arguments[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_TODO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d parseAdd(TaskType.TODO, arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_DEADLINE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d parseAdd(TaskType.DEADLINE, arguments);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_EVENT:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d parseAdd(TaskType.EVENT, arguments);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new InvalidCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Parse the command to add a task to duke.Duke List"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param type The type of task from task.TaskType to create."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param args Array of Strings obtained from splitting a command by spaces."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return Array of Strings to indicate result of adding task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static Command parseAdd(TaskType type, String[] args) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String name \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        boolean isName \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (int i \u003d 1; i \u003c args.length; ++i) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (args[i].equals(\"/by\") || args[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                isName \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (isName) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Concatenate to name"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                name \u003d name + args[i] + \" \";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Concatenate to time"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                time \u003d time + args[i] + \" \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Command cmd \u003d null;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (name.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                throw new DukeException(ExceptionType.NO_TODO_DESCRIPTION);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            cmd \u003d new TodoCommand(name);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (name.isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                throw new DukeException(ExceptionType.NO_DEADLINE_DESCRIPTION);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            cmd \u003d new DeadlineCommand(name, time);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (name.isEmpty()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                throw new DukeException(ExceptionType.NO_EVENT_DESCRIPTION);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            cmd \u003d new EventCommand(name, time);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        // There are no other cases"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 101
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final int IS_TYPE \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final int IS_DONE \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final int IS_NAME \u003d 2;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final int IS_TIME \u003d 3;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private Task createTask(String[] details) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Task currentTask \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        boolean[] flags \u003d {true, false, false, false};"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] fields \u003d {\"\", \"\", \"\", \"\"};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (String detail : details) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (detail.equals(\"/done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_TYPE] \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_DONE] \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (detail.equals(\"/name\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_DONE] \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_NAME] \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (detail.equals(\"/time\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_NAME] \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_TIME] \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (flags[IS_TYPE]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                fields[IS_TYPE] +\u003d detail;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (flags[IS_DONE]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                fields[IS_DONE] +\u003d detail;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (flags[IS_NAME]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                fields[IS_NAME] +\u003d detail + \" \";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                fields[IS_TIME] +\u003d detail + \" \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (fields[IS_TYPE].equals(\"ToDo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            currentTask \u003d new ToDo(fields[IS_NAME]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } else if (fields[IS_TYPE].equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            currentTask \u003d new Deadline(fields[IS_NAME], fields[IS_TIME]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } else if (fields[IS_TYPE].equals(\"Event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            currentTask \u003d new Event(fields[IS_NAME], fields[IS_TIME]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        assert currentTask !\u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (fields[IS_DONE].equals(\"Y\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            currentTask.setIsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return currentTask;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static String toFileFormat(String line) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] fields \u003d {\"\", \"\", \"\", \"\"};"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] typeAndDone \u003d line.split(\"]\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] type \u003d typeAndDone[0].split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        fields[IS_TYPE] \u003d type[1].replace(\"[\", \"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        fields[IS_DONE] \u003d typeAndDone[IS_DONE].replace(\"[\", \"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] nameAndTime \u003d typeAndDone[2].replace(\"(\", \"]\").split(\"]\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        fields[IS_NAME] \u003d nameAndTime[0].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (fields[IS_TYPE].equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String time \u003d nameAndTime[1].split(\"by:\")[1].trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            fields[IS_TIME] \u003d time.replace(\")\", \"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } else if (fields[IS_TYPE].equals(\"Event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String time \u003d nameAndTime[1].split(\"at:\")[1].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            fields[IS_TIME] \u003d time.replace(\")\", \"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return fields[IS_TYPE] + \" /done \" + fields[IS_DONE] + \" /name \" + fields[IS_NAME]"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                + \" /time \" + fields[IS_TIME];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void readFromFile(DukeList dukeList) throws IOException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        // Check if the directory exists and create directory if it does not exist"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        File dataDir \u003d new File(dataFile.getParent());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Scanner scanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String[] details \u003d line.split(\" \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            dukeList.addTask(createTask(details));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Files.delete(Paths.get(filePath));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void writeToFile(DukeList dukeList) throws IOException, DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (dukeList.isEmpty()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            // Nothing to write"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] lines \u003d dukeList.listTasks();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (int i \u003d 1; i \u003c lines.length; ++i) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            // Ignore the first line."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            writer.write(toFileFormat(lines[i]));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            writer.write(System.lineSeparator());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LiewWS": 131
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Prints the horizontal line divider."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private void printDiv() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Prints each string on a separate line with one space indentation."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Starts and ends the group of output with a horizontal line divider."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param lines Array of Strings to be printed on separate lines."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void printOut(String[] lines) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (line \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            System.out.println(\" \" + line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * printOut for output that consists of only one line."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param line String to be printed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void printOutSingle(String line) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        System.out.println(\" \" + line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Deadline(String name, String dateTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[Deadline]\" + super.toString() + \"( by: \" + dateTime + \")\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String timeSlot;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Event(String name, String timeSlot) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.timeSlot \u003d timeSlot;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[Event]\" + super.toString() + \"( at: \" + timeSlot + \")\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    protected Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void setIsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[\" + (isDone ? \"Y\" : \"N\") + \"] \" + name);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 28
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[ToDo]\" + super.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 314"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "fly a kite"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete everything"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "bye"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LiewWS": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "javac -cp @..\\source_list.txt -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "#cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 3,
      "-": 35
    }
  }
]
