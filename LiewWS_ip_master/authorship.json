[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 1,
      "-": 25
    }
  },
  {
    "path": "source_list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\DukeList.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Event.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Task.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\TaskType.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 8
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import static duke.task.TaskType.DEADLINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import static duke.task.TaskType.EVENT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import static duke.task.TaskType.TODO;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        DukeList dList \u003d new DukeList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] greet \u003d {getLogo(), \"Hello! I\u0027m Duke\", \"What can I do for you?\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        printOut(greet);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String cmd \u003d scan.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String[] arguments \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                if (arguments[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                } else if (arguments[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    printOut(dList.listTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                } else if (arguments[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    printOut(dList.markAsDone(Integer.valueOf(arguments[1])));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                } else if (arguments[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    printOut(parseAdd(TODO, arguments, dList));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                } else if (arguments[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    printOut(parseAdd(DEADLINE, arguments, dList));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                } else if (arguments[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    printOut(parseAdd(EVENT, arguments, dList));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    printOutSingle(\"Woah hol up! That is not a valid command.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } catch (DukeException dex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                printOutSingle(dex.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                printOutSingle(\"The index you are looking for is unavailable.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printOutSingle(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Prints the horizontal line divider."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printDiv() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Prints each string on a separate line with one space indentation."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Starts and ends the group of output with a horizontal line divider."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param lines Array of Strings to be printed on separate lines."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printOut(String[] lines) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (line \u003d\u003d null) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            System.out.println(\" \" + line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * printOut for output that consists of only one line."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param line String to be printed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public static void printOutSingle(String line) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        System.out.println(\" \" + line);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Parse the command to add a task to duke.Duke List"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param type The type of task from task.TaskType to create."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param args Array of Strings obtained from splitting a command by spaces."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dList duke.DukeList to add the task to."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return Array of Strings to indicate result of adding task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public static String[] parseAdd(TaskType type, String[] args, DukeList dList) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String name \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        boolean isName \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (int i \u003d 1; i \u003c args.length; ++i) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (args[i].equals(\"/by\") || args[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                isName \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (isName) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Concatenate to first element that corresponds to name"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                name \u003d name + args[i] + \" \";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Concatenate to second element that corresponds to time"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                time \u003d time + args[i] + \" \";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (name.isEmpty()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            throw new DukeException(\"Hey! Description of \" + args[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            task \u003d (Task) new ToDo(name);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            task \u003d (Task) new Deadline(name, time);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            task \u003d (Task) new Event(name, time);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        // There are no other cases"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        dList.addTask(task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return new String[] {\"Task added: \", task.toString(), dList.reportListSize()};"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * System.out.println(getLogo()) prints the logo."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String that can be printed directly to print the logo."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getLogo() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        return (\"____        _        \\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 114,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 13
    }
  },
  {
    "path": "src/main/java/duke/DukeList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DukeList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DukeList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        tasks \u003d new ArrayList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates a new task and adds it to the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param task is the name of task to be added to the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates an array of task names in our list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * The first element is a string that serves as a header for the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Each subsequent element begins with the serial number which is 1 more than the task index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Each subsequent element of the array also has a status field."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Y indicates that task is done and N indicates that the task is not done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return Array of Strings that enumerates the tasks in our list. Null if list empty."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] listTasks() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (Task.getTaskCount() \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String[] result \u003d new String[Task.getTaskCount() + 1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result[0] \u003d \"The following items are tracked:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d Task.getTaskCount(); ++i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Format list entry as \u003cserial number\u003e. [\u003cstatus\u003e] \u003ctask name\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                result[i] \u003d i + \". \" + task.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            return result;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            throw new DukeException(\"There are no tasks to list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Mark a task as done by setting isDone attribute to true."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param serialNum serial number of task as printed when tasks are listed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String array to indicate success. Null if index out of bounds."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] markAsDone(int serialNum) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        int index \u003d serialNum - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Task currentTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        currentTask.setIsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (new String[] {\"Nice! You have completed the following item: \","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                \"  \" + currentTask.toString()});"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Reports the number of tasks in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return string that reports the number of tasks in the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String reportListSize() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"This list has \" + Task.getTaskCount() + \" task\" + ((Task.getTaskCount() \u003e 1) ? \"s.\" : \".\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Deadline(String name, String dateTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[Deadline]\" + super.toString() + \"( by: \" + dateTime + \")\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String timeSlot;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Event(String name, String timeSlot) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.timeSlot \u003d timeSlot;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[Event]\" + super.toString() + \"( at: \" + timeSlot + \")\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        taskCount +\u003d 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void setIsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[\" + (isDone ? \"Y\" : \"N\") + \"] \" + name);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public static int getTaskCount() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 35
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[ToDo]\" + super.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 314"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "fly a kite"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "bye"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LiewWS": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "javac -cp @..\\source_list.txt -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "#cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 3,
      "-": 35
    }
  }
]
