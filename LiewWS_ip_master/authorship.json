[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 1,
      "-": 25
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This is an edited project template for a greenfield Java project."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "It\u0027s named after the Java mascot _Duke_."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This program provides a list to keep track of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Given below are instructions on how to use it."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "## Getting Started"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Ensure that you have Java 11 installed. In particular, the JVM needs to be installed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Download the JAR file from the \"Releases\" tab in the right sidebar."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Avoid having a folder named \"DukeData\" in the directory that contains the JAR file,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "otherwise your data could be lost."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "From the command line, run the following command to start the program:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "java -jar ip.jar"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "The program implements the following operations:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "* Adding tasks to the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "* Listing the tasks currently in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "* Marking a task in the list as completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "* Deleting a task from the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "* Searching the list for tasks by keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Supply the following command to exit the program:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "bye"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "### Adding a task to the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This program recognizes three types of tasks: to-dos, deadlines and events."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "By default, a task is marked as incomplete upon addition."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "##### To-dos"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "To-dos are the simplest tasks that can be added to the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Adding a to-do to the list can be done with the following command:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo \u003cname of todo\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Replace `\u003cname of todo\u003e` with the name of the task that you would like to record in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "For example:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo stuff"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Gives the output:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " Task added: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " [ToDo][N] stuff "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " This list has 1 task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "##### Deadlines"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Deadlines have an additional field to indicate the time before which"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "the task must be completed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Adding a deadline to the list can be done with the following command:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline \u003cname of deadline\u003e /by \u003ctime\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Replace `\u003cname of deadline\u003e` with the name of the task that you would like to record in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Replace `\u003ctime\u003e` with the time before which the task must be completed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "For example:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline work /by later"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Gives the output:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " Task added: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " [Deadline][N] work ( by: later )"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " This list has 2 tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "##### Events"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Events have a field to indicate the time before that the event will occur."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Adding an event to the list can be done with the following command:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event \u003cname of event\u003e /at \u003ctime\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Replace `\u003cname of event\u003e` with the name of the task that you would like to record in the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Replace `\u003ctime\u003e` with the time at which the event will occur."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "For example:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event lunch /at 1am"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Gives the output:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " Task added: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " [Event][N] lunch ( at: 1am )"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " This list has 3 tasks."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "### Listing the tasks currently in the list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This operation prints the details of all the tasks stored in the list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "at the time when the command is supplied."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This is done with the following command:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Which gives the output:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " The following items are tracked:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 1. [ToDo][N] stuff "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 2. [Deadline][N] work ( by: later )"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 3. [Event][N] lunch ( at: 1am )"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "### Marking a task in the list as completed"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This operation marks the task at the specified serial number as completed."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "The serial number is the number displayed to the left of the task when it is listed"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "with the `list` command."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This is done with the following command:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done \u003cserial number\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "where `\u003cserial number\u003e` is the serial number of the task to be deleted."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "For example:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "on the list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " The following items are tracked:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 1. [ToDo][N] stuff "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 2. [Deadline][N] work ( by: later )"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 3. [Event][N] lunch ( at: 1am )"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "gives the output:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " Nice! You have completed the following item: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "   [ToDo][Y] stuff "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "### Deleting a task from the list"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This operation deletes the task at a specified serial number in the list."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "The serial number is the number displayed to the left of the task when it is listed"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "with the `list` command."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This is done with the following command:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete \u003cserial number\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "where `\u003cserial number\u003e` is the serial number of the task to be deleted."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "For example:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "on the list"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " The following items are tracked:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 1. [ToDo][Y] stuff "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 2. [Deadline][N] work ( by: later )"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 3. [Event][N] lunch ( at: 1am )"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "gives the output:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " Task removed:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " [ToDo][Y] stuff "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " This list has 2 tasks."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "### Searching the list for tasks by keyword"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This operation displays all the tasks in the list that contain the specified keyword."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "This is done with the following command:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "where `\u003ckeyword\u003e` is the keyword to search for."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "For example:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "find lunch"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "on the list"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " The following items are tracked:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 1. [Deadline][N] work ( by: later )"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " 2. [Event][N] lunch ( at: 1am )"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "gives the output:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " Found the following tasks in the list:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " [Event][N] lunch ( at: 1am )"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "### Saving and loading data"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "The data for the tasks in the list are automatically saved on exit."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "The data is also loaded automatically when the program starts."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "## Summary of Commands"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Add a to-do to the list:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo \u003cname of todo\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Add a deadline to list:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline \u003cname of deadline\u003e /by \u003ctime\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Add an event to the list:"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event \u003cname of event\u003e /at \u003ctime\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Listing the tasks in the list:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Marking a task in the list as completed:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done \u003cserial number\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Deleting a task from the list:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete \u003cserial number\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "Searching the list for the tasks by keyword:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 221,
      "-": 10
    }
  },
  {
    "path": "source_list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\DukeList.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Exceptions\\DukeException.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\Exceptions\\ExceptionType.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Deadline.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Event.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\TaskType.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "..\\src\\main\\java\\duke\\task\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 10
    }
  },
  {
    "path": "src/main/java/duke/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents commands to add a task to the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Method to execute the command to add a task to the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList DukeList where the task should be added to."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param ui Ui object for printing output to console."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param store Storage object that represents the data file for storage. Not used here."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException Not used here."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException Not used here."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        dukeList.addTask(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(new String[] {\"Task added: \", task.toString(), dukeList.reportListSize()});"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 29
    }
  },
  {
    "path": "src/main/java/duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the commands that users can instruct the program to execute."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    protected CommandType commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Getter method fpr retrieving information of the command type."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return CommandType that represents the type of command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public CommandType getCommandType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public abstract void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 25
    }
  },
  {
    "path": "src/main/java/duke/Command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    CMD_EXIT, CMD_LIST, CMD_DONE, CMD_DELETE, CMD_TODO, CMD_DEADLINE, CMD_EVENT, CMD_INVALID, CMD_FIND"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 5
    }
  },
  {
    "path": "src/main/java/duke/Command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the command to add a deadline to the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating a new DeadlineCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param name String that holds the name of the deadline task to be created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param time String that holds the time that the task must be completed by."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DeadlineCommand(String name, String time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        task \u003d new Deadline(name, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_DEADLINE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 19
    }
  },
  {
    "path": "src/main/java/duke/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the command to delete an item from the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private int serialNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor to create a new DeleteCommand object to delete item at serialNum."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param serialNum serial number of task as printed when tasks are listed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DeleteCommand(int serialNum) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_DELETE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.serialNum \u003d serialNum;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Method to execute the command to delete an item from the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList DukeList where the item to be deleted is located."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param ui Ui object for printing result of execution to console."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param store Storage object representing file where data is stored. Not used here."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException Not used here."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException  If serialNum is not in valid range."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(dukeList.deleteTask(serialNum));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 37
    }
  },
  {
    "path": "src/main/java/duke/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the command to mark an item in the list as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private int serialNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor to create a new DoneCommand object to mark item at serialNum as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param serialNum serial number of task as printed when tasks are listed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DoneCommand(int serialNum) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_DONE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.serialNum \u003d serialNum;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Method to execute to mark a task as done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList DukeList where task to be marked as done is located."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param ui Ui object for printing result of execution to console."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param store Storage object representing file where data is stored. Not used here."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException Not used here."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException if serialNum is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(dukeList.markAsDone(serialNum));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 37
    }
  },
  {
    "path": "src/main/java/duke/Command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the command to add an event to the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating a new EventCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param name String that holds the name of the event task to be created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param time String that holds the time that the event occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public EventCommand(String name, String time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        task \u003d new Event(name, time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_EVENT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 18
    }
  },
  {
    "path": "src/main/java/duke/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the command to exit from the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor to create a new ExitCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_EXIT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Method to execute to save data and exit from program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList DukeList containing data to be saved."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param ui Ui object for printing result of execution to console."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param store Storage object representing file where data is saved to."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException if file I/O operation fails"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException Not used here."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        store.writeToFile(dukeList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.bidFarewell();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 34
    }
  },
  {
    "path": "src/main/java/duke/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the command to find tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String key;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for the FindCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param key String to be searched for in the names of the tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public FindCommand(String key) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.key \u003d key;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_FIND;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Execute the command to find the key in the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList DukeList to be searched."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param ui Ui object to display search results in console."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param store Not used here."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException Not used here."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException if the list is empty or the item is not in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(dukeList.findTasks(key));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 37
    }
  },
  {
    "path": "src/main/java/duke/Command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents an invalid command provided to program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates a new InvalidCommand object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_INVALID;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Inform user through ui object that the command supplied was invalid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList Not used here."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param ui Ui object for printing message to console."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param store Not used here."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException Not used here."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException Not used here."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOutSingle(\"Woah hol up! That is not a valid command.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 33
    }
  },
  {
    "path": "src/main/java/duke/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.DukeList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the command to display the list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating a ListCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_LIST;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Method to execute the command to display the list of tasks on the console."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList DukeList where tasks to be displayed are stored."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param ui Ui object for writing output to console."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param store Not used here."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException Not used here."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException if list is empty."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void executeCommand(DukeList dukeList, Ui ui, Storage store) throws IOException, DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.printOut(dukeList.listTasks());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 33
    }
  },
  {
    "path": "src/main/java/duke/Command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the command to add a ToDo to the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating a new TodoCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param name String that holds the name of the to-do task to be created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public TodoCommand(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        task \u003d new ToDo(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        commandType \u003d CommandType.CMD_TODO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 17
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Command.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the main Duke program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String DATA_FILE_PATH \u003d \"DukeData/duke_user_data.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private DukeList dukeList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private Storage store;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating a Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param filePath String that identifies the relative path from current directory to the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     *                 that stores data provided by the user to Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        store \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        dukeList \u003d new DukeList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            store.readFromFile(dukeList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            ui.printOutSingle(ex.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Entry point of the Duke program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param args List of arguments that can be provided to the program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     *             Will be ignored if supplied."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "       new Duke(DATA_FILE_PATH).run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                Command cmd \u003d Parser.parseRaw(ui.readLine());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                cmd.executeCommand(dukeList, ui, store);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                if (cmd.getCommandType() \u003d\u003d CommandType.CMD_EXIT) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } catch (DukeException | IOException | NumberFormatException ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                ui.printOutSingle(ex.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * System.out.println(getLogo()) prints the logo."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String that can be printed directly to print the logo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public static String getLogo() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return (\"____        _        \\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 59,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/DukeList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the list of tasks used in the Duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Supports add, delete, find, list and mark as done operations."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DukeList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor that performs initial allocation of memory for ArrayList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * used to store the Task objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DukeList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates a new task and adds it to the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param task is the name of task to be added to the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Deletes a task from the list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param serialNum serial number of task as printed when tasks are listed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String array to indicate success."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException if an invalid serial number is provided."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] deleteTask(int serialNum) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (serialNum \u003c 1 || serialNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            throw new DukeException(ExceptionType.BAD_INDEX);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        int index \u003d serialNum - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] result \u003d {\"Task removed:\", tasks.get(index).toString(), \"\"};"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        result[2] \u003d reportListSize();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates an array of task names in our list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * The first element is a string that serves as a header for the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Each subsequent element begins with the serial number which is 1 more than the task index."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Each subsequent element of the array also has a status field."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Y indicates that task is done and N indicates that the task is not done."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return Array of Strings that enumerates the tasks in our list. Null if list empty."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException if the list is empty."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] listTasks() throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            throw new DukeException(ExceptionType.EMPTY_LIST);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] result \u003d new String[tasks.size() + 1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        result[0] \u003d \"The following items are tracked:\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            // Format list entry as \u003cserial number\u003e. [\u003cstatus\u003e] \u003ctask name\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result[i] \u003d i + \". \" + task.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Searches the list for tasks with names that contain the key."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param key String that holds the search key."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return An array of Strings that represent the search results."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException if the list is empty or there is no match."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] findTasks(String key) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            throw new DukeException(ExceptionType.EMPTY_LIST);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Stream\u003cTask\u003e taskStream \u003d tasks.stream();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        ArrayList\u003cString\u003e foundTasks \u003d (ArrayList\u003cString\u003e) taskStream.filter(t -\u003e t.getName().contains(key))"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                .map(Task::toString)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            throw new DukeException(ExceptionType.ITEM_NOT_FOUND);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        foundTasks.add(0, \"Found the following tasks in the list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (String[]) foundTasks.toArray(new String[foundTasks.size()]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Mark a task as done by setting isDone attribute to true."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param serialNum serial number of task as printed when tasks are listed."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String array to indicate success."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException if an invalid serial number is provided."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String[] markAsDone(int serialNum) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (serialNum \u003c 1 || serialNum \u003e tasks.size()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            throw new DukeException(ExceptionType.BAD_INDEX);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        int index \u003d serialNum - 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Task currentTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        currentTask.setIsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (new String[] {\"Nice! You have completed the following item: \","
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                \"  \" + currentTask.toString()});"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Reports the number of tasks in the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return string that reports the number of tasks in the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String reportListSize() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"This list has \" + tasks.size() + \" task\" + ((tasks.size() \u003e 1) ? \"s.\" : \".\"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Reports whether the list contains a positive integer number of task objects."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return True if list has at least one task, otherwise False."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (tasks.size() \u003c\u003d 0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 135
    }
  },
  {
    "path": "src/main/java/duke/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents errors that can occur in the execution of the Duke program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private ExceptionType exType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating a new DukeException object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param exType type of error encountered. Refer to the ExceptionType enum class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     *               for valid types of exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public DukeException(ExceptionType exType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.exType \u003d exType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Retrieves the appropriate message according to the type of error encountered."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String that describes the problem to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        switch (exType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case EMPTY_LIST:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"There are no tasks to list.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case NO_TODO_DESCRIPTION:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"Hey! Description of todo cannot be empty.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case NO_DEADLINE_DESCRIPTION:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"Hey! Description of deadline cannot be empty.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case NO_EVENT_DESCRIPTION:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"Hey! Description of event cannot be empty.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case BAD_INDEX:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"The index that you are looking for is unavailable.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case ITEM_NOT_FOUND:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"Search returned 0 results.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            // Should not happen. Only create exceptions with valid types."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            msg \u003d \"uhh this is bad.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Getter method for checking the ExceptionType of the object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return ExceptionType of the current object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ExceptionType getExType() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return exType;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 59
    }
  },
  {
    "path": "src/main/java/duke/Exceptions/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    EMPTY_LIST, NO_TODO_DESCRIPTION, NO_DEADLINE_DESCRIPTION, NO_EVENT_DESCRIPTION, BAD_INDEX,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    ITEM_NOT_FOUND"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 6
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.ExceptionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Parses the String inputs from the user to determine command to be executed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_EXIT \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String STRING_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * The main method used to determine the command to execute based on the String supplied."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param rawCommand String to be parsed for valid commands."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return Command object that can be executed to carry out instruction intended by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException from parseAdd."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws NumberFormatException when converting a string to an integer fails."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public static Command parseRaw(String rawCommand) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Command result;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        int serialNum;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] arguments \u003d rawCommand.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_EXIT:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_LIST:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new ListCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_DONE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            serialNum \u003d Integer.valueOf(arguments[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new DoneCommand(serialNum);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_DELETE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            serialNum \u003d Integer.valueOf(arguments[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new DeleteCommand(serialNum);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d parseAdd(TaskType.TODO, arguments);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_DEADLINE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d parseAdd(TaskType.DEADLINE, arguments);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_EVENT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d parseAdd(TaskType.EVENT, arguments);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case STRING_FIND:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String keyword \u003d reconstructKeyword(arguments);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new FindCommand(keyword);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            result \u003d new InvalidCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Parse the array of Strings to find the name and time details of the task to be created"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * assuming that the correct task type is specified."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param type The type of task from task.TaskType to create."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param args Array of Strings obtained from splitting a command by spaces."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return Command object that can be executed to carry out instruction intended by user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws DukeException if a task to be added has no name."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static Command parseAdd(TaskType type, String[] args) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String name \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        boolean isName \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (int i \u003d 1; i \u003c args.length; ++i) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (args[i].equals(\"/by\") || args[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                isName \u003d false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (isName) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Concatenate to name"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                name \u003d name + args[i] + \" \";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Concatenate to time"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                time \u003d time + args[i] + \" \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Command cmd \u003d null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (name.isEmpty()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                throw new DukeException(ExceptionType.NO_TODO_DESCRIPTION);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            cmd \u003d new TodoCommand(name);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (name.isEmpty()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                throw new DukeException(ExceptionType.NO_DEADLINE_DESCRIPTION);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            cmd \u003d new DeadlineCommand(name, time);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (name.isEmpty()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                throw new DukeException(ExceptionType.NO_EVENT_DESCRIPTION);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            cmd \u003d new EventCommand(name, time);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        // There are no other cases"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static String reconstructKeyword(String[] words) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String keyword \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (int i \u003d 1; i \u003c words.length; ++i) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            keyword +\u003d words[i] + \" \";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return keyword.trim();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 126
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.Exceptions.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the file that user data will be read from and written to."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final int IS_TYPE \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final int IS_DONE \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final int IS_NAME \u003d 2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final int IS_TIME \u003d 3;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating a new Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param filePath String that stores the relative path from current directory to file containing the data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * This method parses a line in of text in the data file to create the task that the line"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * describes."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param details Array of Strings containing the task information described by the line."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return Task object that represents the task within this program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private Task createTask(String[] details) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Task currentTask \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        boolean[] flags \u003d {true, false, false, false};"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] fields \u003d {\"\", \"\", \"\", \"\"};"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (String detail : details) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (detail.equals(\"/done\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_TYPE] \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_DONE] \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (detail.equals(\"/name\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_DONE] \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_NAME] \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (detail.equals(\"/time\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_NAME] \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                flags[IS_TIME] \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (flags[IS_TYPE]) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                fields[IS_TYPE] +\u003d detail;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (flags[IS_DONE]) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                fields[IS_DONE] +\u003d detail;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else if (flags[IS_NAME]) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                fields[IS_NAME] +\u003d detail + \" \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                fields[IS_TIME] +\u003d detail + \" \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (fields[IS_TYPE].equals(\"ToDo\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            currentTask \u003d new ToDo(fields[IS_NAME]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } else if (fields[IS_TYPE].equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            currentTask \u003d new Deadline(fields[IS_NAME], fields[IS_TIME]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } else if (fields[IS_TYPE].equals(\"Event\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            currentTask \u003d new Event(fields[IS_NAME], fields[IS_TIME]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        assert currentTask !\u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (fields[IS_DONE].equals(\"Y\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            currentTask.setIsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return currentTask;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Converts a line of output describing a task object into the format for storage."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param line String that describes the task in the format according to listTask()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String that describes the task in the format for storage."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static String toFileFormat(String line) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] fields \u003d {\"\", \"\", \"\", \"\"};"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] typeAndDone \u003d line.split(\"]\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] type \u003d typeAndDone[0].split(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        fields[IS_TYPE] \u003d type[1].replace(\"[\", \"\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        fields[IS_DONE] \u003d typeAndDone[IS_DONE].replace(\"[\", \"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        String[] nameAndTime \u003d typeAndDone[2].replace(\"(\", \"]\").split(\"]\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        fields[IS_NAME] \u003d nameAndTime[0].trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (fields[IS_TYPE].equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String time \u003d nameAndTime[1].split(\"by:\")[1].trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            fields[IS_TIME] \u003d time.replace(\")\", \"\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } else if (fields[IS_TYPE].equals(\"Event\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String time \u003d nameAndTime[1].split(\"at:\")[1].trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            fields[IS_TIME] \u003d time.replace(\")\", \"\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return fields[IS_TYPE] + \" /done \" + fields[IS_DONE] + \" /name \" + fields[IS_NAME]"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                + \" /time \" + fields[IS_TIME];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Performs the operation to read data from the storage file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates the file if it does not exist."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates the directory if it does not exist."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Delete the data file after reading so that duplicate info will not be saved"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * at end of program."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList DukeList to store information read from the file."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException when file IO operations fail."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void readFromFile(DukeList dukeList) throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        // Check if the directory exists and create directory if it does not exist"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        File dataDir \u003d new File(dataFile.getParent());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (!dataDir.exists()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            dataDir.mkdir();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Scanner scanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String[] details \u003d line.split(\" \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            dukeList.addTask(createTask(details));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        Files.delete(Paths.get(filePath));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Performs the operation to write data to the storage file."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Does not do anything if there is no data to write to file."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dukeList DukeList that holds the current program data to be written to the storage file."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @throws IOException when file IO operations fail"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void writeToFile(DukeList dukeList) throws IOException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            String[] lines \u003d dukeList.listTasks();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            for (int i \u003d 1; i \u003c lines.length; ++i) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Ignore the first line."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                writer.write(toFileFormat(lines[i]));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                writer.write(System.lineSeparator());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        } catch (DukeException dex) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (dex.getExType() \u003d\u003d ExceptionType.EMPTY_LIST) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                // Nothing to write"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LiewWS": 166
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents the user interface of the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Handles I/O to console."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String[] GREETING \u003d {Duke.getLogo(), \"Hello, I am Duke\", \"What can I do for you?\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private static final String FAREWELL \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor to create a new Ui object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Creates a scanner for reading input to program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Reads a line from the console."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Prints the horizontal line divider."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private void printDiv() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Prints each string on a separate line with one space indentation."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Starts and ends the group of output with a horizontal line divider."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param lines Array of Strings to be printed on separate lines."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void printOut(String[] lines) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            if (line \u003d\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "            System.out.println(\" \" + line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * printOut for output that consists of only one line."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param line String to be printed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void printOutSingle(String line) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        System.out.println(\" \" + line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printDiv();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Print to console the message for greeting user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printOut(GREETING);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Print to console the message when user exits."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void bidFarewell() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        printOutSingle(FAREWELL);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 76
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents tasks that are defined as deadlines."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating new Deadline objects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param name String that contains the name of deadline task to be created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param dateTime String that contains the timing details of when the task must be completed by."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Deadline(String name, String dateTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[Deadline]\" + super.toString() + \"( by: \" + dateTime + \")\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents tasks that are defined as events."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String timeSlot;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating new Event objects."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param name String that contains the name of event task to be created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param timeSlot String that contains the timing details of when the task occurs."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public Event(String name, String timeSlot) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.timeSlot \u003d timeSlot;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[Event]\" + super.toString() + \"( at: \" + timeSlot + \")\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents tasks with a name and completion status."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Extended by ToDo, Deadline and Event."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating objects that represent tasks that have a name."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * The task is marked as uncompleted upon creation."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param name String that describes the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    protected Task(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Mark a task as completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public void setIsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Getter method for obtaining the name of a task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String that is the name of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Getter method for checking if a task is done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return True if task is done, otherwise False."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Formats details of the task as a String. The format is as follows:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * [\u003cY/N\u003e] \u003cname\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * where Y indicates that the task is completed and N indicates that the task is not completed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @return String that can be printed to display details of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[\" + (isDone ? \"Y\" : \"N\") + \"] \" + name);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 54
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " * Represents tasks that are defined as to-dos."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * Constructor for creating new ToDO objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     * @param name String that contains the name of to-do task to be created."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "        return (\"[ToDo]\" + super.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 314"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "fly a kite"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete 100"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "delete everything"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "bye"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LiewWS"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LiewWS": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "javac -cp @..\\source_list.txt -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "#cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LiewWS"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "LiewWS": 3,
      "-": 35
    }
  }
]
