[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot Duke. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Open Intellij (if you are not in the welcome screen, click File \u003e Close Project to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Click Configure \u003e Structure for New Projects and then Project Settings \u003e Project \u003e Project SDK"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "If JDK 11 is listed in the drop down, select it. If it is not, click New... and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Click OK"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Click Open or Import."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Select the project directory, and click OK"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "After the importing is complete, locate the src/main/java/Duke.java file, right-click it, and choose Run Duke.main(). If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      }
    ],
    "authorContributionMap": {
      "jlifah": 19,
      "-": 5
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke - Developer Guide"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your `src` folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 Implementation"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the target user profile}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition: what problem does it solve?}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "## Product Scope"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "{Describle target user profile}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for Manual Testing"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 9,
      "-": 68
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a product intro}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Down the latest version of `Duke` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a to-do: `todo`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a to-do item to the list of to-dos."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: Well, write the User Guide in active voice anyway."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* Add todo `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "* Add to-do `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      }
    ],
    "authorContributionMap": {
      "jlifah": 9,
      "-": 46
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Deadline(String description, String by, Boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        List list \u003d new List();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        list.readOldTextFile();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                list.printList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if(userInput.startsWith(\"done\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                list.isComplete(userInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                list.addDeadline(getDeadlineDescription(userInput),getStringAfterByAt(userInput));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                list.addEvent(getEventDescription(userInput),getStringAfterByAt(userInput));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    if (userInput.length()\u003d\u003d4) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        throw new Exception();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    list.addTodo(userInput.substring(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                list.toRemove(userInput.substring(7));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            userInput \u003d in.nextLine(); //read next user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        list.UpdateTextFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String getDeadlineDescription (String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String description \u003d input.substring(9);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        int index \u003d description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        description\u003ddescription.substring(0, index-1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String getStringAfterByAt (String input) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String by \u003d input.substring(input.indexOf(\u0027/\u0027)+4); //keep those after \u0027/\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String getEventDescription (String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String description \u003d input.substring(6);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        int index \u003d description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        description\u003ddescription.substring(0, index-1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jlifah": 65,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Event(String description, String at, Boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 24
    }
  },
  {
    "path": "src/main/java/List.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class List {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    ArrayList\u003cTask\u003e tasks \u003dnew ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static int size;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public List() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.size \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for (int i\u003d0;i\u003ctasks.size();i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(i+1+\". \" +tasks.get(i).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addDeadline (String description, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        tasks.add(new Deadline(description,by));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(tasks.get(this.size).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.size++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Now you have \" + this.size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addOldDeadline (String description, String by, Boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        tasks.add(new Deadline(description,by,isDone));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.size++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addEvent(String description, String at) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(tasks.get(this.size).toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.size++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Now you have \" + this.size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addOldEvent (String description, String at, Boolean isDone) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        tasks.add(new Event(description,at, isDone));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.size++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addTodo (String description) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(tasks.get(this.size).toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            this.size++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"Now you have \" + this.size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addOldTodo (String description, boolean isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        tasks.add(new Todo(description,isDone));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.size++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void isComplete(String command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        command \u003d command.replace(\"done\", \" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        command \u003d command.strip(); //removes white space"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        tasks.get(index).markTaskAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(tasks.get(index).toString() + \"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void toRemove (String taskRemove) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        index\u003d Integer.parseInt(taskRemove)-1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(tasks.get(index).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.size--;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Now you have \"+ this.size+ \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static String PATH \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    static File filePath \u003d new File(PATH + \"/duke.txt\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //1. read old task list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //2. split into T/E/D, done and description and at/by"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //3. add as new task into tasks arraylist"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void readOldTextFile () {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            filePath.createNewFile();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            Scanner s \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                if (line.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String description \u003d line.substring(7);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String outcome \u003d line.substring(4,5);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    Boolean isDone;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    if (outcome.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        isDone\u003dtrue;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        isDone\u003dfalse;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    addOldTodo(description,isDone);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                else if (line.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String description \u003d line.substring(7,line.indexOf(\"by\")-2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String by \u003d line.substring(line.indexOf(\"by\")+4,line.length()-1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String status \u003d line.substring(4,5);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    Boolean isDone;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    if (status.equals(\"\\u2718\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        isDone\u003dfalse;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        isDone\u003dtrue;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    addOldDeadline(description,by,isDone);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                else if (line.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String description \u003d line.substring(7,line.indexOf(\"at\")-2);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String at \u003d line.substring(line.indexOf(\"at\")+4, line.length()-1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String status \u003d line.substring(4,5);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    Boolean isDone;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    if (status.equals(\"\\u2718\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        isDone\u003dfalse;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        isDone\u003dtrue;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    addOldEvent(description,at, isDone);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void UpdateTextFile () {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        FileWriter fstream;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            fstream \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            String content\u003d\"\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            for (int i\u003d0;i\u003ctasks.size();i++) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                content+\u003dtasks.get(i)+\"\\n\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            fstream.write(content);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            fstream.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 163
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void markTaskAsDone() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return  getTypeIcon() + getStatusIcon() + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 31
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Todo (String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super (description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 20
    }
  }
]
