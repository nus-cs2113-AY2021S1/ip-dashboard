[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Duke ip project"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "1. Setting up in Intellij"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "URL to download: https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Open Intellij (if you are not in the welcome screen, click File \u003e Close Project to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Click Configure \u003e Structure for New Projects and then Project Settings \u003e Project \u003e Project SDK"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "If JDK 11 is listed in the drop down, select it. If it is not, click New... and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Click OK"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Click Open or Import."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Select the project directory, and click OK"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "After the importing is complete, locate the src/main/java/Duke.java file, right-click it, and choose Run Duke.main(). If the setup is correct, you should see something like the below:"
      }
    ],
    "authorContributionMap": {
      "jlifah": 14,
      "-": 4
    }
  },
  {
    "path": "docs/DeveloperGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "# Developer Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 implementation"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke - Developer Guide"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your `src` folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "## Design \u0026 Implementation"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the design and implementation of the product. Use UML diagrams and short code snippets where applicable.}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Product scope"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the target user profile}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition: what problem does it solve?}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "## Product Scope"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "### Target user profile"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "{Describle target user profile}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "### Value proposition"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "{Describe the value proposition}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "## User Stories"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "|Version| As a ... | I want to ... | So that I can ...|"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "|--------|----------|---------------|------------------|"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "|v1.0|new user|see usage instructions|refer to them when I forget how to use the application|"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "|v2.0|user|find a to-do item by name|locate a to-do without having to go through the entire list|"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "## Non-Functional Requirements"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "{Give non-functional requirements}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Glossary"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "* *glossary item* - Definition"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for manual testing"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "## Instructions for Manual Testing"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "{Give instructions on how to do a manual product testing e.g., how to load sample data to be used for testing}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 9,
      "-": 68
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "# Duke User Guide ٩(^ᴗ^)۶ "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Duke, named after the Java mascot, is a Personal Assistant Chatbot that helps a person to keep track of various things. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Quick Start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "  - Adding a new task:\u0026nbsp; [deadline](#adding-a-new-task-deadline)\u0026nbsp; [event](#adding-a-new-task-event) \u0026nbsp; [todo](#adding-a-new-task-todo)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "  - Checking/updating of tasks in list:\u0026nbsp; [delete](#deleting-a-task-delete)\u0026nbsp; [done](#marking-task-as-done-done)\u0026nbsp; [find](#locating-a-task-using-a-keyword-find)\u0026nbsp; [list](#viewing-all-task-list)\u0026nbsp; [save](#saving-the-data-save)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "  - Exiting the program: \u0026nbsp;[exit](#exiting-the-program-exit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Command summary "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "1) Ensure that Java 11 is available on your computer. If not, Java 11 can be found [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "2) Download the [ip.jar](https://github.com/jlifah/ip/releases/download/v0.2/ip.jar) file "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "3) Create an empty folder in a convenient location eg. Desktop and copy jar file there"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "4) Open command window/terminal in that window and run the command java `java -jar {filename}.jar` e.g., `java -jar ip.jar`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e Take note 1: Inputs that look like \\**THIS\\** are parameters to be supplied by user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e Take note 2: Do not to add tasks without specifying whether it is deadline/event/todo, if not the following error message will be shown:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means (/ﾟДﾟ)/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Adding a new task: `deadline`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Adds a deadline task to overall list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `deadline *TASK DESCRIPTION* /by *DEADLINE DUE DATE*`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* All fields must be filled"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example: `deadline finish ip /by Sunday` (Where finish ip is the task and Sunday is the deadline due date)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "[D][✘] finish ip (by: Sunday)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `[D]` - Deadline Task "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `[X]` - Deadline is **not** done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Adding a new task: `event`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Adds an event task to overall list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `event *TASK DESCRIPTION* /at *DATE OF EVENT*`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* All fields must be filled"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example: `event project meeting /at Monday` (Where project meeting is the task and Monday is the event day)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "[E][✘] project meeting (at: Monday)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `[E]` - Event task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `[X]` - Event is **not** done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Adding a new task: `todo`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Adds a todo task to overall list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `todo *TASK DESCRIPTION*`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* All fields should be filled. If not, the following error message will be shown:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jlifah"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jlifah"
        },
        "content": "   OOPS!!! The description of a todo cannot be empty ☹"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jlifah"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example: `todo prepare for meeting` (Where prepare for meeting is the task)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jlifah"
        },
        "content": "[T][✘] prepare for meeting"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `[T]` - Todo task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* `[X]` - Todo is **not** done"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Following the order on the overall list, specified deadlines/events/todo will be deleted"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `delete *INDEX OF TASK ON LIST*`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Index has to be an integer"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Only one deadlines/events/todo can be deleted at one time"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jlifah"
        },
        "content": "[X] will be changed to [✔]"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example: `delete 1`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jlifah"
        },
        "content": "[D][✘] finish ip (by: Sunday)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Marking task as done: `done`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Following the order on the overall list, specified deadlines/events/todo will be marked as done"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `done *INDEX OF TASK ON LIST*`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Index has to be an integer"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jlifah"
        },
        "content": "* Only one deadlines/events/todo can be marked as done at one time"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jlifah"
        },
        "content": "[✘] will be changed to [✔]"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example: `done 2`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jlifah"
        },
        "content": "[T][✓] prepare for meeting"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Locating a task using a keyword: `find`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Finds all deadlines/events/todo description recorded in list with specified keyword "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `find *KEYWORD*`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Example: `find meeting`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jlifah"
        },
        "content": "1. [E][✘] project meeting (at: Monday)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jlifah"
        },
        "content": "2. [T][✓] prepare for meeting"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Viewing all task: `list`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Shows a list of all deadlines/events/todo recorded"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jlifah"
        },
        "content": "1. [E][✘] project meeting (at: Monday)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jlifah"
        },
        "content": "2. [T][✘] prepare for meeting"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Saving the data: `save`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jlifah"
        },
        "content": "List data will be saved automatically in the hard disk whenever the task list changes, there is no need to input a command"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jlifah"
        },
        "content": "### Exiting the program: `exit`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Terminates the Duke program"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jlifah"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jlifah"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jlifah"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|    Action       |      Format     |   Examples | "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|:---:|:---:|:---:|"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|       deadline   |    `deadline *TASK DESCRIPTION* /by *DEADLINE DUE DATE*`                 |   `deadline finish ip /by Sunday` |"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|       event        |         `event *TASK DESCRIPTION* /at *DATE OF EVENT*`          |  `event project meeting /at Monday` |"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|todo|        `todo *TASK DESCRIPTION*`       |   `todo prepare for meeting` | "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|          list             |            `list`            |    | "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|           find         |  `find *KEYWORD*`                    |    `find meeting`  |"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|           done                |       `done *INDEX OF TASK ON LIST*`          |   `done 2`  |"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jlifah"
        },
        "content": "|             exit             |                 `bye`          |    | "
      }
    ],
    "authorContributionMap": {
      "jlifah": 177,
      "-": 15
    }
  },
  {
    "path": "docs/UserGuide.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a product intro}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "{Give steps to get started quickly}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that you have Java 11 or above installed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Down the latest version of `Duke` from [here](http://link.to/duke)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "{Give detailed description of each feature}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a new item to the list of todo items."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "### Adding a to-do: `todo`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Adds a to-do item to the list of to-dos."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "Format: `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "* The `DEADLINE` can be in a natural language format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "* The `TODO_NAME` cannot contain punctuation.  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Write the rest of the User Guide d/next week`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "`todo n/Refactor the User Guide to remove passive voice d/13/04/2020`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "**Q**: How do I transfer my data to another computer? "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: {your answer here}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "**A**: Well, write the User Guide in active voice anyway."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "{Give a \u0027cheat sheet\u0027 of commands here}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "* Add todo `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "* Add to-do `todo n/TODO_NAME d/DEADLINE`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e remotes/origin/tp-template"
      }
    ],
    "authorContributionMap": {
      "jlifah": 9,
      "-": 46
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import Store.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //creates new set up UI,Parser, Storage and TaskList when duke first runs"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Duke () {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        parser\u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //reads the different user input and identifies them accordingly"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        ui.printGreetings();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        storage.update();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        while (!parser.userInputBye(userInput)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            if (parser.userInputTodo(userInput)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    if (userInput.length()\u003d\u003d4) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                        throw new Exception();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    tasks.addTodo(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (parser.userInputDeadline(userInput)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                tasks.addDeadline(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (parser.userInputEvent(userInput)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                tasks.addEvent(userInput);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (parser.userInputDone(userInput)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                tasks.isComplete(parser.taskDone(userInput));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (parser.userInputDelete(userInput)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                tasks.toDelete(parser.taskDelete(userInput));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (parser.userInputList(userInput)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                tasks.printList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (parser.userInputFind(userInput)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                tasks.findCommon(userInput.substring(5));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else if (parser.userInputHelp(userInput)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                ui.printHelp();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means (/ﾟДﾟ)/\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //first method Duke goes to when it runs"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 64,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//interprets the user commands"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Parser extends Ui {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputBye (String input) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return input.startsWith(\"bye\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputTodo (String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return input.startsWith(\"todo\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputDone (String input) { return  input.startsWith(\"done\"); }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputDelete (String input) {return input.startsWith(\"delete\"); }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputList (String input) {return input.startsWith(\"list\"); }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputDeadline (String input) { return input.startsWith(\"deadline\");}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputEvent (String input) { return input.startsWith(\"event\");}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputFind (String input) {return input.startsWith(\"find\");}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public boolean userInputHelp (String input) {return input.startsWith(\"help\");}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public int taskDone (String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public int taskDelete (String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 34
    }
  },
  {
    "path": "src/main/java/Store/Decipher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package Store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Decipher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //convert Tasks from ArrayList\u003cTask\u003e to ArrayList\u003cString\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static ArrayList\u003cString\u003e eTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        final ArrayList\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for(Task task : taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            encodedTasks.add(eTaskToString(task));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return encodedTasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static String eTaskToString(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            Todo todo \u003d (Todo) task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return todo.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return deadline.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return event.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 31
    }
  },
  {
    "path": "src/main/java/Store/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package Store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String PATH \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static final String FILE_PATH \u003d PATH + \"/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //reads the duke.txt file and add it to the new ArrayList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static ArrayList\u003cTask\u003e update() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if(Files.exists(Path.of(PATH))){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                while(s.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    String dataString \u003d s.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                    data.add(dataString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return converter.convert(data);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                createDataFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(\"IO Exception found\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //create a new duke.txt file if it is not already created"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static void createDataFile() throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        File file \u003d new File(Storage.PATH);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        boolean isDirCreated \u003d file.mkdir();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if(isDirCreated) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            file \u003d new File(Storage.PATH + \"/duke.txt\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        List\u003cString\u003e taskToString_TaskList \u003d Decipher.eTaskList(taskList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Files.write(Path.of(FILE_PATH), taskToString_TaskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 64
    }
  },
  {
    "path": "src/main/java/Store/converter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package Store;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import parser.Parser2;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class converter  {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //convert Tasks from ArrayList\u003cString\u003e to ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static ArrayList\u003cTask\u003e convert (ArrayList\u003cString\u003e previousList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        final ArrayList\u003cTask\u003e updateWithPreviousList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for (String s : previousList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            updateWithPreviousList.add(decodeTaskFromString(s));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return updateWithPreviousList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static Task decodeTaskFromString (String s) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return Parser2.stringToTask(s);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //prints this greeting message when duke first runs"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void printGreetings () {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"\\nHello! I\u0027m Duke,\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                \" ____        _        \\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                \"|  _ \\\\ _   _| | _____ \\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                \"| | | | | | | |/ / _ \\\\\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                \"| |_| | |_| |   \u003c  __/\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\" );"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"What can I do for you? :)\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //prints message after user inputs bye"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void printBye () {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon! (^-^)v\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void printHelp () {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Here are all the available commands and their respective formats:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Adding a deadline: deadline **DESCRIPTION** /by **TASK_DEADLINE**\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Adding an event: event **DESCRIPTION** /at **TASK_START_DATE**\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Adding an item in todo: todo **DESCRIPTION**\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Listing all tasks: list\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Marking task as done: done **INDEX_OF_TASK**\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Deleting a task: delete **INDEX_OF_TASK**\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Using keyword to find recorded tasks: find **KEYWORD**\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Terminating Duke: bye\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 30
    }
  },
  {
    "path": "src/main/java/parser/Parser2.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Parser2{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static Task stringToTask (String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        if (input.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return Parser2.addNewTodo2(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else if (input.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return Parser2.addNewDeadline2(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } else if (input.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            return Parser2.addNewEvent2(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static Todo addNewTodo2 (String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String description\u003dinput.substring(7);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String symbol \u003d input.substring(4,5);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        isDone\u003d symbol.equals(\"\\u2713\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.addPreviousTodo(description,isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return new Todo(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static Deadline addNewDeadline2 (String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String description \u003d input.substring(7,input.indexOf(\"by\")-2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String by \u003d input.substring(input.indexOf(\"by\")+4,input.length()-1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String status \u003d input.substring(4,5);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        isDone\u003d !status.equals(\"\\u2718\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.addPreviousDeadline(description,by,isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static Event addNewEvent2 (String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String description \u003d input.substring(7,input.indexOf(\"at\")-2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String by \u003d input.substring(input.indexOf(\"at\")+4,input.length()-1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String status \u003d input.substring(4,5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        isDone\u003d !status.equals(\"\\u2718\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.addPreviousEvent(description,by,isDone);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return new Event(description, by, isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 48
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//Todo inherits attributes of Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //first method is adding new Todo to ArrayList and second method is to add existing Todo from duke.txt to ArrayList"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Deadline(String description, String by, Boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //combines all required resulting info into a single string for easy access"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 30
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//Todo inherits attributes of Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //first method is adding new Todo to ArrayList and second method is to add existing Todo from duke.txt to ArrayList"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Event(String description, String at, Boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //combines all required resulting info into a single string for easy access"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 31
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//initialise all new task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //chnage task from not done to done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void markTaskAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //first method is a new Task and second method is for an existing Task in duke.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //combines all required resulting info into a single string for easy access"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return  getTypeIcon() + getStatusIcon() + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 37
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import Store.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//TaskList will inherit attributes from Storage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class TaskList extends Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static int size;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public TaskList () {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //adds a new todo to ArrayList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addTodo (String userInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList.add (new Todo(userInput.substring(5)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(taskList.get(size).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.save();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //adds a todo that was saved in the duke.txt file into the ArrayList"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void addPreviousTodo (String description, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList.add(new Todo(description,isDone));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.save();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //adds a new deadline to ArrayList"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addDeadline (String userInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList.add(new Deadline(getDeadlineDescription(userInput),getStringAfterByAt(userInput)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(taskList.get(size).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.save();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //adds a deaadline that was saved in the duke.txt file into the ArrayList"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void addPreviousDeadline (String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList.add(new Deadline(description, by, isDone));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.save();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //adds a new event to ArrayList"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void addEvent (String userInput) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList.add(new Event(getEventDescription(userInput),getStringAfterByAt(userInput)));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(taskList.get(size).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.save();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //adds an event that was saved in the duke.txt file into the ArrayList"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void addPreviousEvent (String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList.add(new Event(description, by, isDone));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.save();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //mark task (either todo/deadline/event) as done"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void isComplete (int taskNum) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList.get(taskNum-1).markTaskAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(taskList.get(taskNum-1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.save();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //deletes a task from ArrayList"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void toDelete (int taskNum) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(taskList.get(taskNum-1).toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        taskList.remove(taskNum-1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        size--;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println(\"Now you have \"+ size+ \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        TaskList.save();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //looks through all the task description inb teh ArrayList and prints out any that includes the keyword stated"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void findCommon (String keyword) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        int index\u003d1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                System.out.println(index + \". \" + task.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jlifah"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //prints all tasks in the ArrayList"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        for (int i\u003d0;i\u003ctaskList.size();i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(i+1+\". \" +taskList.get(i).toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //saves tasks into duke.txt file"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static void save() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            storage.save(taskList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jlifah"
        },
        "content": "            System.out.println(\"error saving\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //gets deadline description from the whole user input string"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String getDeadlineDescription (String input) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String description \u003d input.substring(9);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        int index \u003d description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        description\u003ddescription.substring(0, index-1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //gets event description from the whole user input string"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String getEventDescription (String input) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        String description \u003d input.substring(6);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        int index \u003d description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        description\u003ddescription.substring(0, index-1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //gets deadline/event day from user input"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public static String getStringAfterByAt (String input) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return input.substring(input.indexOf(\u0027/\u0027)+4);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 135
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jlifah"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jlifah"
        },
        "content": "//Todo inherits attributes of Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jlifah"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //first method is adding new Todo to ArrayList and second method is to add existing Todo from duke.txt to ArrayList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public Todo (String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        super (description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    //combines all required resulting info into a single string for easy access"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jlifah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jlifah"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jlifah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jlifah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jlifah": 24
    }
  }
]
