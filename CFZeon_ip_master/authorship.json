[
  {
    "path": "data/tasksList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Event | false | asdf  | fd"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Todo | false | larp"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    static final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static final Scanner in \u003d new Scanner (System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        int tasksCount \u003d taskLoad();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        inputLoop(tasksCount);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        byeMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static int taskLoad() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        int tasksCount;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasks \u003d SaveLoad.loadTasksList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasksCount \u003d tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void inputLoop(int tasksCount) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String inputString \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        while (!inputString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            inputString \u003d in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            String[] inputSplit \u003d inputString.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            switch (inputSplit[0].trim()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                taskList(tasksCount);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                taskDone(tasksCount, inputSplit);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                tasksCount \u003d taskAddTodo(tasksCount, inputSplit);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                tasksCount \u003d taskAddDeadline(tasksCount, inputSplit);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                tasksCount \u003d taskAddEvent(tasksCount, inputSplit);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                taskHelp();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                tasksCount \u003d taskDelete(tasksCount, inputSplit[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                invalidCommandMessage();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static int taskDelete(int tasksCount, String s) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // to check if the task exists"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasksCount) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasksCount -\u003d 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Now you have \" + tasksCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            SaveLoad.saveTasks(tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"delete\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void taskHelp() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Here are a list of available command:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"done [number on list]\\\": marks a task on the list as done\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"todo [action]\\\": adds a todo into the list\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"deadline [action] /[limit] [time]\\\": adds a deadline into the list\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"event [action] /[limit] [time]\\\": adds an event into the list\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"help\\\": brings you to this menu!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"delete [number on list]\\\" removes a task from the list\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"bye\\\": exits duke.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void taskList(int tasksCount) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        if (tasksCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Oops! Looks like there\u0027s nothing in your list!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksCount; i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println((i+1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static int taskAddEvent(int tasksCount, String[] s) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String[] inputSplitAtSlash;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        //splits input into task and time"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            //splits input into task and time"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            inputSplitAtSlash \u003d s[1].trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (inputSplitAtSlash.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // if input string format does not fit constructor, throw error"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            String[] constructorFormat \u003d inputSplitAtSlash[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (constructorFormat.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Event temp \u003d new Event(inputSplitAtSlash[0], inputSplitAtSlash[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasks.add(temp);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasksCount \u003d taskWithTimeAddMessage(tasks.get(tasksCount), tasksCount);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            SaveLoad.saveTasks(tasks);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"event\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static int taskAddDeadline(int tasksCount, String[] s) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String[] inputSplitAtSlash;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            //splits input into task and time"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            inputSplitAtSlash \u003d s[1].trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (inputSplitAtSlash.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // if input string format does not fit constructor, throw error"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            String[] constructorFormat \u003d inputSplitAtSlash[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (constructorFormat.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Deadline temp \u003d new Deadline(inputSplitAtSlash[0], inputSplitAtSlash[1]);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasks.add(temp);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasksCount \u003d taskWithTimeAddMessage(tasks.get(tasksCount), tasksCount);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            SaveLoad.saveTasks(tasks);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"deadline\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static int taskAddTodo(int tasksCount, String[] inputSplit) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (inputSplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Todo temp \u003d  new Todo(inputSplit[1]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasks.add(temp);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasksCount \u003d taskAddMessage(tasks.get(tasksCount), tasksCount);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            SaveLoad.saveTasks(tasks);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"todo\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void welcomeMessage() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE + System.lineSeparator() + \"Hello! I\u0027m Duke!\" + System.lineSeparator()"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                + \"What can I do for you?\" + System.lineSeparator() + LINE);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void invalidCommandMessage() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE + System.lineSeparator() + \"Sorry! You have entered an invalid command.\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Type \\\"help\\\" to view a list of available commands!\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static int taskAddMessage(Task task, int tasksCount) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE + System.lineSeparator() + \"Got it. I\u0027ve added this task: \""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                + System.lineSeparator() + task);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasksCount +\u003d 1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Now you have \" + tasksCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static int taskWithTimeAddMessage(Task task, int tasksCount) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE + System.lineSeparator() + \"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasksCount +\u003d 1;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Now you have \" + tasksCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void taskDone(int tasksCount, String[] inputSplit) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputSplit[1]);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // to check if the task exists"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasksCount) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"done\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(taskNumber + \".\" + tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            SaveLoad.saveTasks(tasks);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"done\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void byeMessage() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CFZeon": 240,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected String error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.error\u003derror;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void getError(String input){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        switch (error) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"format\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper action after the command! \\\"\" + input + \" [action]\\\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper deadline! \\\"deadline [task] /[limit] [time]\\\"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper event! \\\"event [task] /[limit] [time]\\\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper todo! \\\"todo [task]\\\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Failed to delete! Try this instead \\\"delete [task number]\\\"\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    \" or if that doesn\u0027t work, check if the task exists!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Failed to mark as done! Try this instead \\\"done [task number]\\\"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"loadFile\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"List loading unsuccessful...\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a valid command! Type \\\"help\\\" to see a list of commands!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 39
    }
  },
  {
    "path": "src/main/java/duke/SaveLoad.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class SaveLoad{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    static final String TASKS_SAVE_PATH \u003d \"data/tasksList.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public static void saveTasks(ArrayList\u003cTask\u003e saveInput) throws DukeException{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        File saveFile \u003d new File(TASKS_SAVE_PATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        boolean doesFileExist \u003d saveFile.exists();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasksList \u003d saveInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // make new directory and create new file if it does not exist"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (!doesFileExist) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            throw new DukeException(\"Unable to create new directory or file!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // Create Save file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            FileWriter saveFileWriter \u003d new FileWriter(TASKS_SAVE_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            for (Task task : tasksList){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                String textLineToAdd \u003d task.getClass().getSimpleName() + \" | \" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        task.getIsDone() + \" | \" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        task.getDescription();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (task instanceof Deadline || task instanceof Event) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    textLineToAdd \u003d textLineToAdd + \" | \" + task.getDoBy()[0] + \" | \" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                            task.getDoBy()[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                textLineToAdd +\u003d \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFileWriter.write(textLineToAdd);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            saveFileWriter.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            throw new DukeException(\"Cannot write to task list save file\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadTasksList() throws DukeException{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // creates file for the path"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        File saveFile \u003d new File(TASKS_SAVE_PATH);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        boolean doesFileExist \u003d saveFile.exists();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // make new directory and create new file if it does not exist"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (!doesFileExist) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            throw new DukeException(\"Unable to create new directory or file!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // scanner with file as input source"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Scanner saveFileScanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            while (saveFileScanner.hasNext()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                String curLine \u003d saveFileScanner.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                // a limit of 0 splits the string as many times as possible"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                String[] taskDesc \u003d curLine.trim().split(\" \\\\| \", 0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                switch (taskDesc[0]) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                case \"Todo\": {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    if (taskDesc.length !\u003d 3) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        throw new DukeException(\"loadFile\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    Todo temp \u003d new Todo(taskDesc[2]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    temp.setIsDone(Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    tasksList.add(temp);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                case \"Event\": {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    if (taskDesc.length !\u003d 5){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        throw new DukeException(\"loadFile\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    Event temp \u003d new Event(taskDesc[2], taskDesc[3] + \" \" + taskDesc[4]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    temp.setIsDone(Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    tasksList.add(temp);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                case \"Deadline\": {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    if (taskDesc.length !\u003d 5){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        throw new DukeException(\"loadFile\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    Deadline temp \u003d new Deadline(taskDesc[2], taskDesc[3] + \" \" + taskDesc[4]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    temp.setIsDone(Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    tasksList.add(temp);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    System.out.println(\"It seems like some of your tasks were not saved properly!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            throw new DukeException(\"Unable to read save File\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"loadFile\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 122
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Deadline(String description, String doBy) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.doBy \u003d doBy.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return \"[D]\" + super.toString() + \"(\" + this.doBy[0] +\": \" + this.doBy[1] + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Event(String description, String doBy) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.doBy \u003d doBy.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return \"[E]\" + super.toString() + \"(\" + this.doBy[0] +\": \" + this.doBy[1] + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected String[] doBy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String[] getDoBy() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return doBy;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 12
    }
  },
  {
    "path": "text-ui-test/data/tasksList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Event | true | foo  | bar | ring"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Todo | false | Play Library of Ruina"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | false | bar  | foo | lish"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Event | false | foo  | bar | ring"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Todo | false | Play Library of Ruina"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | false | bar  | foo | lish"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 6
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "event foo /bar ring"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "todo Play Library of Ruina"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "deadline bar /foo lish"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "event foo /bar"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "deadline bar /foo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "random input line here"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 2,
      "-": 19
    }
  }
]
