[
  {
    "path": "data/tasksList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | false | go to library  | by | 05/04/2020 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | false | dont go to library  | at | some time tomorrow"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | true | play game  | on | 05/04/2020 2359"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | false | play other game  | at | 07/08/2020"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Event | true | go to library  | by | 05/04/2020 1800"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Event | false | play other game  | at | 07/08/2020"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | false | asdf  | by | jkl;"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 7
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Runs the Duke program"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static Scanner in \u003d new Scanner (System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected static Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected static TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Runs the Duke program through the main class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param args Runtime arguments are unused"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @throws DukeException If command has error"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        loadTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        inputLoop();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        ui.byeMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void inputLoop() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String inputString \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        while (!inputString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            inputString \u003d in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Command c \u003d Parser.parseCommand(inputString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (c !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static void loadTasks() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        TaskList.tasks \u003d storage.loadTasksList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        //clear the input buffer if loading fails"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "CFZeon": 48,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains errors that duke might encounter during runtime"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected String error;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an instantiation of this exception"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param error Error type"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Shows the error the user encountered"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param input Error type"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void getError(String input){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        switch (error) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"format\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper action after the command! \\\"\" + input + \" [action]\\\"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper deadline! \\\"deadline [task] /[limit] [time]\\\"\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper event! \\\"event [task] /[limit] [time]\\\"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper todo! \\\"todo [task]\\\"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Failed to delete! Try this instead \\\"delete [task number]\\\"\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    \" or if that doesn\u0027t work, check if the task exists!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Failed to mark as done! Try this instead \\\"done [task number]\\\"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"loadFile\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"List loading unsuccessful...\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"I loaded what I could before the error though!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a proper find! \\\"find [String]\\\"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"DateFormat\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Invalid date and time format!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Try this: dd/mm/yyyy\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        case \"dateSearch\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Invalid dateSearch format!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Try this: dateSearch [dd/mm/yyyy]\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Please enter a valid command! Type \\\"help\\\" to see a list of commands!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 63
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.DateSearchCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.command.ListTasksCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Parses inputs for other functions to use"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Parser{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Interprets the user input then creates a command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param inputString User input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected static Command parseCommand(String inputString) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // limit of 2 splits the string into 2 parts"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String[] inputSplit \u003d inputString.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            String command \u003d inputSplit[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new ListTasksCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    throw new DukeException(\"done\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new DoneCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new AddTodoCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new AddDeadlineCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new AddEventCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new HelpCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new DeleteCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"dateSearch\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    throw new DukeException(\"dateSearch\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new DateSearchCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new ByeCommand();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (inputSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    throw new DukeException(\"find\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                c \u003d new FindCommand(inputSplit[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                Ui.invalidCommandMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.invalidCommandMessage();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"error\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public static LocalTime parseTime(String dateTimeInput) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String[] dateTimeSplit \u003d dateTimeInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String timeInput;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // checks if there is a time in the format dd-mm-yyyy HHmm format"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        if (dateTimeSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            timeInput \u003d dateTimeSplit[1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // formatter for dates with time"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        LocalTime time \u003d null;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            time \u003d LocalTime.parse(timeInput, timeFormatter);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // returns null if input format is wrong"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public static LocalDate parseDate(String dateTimeInput) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String[] dateTimeSplit \u003d dateTimeInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String dateInput;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        dateInput \u003d dateTimeSplit[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // formatters for dates with time"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        DateTimeFormatter formatterA \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        DateTimeFormatter formatterB \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        DateTimeFormatter formatterC \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            date \u003d LocalDate.parse(dateInput, formatterA);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // puts the date and time through all available formatters"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                date \u003d LocalDate.parse(dateInput, formatterB);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // puts the date and time through all available formatters"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                date \u003d LocalDate.parse(dateInput, formatterC);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // puts the date and time through all available formatters"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                // this uses default formatter of yyyy-MM-dd"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                date \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // puts the date and time through all available formatters"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // returns null if all the available formatters could not be used"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 168
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains functions for saving and loading in Duke"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Storage{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    static final String TASKS_SAVE_PATH \u003d \"data/tasksList.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Saves all tasks into a text file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param saveInput Task ArrayList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @throws DukeException If save fails"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e saveInput) throws DukeException{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        File saveFile \u003d new File(TASKS_SAVE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        boolean doesFileExist \u003d saveFile.exists();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasksList \u003d saveInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // make new directory and create new file if it does not exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (!doesFileExist) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            throw new DukeException(\"Unable to create new directory or file!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // Create Save file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            FileWriter saveFileWriter \u003d new FileWriter(TASKS_SAVE_PATH);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            for (Task task : tasksList){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                String textLineToAdd \u003d task.getClass().getSimpleName() + \" | \" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        task.getIsDone() + \" | \" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        task.getDescription();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (task instanceof Deadline || task instanceof Event) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    textLineToAdd \u003d textLineToAdd + \" | \" + task.getDoBy()[0] + \" | \" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                            task.getDoBy()[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                textLineToAdd +\u003d \"\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFileWriter.write(textLineToAdd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            saveFileWriter.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            throw new DukeException(\"Cannot write to task list save file\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Loads the saved list of tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Populated Task ArrayList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @throws DukeException if there is error in loading input"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasksList() throws DukeException{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // creates file for the path"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        File saveFile \u003d new File(TASKS_SAVE_PATH);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        boolean doesFileExist \u003d saveFile.exists();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // make new directory and create new file if it does not exist"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (!doesFileExist) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            throw new DukeException(\"Unable to create new directory or file!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // scanner with file as input source"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Scanner saveFileScanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            while (saveFileScanner.hasNext()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                String curLine \u003d saveFileScanner.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                // a limit of 0 splits the string as many times as possible"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                String[] taskDesc \u003d curLine.trim().split(\" \\\\| \", 0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                switch (taskDesc[0]) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                case \"Todo\": {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    if (taskDesc.length !\u003d 3) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        throw new DukeException(\"loadFile\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    Todo temp \u003d new Todo(taskDesc[2]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    temp.setIsDone(Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    tasksList.add(temp);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                case \"Event\": {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    if (taskDesc.length !\u003d 5){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        throw new DukeException(\"loadFile\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    Event temp \u003d new Event(taskDesc[2], taskDesc[3] + \" \" + taskDesc[4]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    temp.setIsDone(Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    tasksList.add(temp);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                case \"Deadline\": {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    if (taskDesc.length !\u003d 5){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                        throw new DukeException(\"loadFile\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    Deadline temp \u003d new Deadline(taskDesc[2], taskDesc[3] + \" \" + taskDesc[4]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    temp.setIsDone(Boolean.parseBoolean(taskDesc[1]));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    tasksList.add(temp);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    System.out.println(\"It seems like some of your tasks were not saved properly!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            throw new DukeException(\"Unable to read save File\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"loadFile\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 138
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Holds the task list and modifying functions"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Deletes a task from the list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks TaskList instantiation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param s User number input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskDelete(TaskList tasks, Ui ui, Storage storage, String s) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // to check if the task exists"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.getTasksSize()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            ui.taskDeleteMessage(taskNumber);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            storage.saveTasks(TaskList.tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"delete\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Adds an event into the task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks TaskList instantiation"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param s User string input"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskAddEvent(TaskList tasks, Ui ui, Storage storage, String s) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String[] inputSplitAtSlash;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            //splits input into task and time"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            inputSplitAtSlash \u003d s.trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (inputSplitAtSlash.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // if input string format does not fit constructor, throw error"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            String[] constructorFormat \u003d inputSplitAtSlash[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (constructorFormat.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Event temp \u003d new Event(inputSplitAtSlash[0], inputSplitAtSlash[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            TaskList.tasks.add(temp);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            ui.taskWithTimeAddMessage(tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            storage.saveTasks(TaskList.tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"event\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Adds a deadline into the task list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks TaskList instantiation"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param s User string input"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskAddDeadline(TaskList tasks, Ui ui, Storage storage, String s) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        String[] inputSplitAtSlash;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            //splits input into task and time"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            inputSplitAtSlash \u003d s.trim().split(\"/\", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (inputSplitAtSlash.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // if input string format does not fit constructor, throw error"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            String[] constructorFormat \u003d inputSplitAtSlash[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (constructorFormat.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Deadline temp \u003d new Deadline(inputSplitAtSlash[0], inputSplitAtSlash[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            TaskList.tasks.add(temp);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            ui.taskWithTimeAddMessage(tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            storage.saveTasks(TaskList.tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"deadline\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Adds a todo into the task list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks TaskList instantiation"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param input User string input"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskAddTodo(TaskList tasks, Ui ui, Storage storage, String input) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Todo temp \u003d new Todo(input);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            TaskList.tasks.add(temp);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            ui.taskAddMessage(tasks);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            storage.saveTasks(TaskList.tasks);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"todo\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Marks a task as done"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks TaskList instantiation"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param inputSplit User numerical input for task"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskDone(TaskList tasks, Ui ui, Storage storage, String inputSplit) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputSplit);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // on 0-index based array, location of task is -1"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            int taskIndex \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            // to check if the task exists"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.getTasksSize()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                throw new DukeException(\"done\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            TaskList.tasks.get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(taskNumber + \".\" + TaskList.tasks.get(taskIndex));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            storage.saveTasks(TaskList.tasks);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            e.getError(\"done\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Returns size of tasks arraylist"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return ArrayList size"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public int getTasksSize() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 164
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains methods for all user interactions"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    static final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints out a list of commands for duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskHelp() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Here are a list of available commands:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"done [number on list]\\\": marks a task on the list as done\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"todo [action]\\\": adds a todo into the list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"deadline [action] /[limit] [date] [time]\\\": adds a deadline into the list\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"deadlines also print your own strings, or just dates alone\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"event [action] /[limit] [date] [time]\\\": adds an event into the list\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"events also print your own strings, or just dates alone\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"help\\\": brings you to this menu!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"delete [number on list]\\\": removes a task from the list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"\\\"bye\\\": exits duke\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Failed to use date and time properly? Try this:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Lists out all the tasks in the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks Instantiation of TaskList"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskList(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        if (tasks.getTasksSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println(\"Oops! Looks like there\u0027s nothing in your list!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            System.out.println((i + 1) + \".\" + TaskList.tasks.get(i));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Print message for adding a task when it is a todo"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks Instantiation of TaskList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskAddMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                + System.lineSeparator() + TaskList.tasks.get(tasks.getTasksSize() - 1));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getTasksSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints the message for adding a task when it is a deadline or event"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks Instantiation of TaskList"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected void taskWithTimeAddMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(TaskList.tasks.get(tasks.getTasksSize() - 1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Now you have \" + TaskList.tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints delete message after deleting a task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param taskNumber 1-based index of task number in the list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskDeleteMessage(int taskNumber) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        // 0 based array index so task location is -1"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        int taskIndex \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(TaskList.tasks.get(taskIndex));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        TaskList.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Now you have \" + TaskList.tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints the welcome message at launch time"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke!\" + System.lineSeparator()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                + \"What can I do for you?\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints a message when a command is not recognised"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected static void invalidCommandMessage() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Sorry! You have entered an invalid command.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Type \\\"help\\\" to view a list of available commands!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints the farewell message"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected void byeMessage() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints a line for user interface"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void dateSearch(LocalDate date) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Here are the tasks at \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.tasks.size(); i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (TaskList.tasks.get(i) instanceof Event || TaskList.tasks.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                if (date.equals(TaskList.tasks.get(i).getDate())) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    System.out.println((i + 1) + \" \" + TaskList.tasks.get(i));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected static void printLine() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void taskFind(TaskList tasks, Ui ui, Storage storage, String inputSplit) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.tasks.size(); i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            String description \u003d TaskList.tasks.get(i).getDescription();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            if (description.contains(inputSplit)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                System.out.println((i+1) + \". \" + TaskList.tasks.get(i));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 149
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains actions for a adding a deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    String UnprocessedMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs a command with user input for adding a deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public AddDeadlineCommand(String UnprocessedMessage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.UnprocessedMessage \u003d UnprocessedMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Calls the add deadline function"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasks.taskAddDeadline(tasks, ui, storage, this.UnprocessedMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 30
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains actions for a adding an event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    String UnprocessedMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs a command with user input for adding an event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public AddEventCommand(String UnprocessedMessage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.UnprocessedMessage \u003d UnprocessedMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Calls the add event function"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasks.taskAddEvent(tasks, ui, storage, this.UnprocessedMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 30
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains actions for a adding a todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class AddTodoCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs a command with user input for adding a todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public AddTodoCommand(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Calls the add todo function"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasks.taskAddTodo(tasks, ui, storage, this.message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains a blank command for while loop in Duke inputLoop to exit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an empty instantiation of this class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public ByeCommand(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Executes nothing"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains basic information for a command structure"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an empty instantiation of this class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Provides format for constructing a command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DateSearchCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class DateSearchCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    LocalDate dateQuery;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public DateSearchCommand(String dateQuery) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.dateQuery \u003d Parser.parseDate(dateQuery);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        ui.dateSearch(this.dateQuery);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains actions for a deleting a task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    String number;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs a command with numerical user input for deleting task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public DeleteCommand(String number) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Calls the add delete task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasks.taskDelete(tasks, ui, storage, number);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains actions for marking a task as done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    String number;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs a command with numerical user input for marking task as done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public DoneCommand(String number) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Calls the mark task as done function"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        tasks.taskDone(tasks, ui, storage, number);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    String searchQuery;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public FindCommand (String searchQuery) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.searchQuery \u003d searchQuery;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        ui.taskFind(tasks, ui, storage, searchQuery);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 17
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains actions for listing help"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an empty instantiation of this class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Calls the help function"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        ui.taskHelp();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ListTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Contains actions for listing all tasks in the list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class ListTasksCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an empty instantiation of this class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public ListTasksCommand(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Calls the list all tasks command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param tasks ArrayList of Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param ui Ui instantiation"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param storage Storage instantiation"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        ui.taskList(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Represents a deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    boolean isTimeExist;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    LocalTime time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an instantiation of an deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param description Description of the deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param doBy Threshold of when the deadline should be met by"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Deadline(String description, String doBy) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.doBy \u003d doBy.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.date \u003d Parser.parseDate(this.doBy[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.time \u003d Parser.parseTime(this.doBy[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.isDateExist \u003d this.date !\u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.isTimeExist \u003d this.time !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints a fully formatted deadline"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Returns a fully formatted deadline string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        if (isDateExist \u0026\u0026 isTimeExist) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            return \"[D]\" + super.toString() + \"(\" + this.doBy[0] + \": \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    + this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } else if (isDateExist) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            return \"[D]\" + super.toString() + \"(\" + this.doBy[0] + \": \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            return \"[D]\" + super.toString() + \"(\" + this.doBy[0] + \": \" + this.doBy[1] + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Represents an event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    boolean isTimeExist;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    LocalTime time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an instantiation of an event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param description Description of the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param doBy Threshold of when the event is on"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Event(String description, String doBy) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.doBy \u003d doBy.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.date \u003d Parser.parseDate(this.doBy[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.time \u003d Parser.parseTime(this.doBy[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.isDateExist \u003d this.date !\u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.isTimeExist \u003d this.time !\u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints a fully formatted event"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Returns a fully formatted event string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        if (isDateExist \u0026\u0026 isTimeExist) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            return \"[E]\" + super.toString() + \"(\" + this.doBy[0] + \": \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    + this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } else if (isDateExist) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            return \"[E]\" + super.toString() + \"(\" + this.doBy[0] + \": \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "                    + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "            return \"[E]\" + super.toString() + \"(\" + this.doBy[0] + \": \" + this.doBy[1] + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Parents the other tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    boolean isDateExist;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    protected String[] doBy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an instantiation of an deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param description Description for task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Returns a tick or cross symbol from isDone boolean"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Tick or cross symbol"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Returns the description of a task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Task description"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Marks a task as done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints a formatted task string"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Formatted task string"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Returns the boolean for whether a task is done"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Task done boolean"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Set the isDone boolean"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param isDone Boolean for task completion"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Return the doBy status of task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return doBy string"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String[] getDoBy() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return doBy;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 89
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " * Represents a Todo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Constructs an instantiation of an deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @param description Description of the todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * Prints a fully formatted todo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     * @return Returns a fully formatted todo string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 25
    }
  },
  {
    "path": "text-ui-test/data/tasksList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Todo | false | Play Library of Ruina"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | false | bar  | foo | lish"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Event | false | something  | at | 04/05/2020 2359"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "Deadline | false | same thing but  | on | 03-05-2020"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "event foo /bar ring"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "todo Play Library of Ruina"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "deadline bar /foo lish"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "event foo /bar"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "event something /at 04/05/2020 2359"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "deadline same thing but /on 03-05-2020"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "deadline bar /foo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "random input line here"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "del data\\tasksList.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\command\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "CFZeon"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "CFZeon": 3,
      "-": 19
    }
  }
]
