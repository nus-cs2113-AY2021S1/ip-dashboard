[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "Duke is an application that is designed to help users to keep track of different types of tasks (i.e. todos, deadlines, events)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "1. Ensure you have Java 11 or above installed in your computer."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "1. Download the latest ... from... ."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "1. Copy the file to the folder you want to use as the howe folder for your Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "1. Double-click the file to start the app."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Providing help information: `help`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Displays all the valid input commands for the user to understand how to use Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `help`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "___________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tHere are some available commands and their corresponding input format: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tListing all the tasks: `list` "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `list`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tAdding a todo task: `todo` "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `todo TASK`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tAdding a deadline task: `deadline` "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `deadline TASK /by BYTIME`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tAdding an event task: `event` "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `event TASK /by ATTIME`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tMarking a task as done: `done` "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `done INDEX`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tDeleting a task: `delete` "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `delete INDEX`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFinding a task: `find` "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `find KEYWORD`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tExiting Duke: `bye` "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `bye`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Listing all the tasks: `list`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Displays the list of all recorded tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `list`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tHere are the tasks in your list: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t1. [T][✘] read a book"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t2. [D][✘] return the book (by: 10 Oct)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t3. [E][✘] group meeting (at: 11am Thursday)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Adding a todo task: `todo`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Adds a todo task which has no time limit to finish."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `todo TASK`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `todo read a book`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [T][✘] read a book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNow you have 1 tasks in the list. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Adds a deadline task which has to be done by a certain time."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format：`deadline TASK /by BYTIME`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `deadline return the book /by 10 Oct`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [D][✘] return the book (by: 10 Oct)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNow you have 5 tasks in the list. "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Adding an event task: `event`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Adds an event task which will happen at a certain time."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format：`event TASK /by ATTIME`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `event group meeting /at 11am Thursday`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [E][✘] group meeting (at: 11am Thursday)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNow you have 6 tasks in the list. "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Marking a task as done: `done`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Marks a certain task indicated by the user as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `done INDEX`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `done 1`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [T][✓] read a book"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Deleting a task: `delete`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Deletes a certain task indicated by the user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `delete INDEX`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `delete 4`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNoted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [T][✘] take a walk"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Finding a task: `find`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Finds the tasks that contains the certain keyword given by the user."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `find KEYWORD`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `find book`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tHere are the matching tasks in your list: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t1. [T][✓] read a book"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t2. [D][✘] return the book (by: 10 Oct)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Exiting Duke: `bye`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Exits Duke."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `bye`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "Cao-Zeyu": 146
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "Duke is an application that is designed to help users to keep track of different types of tasks (i.e. todos, deadlines, events)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "1. Ensure you have Java 11 or above installed in your computer."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "1. Download the latest CS2113_IP.jar from [here](https://github.com/Cao-Zeyu/ip/releases/tag/A-Release)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder for your Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "1. Double-click the file and open a command window in the home folder to run the jar file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Providing help information: `help`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Displays all the valid input commands for the user to understand how to use Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `help`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "___________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tHere are some available commands and their corresponding input format: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tListing all the tasks: `list` "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `list`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tAdding a todo task: `todo` "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `todo TASK`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tAdding a deadline task: `deadline` "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `deadline TASK /by BYTIME`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tAdding an event task: `event` "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `event TASK /by ATTIME`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tMarking a task as done: `done` "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `done INDEX`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tDeleting a task: `delete` "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `delete INDEX`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFinding a task: `find` "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `find KEYWORD`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tExiting Duke: `bye` "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tFormat: `bye`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Listing all the tasks: `list`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Displays the list of all recorded tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `list`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tHere are the tasks in your list: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t1. [T][✘] read a book"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t2. [D][✘] return the book (by: 10 Oct)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t3. [E][✘] group meeting (at: 11am Thursday)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Adding a todo task: `todo`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Adds a todo task which has no time limit to finish."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `todo TASK`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `todo read a book`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [T][✘] read a book"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNow you have 1 tasks in the list. "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Adds a deadline task which has to be done by a certain time."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format：`deadline TASK /by YYYY-MM-DD HOUR:MINUTE`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `ddeadline submit report /by 2020-10-03 14:59`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [D][✘] submit report (by: Oct 03 2020 14:59)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNow you have 1 tasks in the list. "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Adding an event task: `event`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Adds an event task which will happen at a certain time."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format：`event TASK /by YYYY-MM-DD HOUR:MINUTE`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `event project meeting /at 2020-10-06 11:00`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [E][✘] project meeting (at: Oct 06 2020 11:00)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNow you have 2 tasks in the list. "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Marking a task as done: `done`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Marks a certain task indicated by the user as done."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `done INDEX`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `done 1`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [T][✓] read a book"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Deleting a task: `delete`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Deletes a certain task indicated by the user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `delete INDEX`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `delete 4`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNoted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t   [T][✘] take a walk"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Finding a task: `find`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Finds the tasks that contains the certain keyword given by the user."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `find KEYWORD`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example: `find book`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tHere are the matching tasks in your list: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t1. [T][✓] read a book"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t2. [D][✘] return the book (by: 10 Oct)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "#### Exiting Duke: `bye`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Exits Duke."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Format: `bye`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "* Example of expected output:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "\t___________________________________________"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "Cao-Zeyu": 128
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "T | 0 | have breakfast"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "D | 0 | submit report | 2020-10-03 14:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "E | 0 | project meeting | 2020-10-06 11:00"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Constructs a Duke object containing tasks stored at a certain address."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param filePath the address of the file containing a list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @throws IOException the exception that occurs when encountered with problems in writing to"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * or reading from a file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        runUntilExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Starts the program by printing greeting lines."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        ui.printGreetings();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Keeps looping the program to receive commands from user until the user inputs to exit the program."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @throws IOException the exception that occurs when encountered with problems in writing to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * or reading from a file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private void runUntilExit() throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        String commandText;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            commandText \u003d in.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                Parser.parseCommand(commandText);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                ui.printInvalidInputMessage(commandText);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        } while (!commandText.equals(\"bye\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        storage.saveData(tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Exits the program by printing goodbye message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Cao-Zeyu": 75
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 2
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Parses the input command into a format that can be recognized by the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Except \"help\", \"list\" and \"bye\" commands, all other commands must be followed by further information."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * If there is no followings, or the input is not a command for this program, it will throw a DukeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param userInput the string that user inputs as command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @throws DukeException an exception that occurs when an invalid command is input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void parseCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        int lengthOfCommandKeyWord \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        String commandKeyWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        if (userInput.equals(\"help\") || userInput.equals(\"list\") || userInput.equals(\"bye\") ) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            commandKeyWord \u003d userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        } else if (!userInput.contains(\" \")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            lengthOfCommandKeyWord \u003d userInput.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            commandKeyWord \u003d userInput.substring(0, lengthOfCommandKeyWord);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        String commandMessage \u003d userInput.substring(lengthOfCommandKeyWord+1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        switch (commandKeyWord) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            parseTodoCommand(commandMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            parseDeadlineCommand(commandMessage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            parseEventCommand(commandMessage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            parseHelpCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            parseListCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            parseDoneCommand(commandMessage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            parseDeleteCommand(commandMessage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            parseFindCommand(commandMessage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private static void parseTodoCommand(String description) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        TaskList.addTodo(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private static void parseDeadlineCommand(String commandMessage) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        int byDatePosition \u003d commandMessage.indexOf(\"/\")+4;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        int byTimePosition \u003d commandMessage.indexOf(\" \", byDatePosition)+1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        String description \u003d commandMessage.substring(0, byDatePosition-5);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        LocalDate byDate \u003d LocalDate.parse(commandMessage.substring(byDatePosition, byTimePosition-1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        LocalTime byTime \u003d LocalTime.parse(commandMessage.substring(byTimePosition));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        TaskList.addDeadline(description, byDate, byTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private static void parseEventCommand(String commandMessage) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        int atDatePosition \u003d commandMessage.indexOf(\"/\")+4;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        int atTimePosition \u003d commandMessage.indexOf(\" \", atDatePosition)+1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        String description \u003d commandMessage.substring(0, atDatePosition-5);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        LocalDate atDate \u003d LocalDate.parse(commandMessage.substring(atDatePosition, atTimePosition-1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        LocalTime atTime \u003d LocalTime.parse(commandMessage.substring(atTimePosition));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        TaskList.addEvent(description, atDate, atTime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private  static void parseHelpCommand() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Ui.printHelp();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private static void parseListCommand() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        TaskList.getWholeList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private static void parseDoneCommand(String commandMessage) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        int doneIndex \u003d Integer.parseInt(commandMessage);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        TaskList.setDone(doneIndex);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private static void parseDeleteCommand(String commandMessage) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        int deletedIndex \u003d Integer.parseInt(commandMessage);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        TaskList.delete(deletedIndex);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    private static void parseFindCommand(String commandMessage) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        TaskList.getMatchingTask(commandMessage);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 99
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Constructs a Storage object to access the data in the given address."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param filePath the String given to indicate the desired address"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Loads the data stored in the given file address and re-formats them into a task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * The stored data may contain todo, deadline, and event tasks with their corresponding task status."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @return the task list that read from the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @throws IOException an exception occurs when encountered with problems reading into the file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadData() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        if (dataFile.createNewFile()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            System.out.println(\"\\tSince the file does not exist, I have created a file for you.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Scanner dataScanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        while (dataScanner.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            String data \u003d dataScanner.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            String type \u003d data.substring(0, 1);//task type length \u003d 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            boolean isDone \u003d data.charAt(4) \u003d\u003d \u00271\u0027;//status index \u003d 4"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            String content \u003d data.substring(8);//description starts index \u003d 8"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            String description \u003d content;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            String dateAndTime \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            LocalDate byDate;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            LocalTime byTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            LocalDate atDate;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            LocalTime atTime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            int dateAndTimeIndex;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            if (content.contains(\"|\")) {//have date and time"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                dateAndTimeIndex \u003d content.indexOf(\"|\") + 2;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                description \u003d content.substring(0, dateAndTimeIndex - 3);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                dateAndTime \u003d content.substring(dateAndTimeIndex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                fileAddTodo(list, description, isDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                int byTimeIndex \u003d dateAndTime.indexOf(\" \")+1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                byDate \u003d LocalDate.parse(dateAndTime.substring(0, byTimeIndex-1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                byTime \u003d LocalTime.parse(dateAndTime.substring(byTimeIndex));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                fileAddDeadline(list, description, byDate, byTime, isDone);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                int atTimeIndex \u003d dateAndTime.indexOf(\" \")+1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                atDate \u003d LocalDate.parse(dateAndTime.substring(0, atTimeIndex-1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                atTime \u003d LocalTime.parse(dateAndTime.substring(atTimeIndex));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                fileAddEvent(list, description, atDate, atTime, isDone);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Saves the updated task list as data back to the give file address whenever the task list changes."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param tasks the TaskList object that contains the tasks in the list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @throws IOException an exception occurs when encountered with problems writing to the file"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void saveData(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        FileWriter dataWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            dataWriter.write(tasks.getList().get(i).toDataString() + \"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        dataWriter.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Adds a todo task read from the file to the task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param list the list that stores all the tasks"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param description the string that describe this todo task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param isDone the status of this todo tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void fileAddTodo(ArrayList\u003cTask\u003e list, String description, boolean isDone) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.add(new ToDo(description));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.get(list.size()-1).setDone(isDone);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Adds a deadline task read from the file to the task list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param list the list that stores all the tasks"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param description the string that describe this deadline task"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param byDate the data when this deadline task ends"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param byTime the time when this deadline task ends"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param isDone the status of this deadline tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void fileAddDeadline(ArrayList\u003cTask\u003e list, String description,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                                       LocalDate byDate, LocalTime byTime, boolean isDone) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.add(new Deadline(description, byDate, byTime));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.get(list.size()-1).setDone(isDone);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Adds a event task read from the file to the task list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param list the list that stores all the tasks"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param description the string that describe this event task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param atDate the data when this event task occurs"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param atTime the time when this event task occurs"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param isDone the status of this event tasks"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void fileAddEvent(ArrayList\u003cTask\u003e list, String description,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                                    LocalDate atDate, LocalTime atTime, boolean isDone) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.add(new Event(description, atDate, atTime));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.get(list.size()-1).setDone(isDone);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 139
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Constructs a new task list if there is no data stored in the given address."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Constructs a task list by reading from the file content in the given address."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param list the task list that is read from the file in the given address"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Adds a todo task into the task list and confirms the adding bu printing a message."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param description the description for this added todo task obtained by parsing the input command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void addTodo (String description) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.add(new ToDo(description));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Ui.printAddMessage(list.get(list.size()-1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Adds a deadline task into the task list and confirms the adding bu printing a message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param description the description for this added deadline task obtained by parsing the input command"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param byDate the end date for this added deadline task obtained by parsing the input command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param byTime the end time for this added deadline task obtained by parsing the input command"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void addDeadline(String description, LocalDate byDate, LocalTime byTime) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.add(new Deadline(description, byDate, byTime));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Ui.printAddMessage(list.get(list.size()-1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Adds a event task into the task list and confirms the adding bu printing a message."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param description the description for this added event task obtained by parsing the input command"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param atDate the occur date for this added event task obtained by parsing the input command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param atTime the occur time for this added event task obtained by parsing the input command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void addEvent(String description, LocalDate atDate, LocalTime atTime) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.add(new Event(description, atDate, atTime));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Ui.printAddMessage(list.get(list.size()-1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void getWholeList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Ui.printCompleteList(list);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Gets the tasks that contains the keyword that the user inputs and print them in another task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param taskKeyword the keyword that the user want all the matching tasks to contain"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void getMatchingTask(String taskKeyword) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        for(Task task : list) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            if (task.getDescription().contains(taskKeyword)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                matchingTaskList.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        if (matchingTaskList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            Ui.printMatchingList(matchingTaskList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            Ui.printNoMatchingMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Sets the task indicated by the user as done and confirms the marking by printing a message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param doneIndex the index of the task that the user input to be marked as done"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void setDone(int doneIndex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Task doneTask \u003d list.get(doneIndex-1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        doneTask.setDone(true);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.set(doneIndex-1, doneTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Ui.printDoneMessage(doneTask);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Deletes the task indicated by the user and confirms the deletion by printing a message."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param deletedIndex the index of the task that the user input to be deleted"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void delete(int deletedIndex) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Task deletedTask \u003d list.get(deletedIndex-1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        Ui.printDeletedMessage(deletedTask);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        list.remove(deletedIndex-1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static int getSize() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 118
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints the Duke logo and greetings when the program starts to run."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printGreetings() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"\\t\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints the goodbye message before the program ends."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints an error message when there is no data stored in the text file to be loaded."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"There is no existing data to load... \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints the corresponding error message for different type of invalid inputs."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param input the invalid input which is not a command or does not provide enough information"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printInvalidInputMessage(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            System.out.println(\"\\t\" + \"🙁 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            System.out.println(\"\\t\" + \"🙁 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            System.out.println(\"\\t\" + \"🙁 OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            System.out.println(\"\\t\" + \"🙁 OOPS!!! The index of the task cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            System.out.println(\"\\t\" + \"🙁 OOPS!!! The keyword for finding cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            System.out.println(\"\\t\" + \"🙁 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"___________________________________________\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints a message to confirm the addition of a task by printing the formatted task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * and the number of tasks in the updated task list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param task the new task to be added into the task list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printAddMessage(Task task) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t   \" + task.toOutputString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Now you have \" + (TaskList.getSize()) + \" tasks in the list. \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints a message to confirm marking a task as done by printing the formatted task with"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * updated task status."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param doneTask the task to be marked as done"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printDoneMessage(Task doneTask) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t   \" + doneTask.toOutputString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints a message to confirm deleting a task by reprinting the deleted task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * and the number of tasks in the updated task list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param deletedTask the task to be deleted"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printDeletedMessage(Task deletedTask) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t   \" + deletedTask.toOutputString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\tNow you have \" + (TaskList.getSize()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Displays all the tasks in the list in order."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * This method is used in \u003cprintCompleteList\u003e\u003c/printCompleteList\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * and \u003cprintMatchingList\u003e\u003c/printMatchingList\u003e to display tasks stored in different list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param list the task list to be displayed"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void displayList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        for(int i\u003d1; i\u003c\u003dlist.size(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "            System.out.println(\"\\t\" + i + \". \" + list.get(i-1).toOutputString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints the complete task list which stores all the tasks."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param completeList the complete list"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printCompleteList(ArrayList\u003cTask\u003e completeList) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        displayList(completeList);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints the list of tasks that matches the find input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param matchingList the list of tasks that contains the finding keyword"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printMatchingList(ArrayList\u003cTask\u003e matchingList) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        displayList(matchingList);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints an error message if the task matches the find input cannot be found."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printNoMatchingMessage() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"There is no matching task... \");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Prints all the valid input commands for the user to understand how to use Duke."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Here are some available commands \" +"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"and their corresponding input format: \" + System.lineSeparator());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Listing all the tasks: `list` \" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"\\n\\t\" + \"Format: `list`\" + System.lineSeparator());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Adding a todo task: `todo` \" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"\\n\\t\" + \"Format: `todo TASK`\" + System.lineSeparator());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Adding a deadline task: `deadline` \" +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"\\n\\t\" + \"Format: `deadline TASK /by YYYY-MM-DD HOUR:MINUTE`\" + System.lineSeparator());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Adding an event task: `event` \" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"\\n\\t\" + \"Format: `event TASK /by YYYY-MM-DD HOUR:MINUTE`\" + System.lineSeparator());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Marking a task as done: `done` \" +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"\\n\\t\" + \"Format: `done INDEX`\" + System.lineSeparator());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Deleting a task: `delete` \" +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"\\n\\t\" + \"Format: `delete INDEX`\" + System.lineSeparator());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Finding a task: `find` \" +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \"\\n\\t\" + \"Format: `find KEYWORD`\" + System.lineSeparator());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        System.out.println(\"\\t\" + \"Exiting Duke: `bye` \" + \"\\n\\t\" + \"Format: `bye`\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 187
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    protected LocalTime byTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public Deadline(String description, LocalDate byDate, LocalTime byTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.byDate \u003d byDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.byTime \u003d byTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String toOutputString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return \"[D]\" + super.toOutputString() +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                + \" \" + byTime + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return \"D\" + super.toDataString() + \" | \" + byDate + \" \" + byTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    protected LocalDate atDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    protected LocalTime atTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public Event(String description, LocalDate atDate, LocalTime atTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.atDate \u003d atDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.atTime \u003d atTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String toOutputString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return \"[E]\" + super.toOutputString()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                + \" (at: \" + atDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "                + \" \" + atTime + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return \"E\" + super.toDataString() + \" | \" + atDate + \" \" + atTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Constructs a Task object with a given description and a default task status of undone."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @param description the string given to describe this task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Returns the status icon when outputting the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @return a cross if the task is undone, a tick if the task is done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Returns the status icon when writing the tasks into the text file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @return a \"0\" if the task is undone, a \"1\" if the task is done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String getStatusData() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Returns the string format of the task to output the task when the program is running."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @return the string format of this task with its status and description for output"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String toOutputString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * Returns the string format of the task to write the task into the file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     * @return the string format of this task with its status and description for data saving"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return \" | \" + getStatusData() + \" | \" + description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 60
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String toOutputString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return \"[T]\" + super.toOutputString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "        return \"T\" + super.toDataString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "exit"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Cao-Zeyu": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cao-Zeyu"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\Duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "Cao-Zeyu": 1
    }
  }
]
