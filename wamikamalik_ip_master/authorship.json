[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    Command(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public CommandType extractType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        String command \u003d message.trim().split(\" \")[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        if(command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            return CommandType.EXIT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        } else if(command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            return CommandType.LIST;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        } else if(command.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            return CommandType.MARK_DONE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        } else if(message.length()\u003c5) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            return CommandType.NONE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            if(command.equalsIgnoreCase(\"todo\")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                return CommandType.TODO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            } else if(command.equalsIgnoreCase(\"deadline\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                return CommandType.DEADLINE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            } else if(command.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                return CommandType.EVENT;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                return CommandType.NONE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 36
    }
  },
  {
    "path": "src/main/java/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    MARK_DONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    NONE"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "import  java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"\\n\\tSee you! Have a nice day!\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static final String UNIDENTIFIED_MESSAGE \u003d \"\\n\\tSorry! :( I don\u0027t understand.\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static final String DEADLINE_IDENTIFIER \u003d \"/by \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static final String EVENT_IDENTIFIER \u003d \"/on \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * prints a line of 100 character length."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        for(int i \u003d 0; i\u003c100; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.print(\"-\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        Command command \u003d new Command(in.nextLine());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            //the following code interprets the command entered by the user and takes appropriate actions."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            CommandType type \u003d command.extractType();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                case EXIT:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    System.out.println(BYE_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    listTasks(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                case MARK_DONE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    int itemNo \u003d extractItemNo(command.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    executeDone(tasks, itemNo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    executeAdd(command.getMessage(), tasks, CommandType.TODO);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    executeAdd(command.getMessage(), tasks, CommandType.DEADLINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    executeAdd(command.getMessage(), tasks, CommandType.EVENT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                case NONE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    System.out.println(UNIDENTIFIED_MESSAGE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            if(type \u003d\u003d CommandType.EXIT) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            command \u003d new Command(in.nextLine());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /** Print the welcome massage."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private static void welcomeMessage() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        String logo \u003d \" __A__   _C__   _E__\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    + \"/  _  \\\\ /  __| |  __|\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    + \"| |_| | | |    | |__\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    + \"|  _  | | |__  | |__\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    + \"| | | | \\\\____| |____|\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        System.out.println(\"\\tHey there! I\u0027m Ace, your very own personal assistant.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        System.out.println(\"\\tHow can I help you today?\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /** Adds the new task to the list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param command task name given by the user"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param type the type of task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private static void executeAdd(String command, Task[] tasks, CommandType type) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        boolean isCorrect \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            isCorrect \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            String todoName \u003d command.trim().substring(5, command.length());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            tasks[Task.getNoOfTasks()] \u003d new Todo(todoName);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            if(command.contains(DEADLINE_IDENTIFIER)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                isCorrect \u003d true;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                String[] rawName \u003d command.trim().split(DEADLINE_IDENTIFIER);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                String deadlineName \u003d rawName[0].substring(9, rawName[0].length()-1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                String by \u003d rawName[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                tasks[Task.getNoOfTasks()] \u003d new Deadline(deadlineName, by);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            if(command.contains(EVENT_IDENTIFIER)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                isCorrect \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                String[] rawEventName \u003d command.trim().split(EVENT_IDENTIFIER);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                String eventName \u003d rawEventName[0].substring(6, rawEventName[0].length()-1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                String on \u003d rawEventName[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                tasks[Task.getNoOfTasks()] \u003d new Event(eventName, on);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        addMessage(tasks, isCorrect);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /**displays the appropriate message after adding task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param isCorrect to check if the command is correct"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private static void addMessage(Task[] tasks, boolean isCorrect) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        if(isCorrect) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\n\\tAdded task \\\"\" + tasks[Task.getNoOfTasks() - 1] + \"\\\" to your To-Do\u0027s!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\tYou now have \" + Task.getNoOfIncompleteTasks() + \" incomplete task\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    + (Task.getNoOfIncompleteTasks() !\u003d 1 ? \"s\" : \"\") + \".\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\tTo view the To-Do list simply type \\\"list\\\".\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\n\\tOops! Wrong format given for the command :\\\\\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /** Get the item number from the command entered."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param command the done command given"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @return the item number"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private static int extractItemNo(String command) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        int itemNo;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            String rawItemNo \u003d command.trim().substring(5, command.length());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            if(rawItemNo.endsWith(\".\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                rawItemNo \u003d rawItemNo.substring(0,rawItemNo.length()-1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            itemNo \u003d Integer.parseInt(rawItemNo);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        } catch (NumberFormatException error) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            itemNo \u003d 0;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return itemNo;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /** Mark the given item as done."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param itemNo the item to be deleted"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private static void executeDone(Task[] tasks, int itemNo) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        if(itemNo \u003d\u003d 0) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\n\\tPlease enter a valid item number.\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }else if(itemNo \u003eTask.getNoOfTasks()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\n\\tItem \"+ itemNo +\" does not exist.\\n\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        } else if(tasks[itemNo -1].isDone()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\n\\tThis task was marked as done earlier!\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\tTo see the list of incomplete tasks simply type \\\"list\\\".\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            tasks[itemNo -1].markAsDone();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\n\\tGreat! I have updated your To-Do list for the following task:\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\t\\t [\"+ tasks[itemNo -1].getIcon() + \"] \""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                    + tasks[itemNo -1].getName()+\"\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /** List the tasks."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private static void listTasks(Task[] tasks) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        if(Task.getNoOfTasks()\u003d\u003d0) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\n\\tYou currently don\u0027t have any tasks.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\tTo add a task simply input the task description.\\n\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println(\"\\n\\tHere\u0027s your current To-Do list:\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            for (int i \u003d 0; i\u003cTask.getNoOfTasks(); i +\u003d 1) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "                System.out.println(\"\\t\\t\"+ (i+1) + \". \" + tasks[i]);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "wamikamalik": 202
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return \"[E]\" + super.toString() + \"(on: \" + time + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /**Description of task*/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /**records the completion of the task*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /**total number of tasks in the list*/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    private static int noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    /**number of incomplete tasks*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static int noOfIncompleteTasks \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this(\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        noOfTasks +\u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        noOfIncompleteTasks+\u003d1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        noOfIncompleteTasks-\u003d1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static int getNoOfTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return noOfTasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public static int getNoOfIncompleteTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return noOfIncompleteTasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return \"[\" + getIcon() + \"] \" + getName();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 60
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "hahaaaha"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "done 3e4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "DeadLine submit assign /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "EvenT helloWorld"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "EvenT say hello /on 25th Sept @ 5PM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wamikamalik": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wamikamalik"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "wamikamalik": 2
    }
  }
]
