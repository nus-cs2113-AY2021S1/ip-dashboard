[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int MAX_INT \u003d 100;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static Task[] tasks \u003d new Task[MAX_INT];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        // Level 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayDuke();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        helloMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        commandsAvailable();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String[] commandGiven \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (userInput.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                for (int j \u003d 0; j \u003c listIndex; j++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    System.out.println((j + 1) + \".\" + tasks[j].toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (userInput.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int taskDone \u003d Integer.parseInt(commandGiven[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                tasks[taskDone - 1].markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(tasks[taskDone - 1].toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (userInput.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                userInput \u003d userInput.substring(4).trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                tasks[listIndex] \u003d new ToDo(userInput);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"\\t\" + tasks[listIndex++].toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Now you have \" + listIndex + ((listIndex \u003e 1) ? \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (userInput.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                userInput \u003d userInput.substring(8).trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int byIndex \u003d userInput.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String dateInput \u003d userInput.substring(byIndex + 3).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                userInput \u003d userInput.substring(0, byIndex - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                tasks[listIndex] \u003d new Deadline(userInput, dateInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"\\t\" + tasks[listIndex++].toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Now you have \" + listIndex + ((listIndex \u003e 1) ? \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (userInput.toLowerCase().startsWith(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                userInput \u003d userInput.substring(5).trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                int byIndex \u003d userInput.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                String dateInput \u003d userInput.substring(byIndex + 3).trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                userInput \u003d userInput.substring(0, byIndex - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                tasks[listIndex] \u003d new Event(userInput, dateInput);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"\\t\" + tasks[listIndex++].toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Now you have \" + listIndex + ((listIndex \u003e 1) ? \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (userInput.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                byeMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (userInput.toLowerCase().equals(\"help\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                commandsAvailable();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Sorry but command not found!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                commandsAvailable();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static void commandsAvailable() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Commands available: list, done, todo, event, deadline\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"The expected format of input values: \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"list - Gives the list of data inputted\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"help - this pulls out the commands available\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"done x - x is the index(pull up list) of data that you want to mark as done\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"todo x - x is the data to be done\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"deadline x /by y - x is the data and y is the deadline\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"event x /at y - x is the data and y is the event date\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"bye - this terminates the program\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDuke() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void drawLines() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"--------------------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void helloMessage() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"What can I do for you today?\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void byeMessage() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Bye. It was a pleasure serving you.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Hope to see you again soon!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 109,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 21
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "deadline sleeping /by monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "event slept /at tuesday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "e0425705": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "e0425705": 2,
      "-": 19
    }
  }
]
