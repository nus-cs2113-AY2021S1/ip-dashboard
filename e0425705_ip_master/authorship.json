[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "e0425705": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# User Guide for Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Duke is a command-line application that helps you to keep track of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "It is built to cater to the needs of University students as a mean to organise tasks such as todo, event and deadline."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "More task types would be released in version 2."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "This application is named after the Java mascot *Duke*. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Given below are instructions on how to use it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* [Quick Start]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* [Features]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Setting up program in Intellij](#setting-up-program-in-intellij)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Adding a task type todo](#adding-a-task-type-todo): `todo`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Adding a task type deadline](#adding-a-task-type-deadline): `deadline`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Adding a task type event](#adding-a-task-type-event): `event`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Displaying the task list](#displaying-the-task-list): `list`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Marking a task as done](#marking-a-task-as-done): `done`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Deleting a task from list](#deleting-a-task-from-list): `delete`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Finding a keyword in list](#finding-a-keyword-in-list): `find`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Printing the help list](#printing-the-help-list): `help`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Saving the current list to file](#saving-the-current-list-to-file): `save`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    * [Exiting the program](#exiting-the-program): `bye`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* [Command Summary] "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Ensure that you have at least Java 11 installed in your computer and updated Intellij to the most recent version."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Here are some commands you can try:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        * `todo CS2113`: Adds task type todo with task description CS2113 into the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        * `list`: Prints out the list of all tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        * `done 2`: Marks the task in index 2 of the list as done, indicated by a tick(✓)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        * `delete 3`: Deletes the task in index 3 of the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        * `find CS`: Searches through task list for description with the CS in it."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        * `help`: Prints out the commands available and their respective formats."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        * `save`: Saves current list into storage file duke.txt."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        * `bye`: Saves current list into storage file duke.txt and exits application."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Refer to Features below for more commands and their details."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Duke has 3 types of task available. Which are `todo`, `deadline` and `event`."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* The other commands available are `list`, `done`, `delete`, `find`, `help`, `save` and `bye`."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThings to take note of:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Input that look like `**this**` are parameters to be supplied by user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Input format should strictly adhere to the one in the help list or in this user guide."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* Input commands such as `todo`, `list`, `delete`, etc. are not case-sensitive but it is recommended to follow format stated in help list or this user guide."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* It is essential to save list via command `save` or `bye` as the list do not autosave to storage file duke.txt."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Setting up program in Intellij"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "  For first time user, if the setup is correct, the following would be printed out:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "         "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "-------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Hello! I\u0027m Duke."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "What can I do for you today?"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Commands available: list, help, done, todo, deadline, event, delete, find, save, bye"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The expected format of input values: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tlist - gives the list of data inputted"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\thelp - pulls out the commands available and their input format"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdone x - x is the index of data that you want to mark as done"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\ttodo x - x is the task description"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdeadline x /by DATETIME - x is the task description and y is the deadline date and time"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tevent x /at DATETIME - x is the task description and y is the event date and time"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t\tFormat for DATETIME is YYYY-MM-DDtHHmm, where"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t\tYYYY \u003d year, MM \u003d month, DD \u003d day, HH \u003d hour, mm \u003d minute"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdelete x - removes the task located at index x of the list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tfind x - looks for task description with x included"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tsave - saves the current list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tbye - terminates the program"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Created new file C:\\Users\\PUAH\\Desktop\\ceg\\CS2113T\\IP\\duke.txt"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThis implies that a file name duke.txt has been created as a storage file, with path C:\\Users\\PUAH\\Desktop\\ceg\\CS2113T\\IP\\duke.txt, this path differs for different user and where they save the application. "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThis file will only be created once."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "  For none first time user, a list of the task that you have saved previously in duke.txt would be shown. An example of a successful run can look like:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "      "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Hello! I\u0027m Duke."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "What can I do for you today?"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Commands available: list, help, done, todo, deadline, event, delete, find, save, bye"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The expected format of input values: "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tlist - gives the list of data inputted"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\thelp - pulls out the commands available and their input format"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdone x - x is the index of data that you want to mark as done"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\ttodo x - x is the task description"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdeadline x /by DATETIME - x is the task description and y is the deadline date and time"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tevent x /at DATETIME - x is the task description and y is the event date and time"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t\tFormat for DATETIME is YYYY-MM-DDtHHmm, where"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t\tYYYY \u003d year, MM \u003d month, DD \u003d day, HH \u003d hour, mm \u003d minute"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdelete x - removes the task located at index x of the list"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tfind x - looks for task description with x included"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tsave - saves the current list"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tbye - terminates the program"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    [T][✘] example1"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    [E][✘] example2 (at: 24 SEPTEMBER 2020, 2057)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    [D][✘] example3 (by: 24 SEPTEMBER 2020, 2100)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   * In this example, `todo` example1, `event` example2 and `deadline` example3 were loaded from file duke.txt."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   An example of a run with error can look like:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "         "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Hello! I\u0027m Duke."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "What can I do for you today?"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Commands available: list, help, done, todo, deadline, event, delete, find, save, bye"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The expected format of input values: "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tlist - gives the list of data inputted"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\thelp - pulls out the commands available and their input format"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdone x - x is the index of data that you want to mark as done"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\ttodo x - x is the task description"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdeadline x /by DATETIME - x is the task description and y is the deadline date and time"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tevent x /at DATETIME - x is the task description and y is the event date and time"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t\tFormat for DATETIME is YYYY-MM-DDtHHmm, where"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t\tYYYY \u003d year, MM \u003d month, DD \u003d day, HH \u003d hour, mm \u003d minute"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdelete x - removes the task located at index x of the list"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tfind x - looks for task description with x included"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tsave - saves the current list"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tbye - terminates the program"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    [T][✘] example1"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    [E][✘] example2 (at: 24 SEPTEMBER 2020, 2057)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "An error has occurred here!"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Do check file source if there is a corruption of data!"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    [D][✘] example3 (by: 24 SEPTEMBER 2020, 2100)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   * The block of error message implies that there is a line of code between task example2 and example3 in the storage file duke.txt that the program cannot decode."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   * The other lines that the program can decode would be added into list and program is ready for input."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   * To solve the error, the user is required to open duke.txt and check for the error."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   * If the issue is due to an error in the input in duke.txt, the user will have to re-enter the task into the list via `todo`, `deadline` or `event`."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   * Else if the issue is due to an unwanted line, it can be ignored."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   * Do note that the program will not keep the line in which there was an error in the Duke program."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0425705"
        },
        "content": "      * The whole storage file duke.txt would be overwritten by the current list in the program when `save` or `bye` command is inputted."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0425705"
        },
        "content": "      "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   The \"Commands available:...\" provides the help list to first time users. This also can be used as reference to users who forget what are the commands available and their format. "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   It can be printed out once again with the command `help`."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Adding a task type todo"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Adds a task of type todo to the list."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `todo **TASK_DESCRIPTION**`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**TASK_DESCRIPTION**`: Description of task."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `todo study`"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t[T][✘] study"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Now you have 1 task in the list"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If the `**TASK_DESCRIPTION**` is empty, the following would be printed out:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `todo`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The description of a todo cannot be empty."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Adding a task type deadline"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Adds a task of type deadline to the list."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `deadline **TASK_DESCRIPTION** /by **DATE_TIME**`"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**TASK_DESCRIPTION**`: Description of task."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**DATE_TIME**`: Date and time in the format YYYY-MM-DDtHHmm, "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* where YYYY \u003d year, MM \u003d month, DD \u003d day, HH \u003d hour, mm \u003d minute."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `deadline do IP /by 2019-09-08t1700`"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t[D][✘] do IP (by: 8 SEPTEMBER 2019, 1700)"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If an input which did not follow the format is inputted, the following are examples of what would be printed out:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `deadline prepare oral `"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Sorry I do not understand what you mean!"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Do bring out help list via the command \u0027help\u0027 for the specific format!"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `deadline study /at 2013-08-09tyyy`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Something went wrong!! I do not understand what you mean."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "e0425705"
        },
        "content": "There could be an error in the way of input."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `deadline`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The task you input has missing fields!"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThings to take note of:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `**DATE_TIME**` is according to the 24-hour clock. (e.g. 1800)"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Adding a task type event"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Adds a task of type event to the list."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `event **TASK_DESCRIPTION** /at **DATE_TIME**`"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**TASK_DESCRIPTION**`: Description of task."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**DATE_TIME**`: Date and time in the format YYYY-MM-DDtHHmm, "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* where YYYY \u003d year, MM \u003d month, DD \u003d day, HH \u003d hour, mm \u003d minute."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `event study CS2113 /at 2016-09-18t1500`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t[E][✘] study CS2113 (at: 18 SEPTEMBER 2016, 1500)"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If an input which did not follow the format is inputted, the following are examples of what would be printed out:"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `event prepare oral `"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Sorry I do not understand what you mean!"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Do bring out help list via the command \u0027help\u0027 for the specific format!"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `event study for mid terms /at 2013-08-09txxx`"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Something went wrong!! I do not understand what you mean."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "e0425705"
        },
        "content": "There could be an error in the way of input."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `event`"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The task you input has missing fields!"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThings to take note of:"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `**DATE_TIME**` is according to the 24-hour clock. (e.g. 1800)"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Displaying the task list"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Prints out all tasks added to list."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list`"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Here are the tasks in the list"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t1.[T][✘] study"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t2.[D][✘] do IP (by: 8 SEPTEMBER 2019, 1700)"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t3.[E][✘] study CS2113 (at: 18 SEPTEMBER 2016, 1500)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If the list is empty, the following would be printed out:"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `list`"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Here is the task in the list"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Marking a task as done"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Marks the specified task as completed."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `done **TASK_INDEX**`"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**TASK_INDEX**`: Index of task in list."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `done 1`"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t[T][✓] study"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If the `**TASK_INDEX**` cannot be found in list, the following would be printed out:"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `done 4`"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Something went wrong!! I do not understand what you mean."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "e0425705"
        },
        "content": "There could be an error in the way of input."
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Deleting a task from list"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Deletes the specified task from the list."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `delete **TASK_INDEX**`"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**TASK_INDEX**`: Index of task in list."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `delete 1`"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t[T][✓] study"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If `**TASK_INDEX**` is not found in list, the following are examples of what would be printed out"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `delete 10`"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Sorry the index of task to be remove cannot be found!"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `delete a`"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Something went wrong!! I do not understand what you mean."
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "e0425705"
        },
        "content": "There could be an error in the way of input."
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Please do input \u0027help\u0027 for the commands and their respective input format."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Finding a keyword in list"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Find tasks with the keyword included in the task description."
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `find **TASK_KEYWORD**`"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `**TASK_KEYWORD**`: Keyword to search for in tasks description in list."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `find do`"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t2.[E][✘] study CS2113 (at: 18 SEPTEMBER 2016, 1500)"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "e0425705"
        },
        "content": "If `**TASK_KEYWORD**` is not found, the following would be printed out:"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `find one`"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003eThings to take note of:"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* `**TASK_KEYWORD**` is case-sensitive."
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\u003e* the indexes printed out is the index of the respective tasks in the list."
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    \u003e* In the case of the 1st example, the index of `event study CS2113` is found in index 2 of the list."
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Printing the help list"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Prints out the commands available and their respective input format."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `help`"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Commands available: list, help, done, todo, deadline, event, delete, find, save, bye"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The expected format of input values: "
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tlist - gives the list of data inputted"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\thelp - pulls out the commands available and their input format"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdone x - x is the index of data that you want to mark as done"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\ttodo x - x is the task description"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdeadline x /by DATETIME - x is the task description and y is the deadline date and time"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tevent x /at DATETIME - x is the task description and y is the event date and time"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t\tFormat for DATETIME is YYYY-MM-DDtHHmm, where"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\t\tYYYY \u003d year, MM \u003d month, DD \u003d day, HH \u003d hour, mm \u003d minute"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tdelete x - removes the task located at index x of the list"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tfind x - looks for task description with x included"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tsave - saves the current list"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "e0425705"
        },
        "content": "\tbye - terminates the program"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Saving the current list to file"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Saves current list to file without exiting program."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `save`"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `save`"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current list has been saved."
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Exiting the program"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Saves the current list to file and exits program."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "e0425705"
        },
        "content": "* `bye`"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Bye. It was a pleasure serving you."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "e0425705"
        },
        "content": "The current list has been saved."
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Hope to see you again soon!"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "e0425705"
        },
        "content": "--------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "e0425705"
        },
        "content": "```"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "e0425705"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "e0425705"
        },
        "content": " Action    | Format, Example "
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "e0425705"
        },
        "content": "---------- | ----------              "
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "e0425705"
        },
        "content": "ToDo | `todo TASK_DESCRIPTION`, `todo study` "
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Deadline | `deadline TASK_DESCRIPTION /by DATE_TIME`, `deadline do IP /by 2019-09-08t1700`"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Event | `event TASK_DESCRIPTION /at DATE_TIME`, `event study CS2113 /at 2016-09-18t1500`"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "e0425705"
        },
        "content": "List | `list`"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Done | `done TASK_INDEX`, `done 1`"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Delete | `delete TASK_INDEX`, `delete 1`"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Find | `find KEYWORD`, `find do`"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Help | `help`"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Save | `save`"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "e0425705"
        },
        "content": "Exit | `bye`"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "e0425705"
        },
        "content": "### --- END OF USER GUIDE ---"
      }
    ],
    "authorContributionMap": {
      "e0425705": 489,
      "-": 18
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "D 1 do IP | 8 SEPTEMBER 2019, 1700"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "E 1 study CS2113 | 18 SEPTEMBER 2016, 1500"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "E 0 sleep | 7 AUGUST 2019, 1500"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "D 1 eat | 3 SEPTEMBER 2019, 1500"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "D 0 prepare oral | 9 DECEMBER 2019, 1500"
      }
    ],
    "authorContributionMap": {
      "e0425705": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.Storage.DEFAULT_STORAGE_FILEPATH;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayWelcomeMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.Storage.loadFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.parser.Parser.decideAction;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Initialises the application and starts the interaction with the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Initialises variable */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int INITIALISE \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Runs the program until termination whereby \"bye\" is input by user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayWelcomeMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int listIndex \u003d INITIALISE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        File file \u003d new File(DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        listIndex \u003d loadFile(file, listIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        decideAction(input, listIndex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 39,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayByeMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayCaseEmptyInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayDeadlineError;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayDeleteMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayEventError;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayExceptionMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayFind;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayHelpMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displaySaveMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayStringIndexOutOfBoundsExceptionMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Parser extends Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Accesses the command type input by user */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int COMMAND \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list so that it can be updated in Duke.main."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param input     Full user input string."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws StringIndexOutOfBoundsException When user input has missing or erroneous fields."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws Exception                       When user input is not understood."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int decideAction(Scanner input, int listIndex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String[] givenCommand \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            givenCommand[COMMAND] \u003d parseToLowerCase(givenCommand[COMMAND]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                if (userInput.trim().isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayCaseEmptyInput();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].equals(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayList(listIndex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].equals(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayDone(givenCommand[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].equals(\"todo\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d displayToDo(userInput, listIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d displayDeadlineError(userInput, listIndex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].equals(\"event\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d displayEventError(userInput, listIndex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].trim().equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayByeMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].trim().equals(\"save\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displaySaveMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].trim().equals(\"find\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayFind(userInput, listIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].trim().equals(\"help\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayHelpMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[COMMAND].trim().equals(\"delete\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d displayDeleteMessage(listIndex, givenCommand[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayExceptionMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                displayStringIndexOutOfBoundsExceptionMessage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                displayExceptionMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static String parseToLowerCase(String givenCommand) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        givenCommand \u003d givenCommand.toLowerCase();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return givenCommand;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 85
    }
  },
  {
    "path": "src/main/java/duke/storage/ReadFromFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayIOExceptionMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayReadFromError;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.drawLines;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.printListIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Decodes the duke.storage data file into {@code Task} objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ReadFromFile extends Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Checks if the task is mark as done in duke.storage file */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String DONE \u003d \"1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Checks if the task is not mark as done in duke.storage file */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String NOT_DONE \u003d \"0\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Default indicator of an error */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int ERROR \u003d -1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Checks the task type */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int TASK_TYPE \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Index of where the task done is stored in duke.storage file */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int TASK_DONE \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Start of task description */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int TASK_DESCRIPTION \u003d 4;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Creates a duke.storage file \"duke.txt\" if file does not exist."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Decodes data from duke.storage into {@code Task}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws StringIndexOutOfBoundsException If there is a deviation from allowed data format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws IOException                     If an error occurs when reading from file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int readFromFile(File file, int listIndex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Created new file \" + file.getAbsolutePath());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d readTaskTypeFromFile(listIndex, scanner);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                printListIndex(listIndex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayIOExceptionMessage(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Determines the task type of each line read from duke.storage file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param scanner   Line of data read by scanner from duke.storage file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Number of tasks in duke.storage file added to list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static int readTaskTypeFromFile(int listIndex, Scanner scanner) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String[] savedCommand \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (savedCommand[TASK_TYPE].equals(\"T\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (!(readToDoFromFile(listIndex, userInput, savedCommand) \u003d\u003d ERROR)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (savedCommand[TASK_TYPE].equals(\"E\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (!(readEventFromFile(listIndex, userInput, savedCommand) \u003d\u003d ERROR)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (savedCommand[TASK_TYPE].equals(\"D\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (!(readDeadlineFromFile(listIndex, userInput, savedCommand) \u003d\u003d ERROR)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Reads the individual attributes of {@code Deadline}."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the line read from file has errors, index of list is not updated"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * and that line is not added to list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex    Current index in list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput    Line of data without filtering from file."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param savedCommand UserInput parse into array."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return ListIndex increment by 1 and with task type {@code Deadline} with attributes added to list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static int readDeadlineFromFile(int listIndex, String userInput, String[] savedCommand) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int separationIndexOfDeadline \u003d userInput.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!(savedCommand[TASK_DONE].equals(NOT_DONE)) \u0026\u0026 !(savedCommand[TASK_DONE].equals(DONE))) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (separationIndexOfDeadline \u003d\u003d ERROR) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String byInput \u003d userInput.substring(separationIndexOfDeadline + 1).trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(TASK_DESCRIPTION, separationIndexOfDeadline - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Task inputDescription \u003d new Deadline(userInput, byInput);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.add(inputDescription);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (savedCommand[TASK_DONE].equals(DONE)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(listIndex++).toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Reads the individual attributes of {@code Event}."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the line read from file has errors, index of list is not updated"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * and that line is not added to list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex    Current index in list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput    Line of data without filtering from file."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param savedCommand UserInput parse into array."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return ListIndex increment by 1 and with task type {@code Event} with attributes added to list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static int readEventFromFile(int listIndex, String userInput, String[] savedCommand) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int separationIndexOfEvent \u003d userInput.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!(savedCommand[TASK_DONE].equals(NOT_DONE)) \u0026\u0026 !(savedCommand[TASK_DONE].equals(DONE))) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (separationIndexOfEvent \u003d\u003d ERROR) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String atInput \u003d userInput.substring(separationIndexOfEvent + 1).trim();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(TASK_DESCRIPTION, separationIndexOfEvent - 1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Task inputDescription \u003d new Event(userInput, atInput);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.add(inputDescription);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (savedCommand[TASK_DONE].equals(DONE)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(listIndex++).toString());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Reads the individual attributes of {@code ToDo}."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the line read from file has errors, index of list is not updated"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * and that line is not added to list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex    Current index in list."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput    Line of data without filtering from file."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param savedCommand UserInput parse into array."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return ListIndex increment by 1 and with task type {@code ToDo} with attributes added to list."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static int readToDoFromFile(int listIndex, String userInput, String[] savedCommand) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!(savedCommand[TASK_DONE].equals(NOT_DONE)) \u0026\u0026 !(savedCommand[TASK_DONE].equals(DONE))) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Task inputDescription \u003d new ToDo(userInput);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.add(inputDescription);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (savedCommand[TASK_DONE].equals(DONE)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(listIndex++).toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 195
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.ReadFromFile.readFromFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.WriteToFile.writeToFile;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Deals with loading tasks from duke.storage file and saving tasks to duke.storage file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Default file path used for user */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Accesses method writeToFile()."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void saveFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        writeToFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Accesses method readFromFile."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list so that it can be updated in Duke.main."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int loadFile(File file, int listIndex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        listIndex \u003d readFromFile(file, listIndex);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 35
    }
  },
  {
    "path": "src/main/java/duke/storage/WriteToFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.Storage.DEFAULT_STORAGE_FILEPATH;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.displayWriteToFileException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Encodes the {@code Task} objects into a data file for duke.storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class WriteToFile extends Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Encodes the {@code tasks} into a decodable and readable string representation."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws Exception If an error occurs when writing to file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void writeToFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            FileWriter fw \u003d new FileWriter(DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                fw.write(task.toFileString() + System.lineSeparator());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayWriteToFileException(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Subclass of class Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description Task description input by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param by Date and time of task type {@code Deadline} input by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"D\" + super.toFileString() + \" | \" + by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Subclass of class Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description Task description input by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param at Date and time of task type {@code Event} input by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"E\" + super.toFileString() + \" | \" + at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.ReadFromFile.DONE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.ReadFromFile.NOT_DONE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Represents a Task in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Assumption: description of task is not null."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description Task description input by user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns description of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns corresponding symbol after checking with variable isDone."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Symbol of either a tick or cross."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns String to be printed out in list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return String printed out in list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns String to be written into duke.storage file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return String written to duke.storage file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \" \" + (isDone ? DONE : NOT_DONE) + \" \" + description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 65
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Subclass of class Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description Task description input by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"T\" + super.toFileString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 22
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.ReadFromFile.ERROR;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.drawLines;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.printListIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.ui.Ui.printAddTaskToList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Contains task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * It has operations to add/delete/find tasks in the list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * and to process date and time input by user for task type {@code Deadline} and {@code Event}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class TaskList extends Duke {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Length of the word todo */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int LENGTH_OF_WORD_TODO \u003d 4;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Length of the word event */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int LENGTH_OF_WORD_EVENT \u003d 5;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Length of the word deadline */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int LENGTH_OF_WORD_DEADLINE \u003d 8;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Length of the word line separator /at or /by */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int LENGTH_OF_DATE_TIME_SEPARATOR \u003d 3;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Number of minutes in an hour */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int MINUTES_IN_AN_HOUR \u003d 60;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Midnight in terms of the 24-hours clock */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int MIDNIGHT \u003d 0000;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** The last minute before a new day starts in terms of the 24-hours clock */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int LAST_MINUTE_OF_THE_DAY \u003d 2359;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Displays hundred in integer form */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int HUNDRED \u003d 100;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Adds a space */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Adds a comma */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String COMMA \u003d \", \";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds a ToDO type task to the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput Line that user input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list.."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int addToDo(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(LENGTH_OF_WORD_TODO).trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Task inputDescription \u003d new ToDo(userInput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.add(inputDescription);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        listIndex \u003d printAddTaskToList(listIndex);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds an Event type task to the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the input by user has errors, -1 is returned."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput Line that user input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex if there is no error."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int addEvent(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(LENGTH_OF_WORD_EVENT).trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String dateInput \u003d userInput.substring(byIndex + LENGTH_OF_DATE_TIME_SEPARATOR).trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (processDateTime(dateInput).equals(\"error\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            dateInput \u003d processDateTime(dateInput);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            userInput \u003d userInput.substring(INITIALISE, byIndex - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            Task inputDescription \u003d new Event(userInput, dateInput);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.add(inputDescription);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex \u003d printAddTaskToList(listIndex);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds an Deadline type task to the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the input by user has errors, -1 is returned."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput Line that user input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex if there is no error."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int addDeadline(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(LENGTH_OF_WORD_DEADLINE).trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String dateInput \u003d userInput.substring(byIndex + LENGTH_OF_DATE_TIME_SEPARATOR).trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (processDateTime(dateInput).equals(\"error\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            dateInput \u003d processDateTime(dateInput);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            userInput \u003d userInput.substring(INITIALISE, byIndex - 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            Task inputDescription \u003d new Deadline(userInput, dateInput);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.add(inputDescription);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex \u003d printAddTaskToList(listIndex);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Processes the date and time input by user."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns the conversion of user input in the format e.g. 21 SEPTEMBER 2020, 1600."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the input format has errors, a String \"error\" is returned."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param dateTimeInput Date and time input by user."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Date and time in the format e.g. 21 SEPTEMBER 2020, 1600."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws DateTimeException If format is inaccurate."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static String processDateTime(String dateTimeInput) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int indexOfT \u003d dateTimeInput.indexOf(\u0027t\u0027);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (indexOfT \u003d\u003d ERROR) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String dateInput \u003d dateTimeInput.substring(INITIALISE, indexOfT);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String timeInput \u003d dateTimeInput.substring(++indexOfT);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int time \u003d Integer.parseInt(timeInput);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            LocalDate data \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String day \u003d data.getDayOfMonth() + SPACE;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String month \u003d data.getMonth() + SPACE;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String year \u003d data.getYear() + COMMA;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (time \u003c MIDNIGHT || time \u003e LAST_MINUTE_OF_THE_DAY) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                return \"error\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (time % HUNDRED \u003e MINUTES_IN_AN_HOUR) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                return \"error\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String output \u003d day + month + year + timeInput;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Deletes the task at index deleteListIndex of list."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param removeIndex Index in the list to be deleted."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated index of list value."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int deleteTask(int listIndex, int removeIndex) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(--removeIndex).toString());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.remove(removeIndex);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        printListIndex(--listIndex);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Finds for tasks with description matching to filterString."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param filterString Keyword user wants to find in list of tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Arraylist with tasks containing @param keyword."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static ArrayList\u003cTask\u003e findKeyword(ArrayList\u003cTask\u003e tasksData, String filterString) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTaskList \u003d (ArrayList\u003cTask\u003e) tasksData.stream()"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                .filter((s) -\u003e s.getDescription().contains(filterString))"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return filteredTaskList;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 191
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.ReadFromFile.ERROR;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.tasklist.TaskList.addDeadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.tasklist.TaskList.addEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.tasklist.TaskList.addToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.tasklist.TaskList.deleteTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.storage.Storage.saveFile;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static duke.tasklist.TaskList.findKeyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Ui extends Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Maximum array size */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int MAXIMUM \u003d 100;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Length of the word find */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int LENGTH_OF_WORD_FIND \u003d 4;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Check if variable is singular or plural */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int SINGULAR \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out Duke logo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDuke() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out a line divider."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void drawLines() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"--------------------------------------------------------------------\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"------------------------\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out acknowledgement of adding task to list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int printAddTaskToList(int listIndex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(listIndex++).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        printListIndex(listIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out current number of tasks in list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void printListIndex(int listIndex) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Now you have \" + listIndex + ((listIndex \u003e SINGULAR) ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \" in the list\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out hello message."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void helloMessage() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String hello \u003d \"Hello! I\u0027m Duke.\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"What can I do for you today?\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(hello);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out welcome message to user when program is run."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayDuke();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        helloMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayHelpMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message if input is empty."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayCaseEmptyInput() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out current list of tasks."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayList(int listIndex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Here\" + ((listIndex \u003e SINGULAR) ? \" are\" : \" is\") + \" the\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(((listIndex \u003e SINGULAR) ? \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        for (int j \u003d INITIALISE; j \u003c listIndex; j++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"\\t\" + (j + 1) + \".\" + tasks.get(j).toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when a task is marked as done by user."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param givenCommand Index of task to be marked as done."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDone(String givenCommand) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int taskDone \u003d Integer.parseInt(givenCommand);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.get(taskDone - 1).markAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(taskDone - 1).toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when a {@code ToDo} task is input by user."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput String of user input."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int displayToDo(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (userInput.toLowerCase().trim().equals(\"todo\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex \u003d addToDo(userInput, listIndex);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when a {@code Deadline} task is input by user."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput String of user input."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int displayDeadlineError(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (addDeadline(userInput, listIndex) \u003d\u003d ERROR) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"Sorry I do not understand what you mean!\\n\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    + \"Do bring out help list via the command \u0027help\u0027 for the specific format!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when an {@code Event} task is input by user."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput String of user input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int displayEventError(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (addEvent(userInput, listIndex) \u003d\u003d ERROR) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"Sorry I do not understand what you mean!\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    + \"Do bring out help list via the command \u0027help\u0027 for the specific format!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out bye message and let the user know that the current list has been saved to file."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayByeMessage() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        saveFile();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String bye \u003d \"Bye. It was a pleasure serving you.\\n\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The current list has been saved.\\n\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Hope to see you again soon!\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(bye);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out acknowledgement of saving current list in file."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displaySaveMessage() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        saveFile();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"The current list has been saved.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out index of the task and the respective task description that contain the keyword."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param keyword String that user is looking for in current list."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayFind(String keyword, int listIndex) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        keyword \u003d keyword.substring(LENGTH_OF_WORD_FIND).trim();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int[] indexesOfKeyword \u003d new int[MAXIMUM];"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int indexToSaveKeyword \u003d INITIALISE;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int indexToAccess \u003d INITIALISE;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        for (Task t : findKeyword(tasks, keyword)) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            for (int i \u003d INITIALISE; i \u003c listIndex; i++) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                if (tasks.get(i).equals(t)) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    indexesOfKeyword[indexToSaveKeyword++] \u003d ++i;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"\\t\" + indexesOfKeyword[indexToAccess++] + \".\" + t);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out commands available."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayHelpMessage() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String help \u003d \"Commands available: list, help, done, todo, deadline, event, delete, find, save, bye\\n\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The expected format of input values: \\n\""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tlist - gives the list of data inputted\\n\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\thelp - pulls out the commands available and their input format\\n\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tdone x - x is the index of data that you want to mark as done\\n\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\ttodo x - x is the task description\\n\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tdeadline x /by DATETIME - x is the task description and y is the deadline date and time\\n\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tevent x /at DATETIME - x is the task description and y is the event date and time\\n\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tFormat for DATETIME is YYYY-MM-DDtHHmm, where\\n\""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tYYYY \u003d year, MM \u003d month, DD \u003d day, HH \u003d hour, mm \u003d minute\\n\""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tdelete x - removes the task located at index x of the list\\n\""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tfind x - looks for task description with x included\\n\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tsave - saves the current list\\n\""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tbye - terminates the program\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(help);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out acknowledgement that task at index listIndex is deleted."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param deleteListIndex Index in the list to be deleted."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int displayDeleteMessage(int listIndex, String deleteListIndex) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int removeIndex \u003d Integer.parseInt(deleteListIndex);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (removeIndex \u003e listIndex) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayDeleteErrorMessage();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex \u003d deleteTask(listIndex, removeIndex);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static void displayDeleteErrorMessage() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Sorry the index of task to be remove cannot be found!\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints the error message when StringIndexOutOfBoundsException occurs."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayStringIndexOutOfBoundsExceptionMessage() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"The task you input has missing fields!\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Please do input \u0027help\u0027 for the commands and their respective input format.\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when Exception occurs."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayExceptionMessage() {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String exception \u003d \"Something went wrong!! I do not understand what you mean.\\n\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"There could be an error in the way of input.\\n\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Please do input \u0027help\u0027 for the commands and their respective input format.\";"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(exception);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when IOException occurs."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayIOExceptionMessage(IOException e) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when there is an error in method WriteToFile."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayWriteToFileException(Exception e) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when there is an error in method ReadFromFile."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayReadFromError() {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"An error has occurred here!\\n\""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Do check file source if there is a corruption of data!\");"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 322
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "deadline sleeping /by monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "event slept /at tuesday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "e0425705": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "e0425705": 2,
      "-": 19
    }
  }
]
