[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "2. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   2.1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   2.2. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   2.3. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "3. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   3.1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   3.2. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   3.3. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "4. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Hello! I\u0027m Duke."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   What can I do for you today?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Commands available: list, help, done, todo, deadline, event, delete, find, save, bye"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   The expected format of input values: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tlist - gives the list of data inputted"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \thelp - this pulls out the commands available"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tdone x - x is the index of data that you want to mark as done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \ttodo x - x is the task description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tdeadline x /by DATETIME - x is the task description and y is the deadline date and time"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tevent x /at DATETIME - x is the task description and y is the event date and time"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t\tFormat for DATETIME is YYYY-MM-DDtHHmm, where"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t\tY \u003d year, M \u003d month, D \u003d day, H \u003d hour, m \u003d minute"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tdelete x - removes the task located at index x of the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tfind y - looks for task description with y included"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tsave - this saves the current list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tbye - this terminates the program"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Created new file C:\\Users\\PUAH\\Desktop\\ceg\\CS2113T\\IP\\duke.txt"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   4.1 This implies that a file name duke.txt has been created as a storage file, with path C:\\Users\\PUAH\\Desktop\\ceg\\CS2113T\\IP\\duke.txt. This file will only be created once. After that, a list of the task that you have saved in duke.txt would be shown. It will look something like this:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t[T][✘] example1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t[E][✘] example2 (at: 24 SEPTEMBER 2020, 2057)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t[D][✘] example3 (by: 24 SEPTEMBER 2020, 2100)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   4.3 The \"Commands available\" gives help list to first time users. If you forget what are the commands available and their format, it can be pulled out once again with the command \"help\"."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "5. There are only 3 types of tasks input available to users. ToDo, Event and Deadline. More task types will be released in version 2."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "6. This section will run through how to input commands and the format acceptable."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.1 By inputting \"list\", it puts out the list of tasks input by user. It looks something like this:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Here are the tasks in the list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t1.[T][✘] example1"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t2.[E][✘] example2 (at: 24 SEPTEMBER 2020, 2057)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t3.[D][✘] example3 (by: 24 SEPTEMBER 2020, 2100)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.2 By inputting \"help\", this prints the commands available. It looks something like this:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Commands available: list, help, done, todo, deadline, event, delete, find, save, bye"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   The expected format of input values: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tlist - gives the list of data inputted"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \thelp - this pulls out the commands available"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tdone x - x is the index of data that you want to mark as done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \ttodo x - x is the task description"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tdeadline x /by DATETIME - x is the task description and y is the deadline date and time"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tevent x /at DATETIME - x is the task description and y is the event date and time"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t\tFormat for DATETIME is YYYY-MM-DDtHHmm, where"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t\tY \u003d year, M \u003d month, D \u003d day, H \u003d hour, m \u003d minute"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tdelete x - removes the task located at index x of the list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tfind y - looks for task description with y included"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tsave - this saves the current list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \tbye - this terminates the program"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   This help list is the same as the one printed out when you first run the program."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.3 By inputting \"done x\", this marks the task at x in the list as done. An example is:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t[T][✓] example1"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   In this case, I have inputted \"done 1\". The task at list index 1, example1 is marked as done as indicated by the tick(✓)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.4 By inputting \"todo x\", "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t[T][✘] something"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Now you have 4 tasks in the list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.5 By inputting \"deadline x by y\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t[D][✘] this thing (by: 8 SEPTEMBER 2019, 1700)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.6 By inputting \"event x by y\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t[E][✘] that thing (at: 18 SEPTEMBER 2016, 1500)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Now you have 6 tasks in the list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.7 By inputting \"delete x\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t[T][✘] something"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.8 By inputting \"find x\", this "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t1.[T][✓] example1"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t2.[E][✘] example2 (at: 24 SEPTEMBER 2020, 2057)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   \t3.[D][✘] example3 (by: 24 SEPTEMBER 2020, 2100)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.9 By inputting \"save\", this saves the current list into file duke.txt. If the file has been successfully saved, the following would be printed out:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   The current list has been saved."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.10 By inputting \"bye\", this saves the current list into file duke.txt and exits the program. If the file has been successfully saved and exited, the following would be printed out:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Bye. It was a pleasure serving you."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   The current list has been saved."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   Hope to see you again soon!"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   --------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "   6.11 Note that the list is not auto-saved to file duke.txt unless command \"save\" or \"bye\" is given."
      }
    ],
    "authorContributionMap": {
      "e0425705": 116,
      "-": 14
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "T 1 example1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "E 0 example2 | 24 SEPTEMBER 2020, 2057"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "D 0 example3 | 24 SEPTEMBER 2020, 2100"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "D 0 this thing | 8 SEPTEMBER 2019, 1700"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "E 1 that thing | 18 SEPTEMBER 2016, 1500"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "T 0 bye"
      }
    ],
    "authorContributionMap": {
      "e0425705": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static storage.Storage.DEFAULT_STORAGE_FILEPATH;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayWelcomeMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static storage.Storage.loadFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static parser.Parser.decideAction;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Runs the program until termination whereby \"bye\" is input by user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayWelcomeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        // Current number of tasks in list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        File file \u003d new File(DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        listIndex \u003d loadFile(file, listIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        decideAction(input, listIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 37,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Subclass of class Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description Task description input by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param by Date and time of task type {@code Deadline} input by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"D\" + super.toFileString() + \" | \" + by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Subclass of class Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description Task description input by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param at Date and time of task type {@code Event} input by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"E\" + super.toFileString() + \" | \" + at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Represents a Task in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Assumption: description of task is not null."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description Task description input by user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns corresponding icon after checking"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * with @param isDone."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns String to be printed out in list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns String to be written into storage file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \" \" + (isDone ? 1 : 0) + \" \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 55
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Subclass of class Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param description Task description input by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return \"T\" + super.toFileString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 22
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayByeMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayCaseEmptyInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayDeadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayDeleteMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayExceptionMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayFind;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayHelpMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displaySaveMessage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayStringIndexOutOfBoundsExceptionMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Parser extends Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param input full user input string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws StringIndexOutOfBoundsException When user input has missing or erroneous fields."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws Exception When user input is not understood."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int decideAction(Scanner input, int listIndex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String[] givenCommand \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            givenCommand[0] \u003d parseToLowerCase(givenCommand[0]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                if (userInput.trim().isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayCaseEmptyInput();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayList(listIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayDone(givenCommand[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d displayToDo(userInput, listIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d displayDeadline(userInput, listIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d displayEvent(userInput, listIndex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].trim().equals(\"bye\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayByeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].trim().equals(\"save\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displaySaveMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].trim().equals(\"find\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayFind(userInput, listIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].trim().equals(\"help\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayHelpMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else if (givenCommand[0].trim().equals(\"delete\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d displayDeleteMessage(listIndex, givenCommand[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    displayExceptionMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                displayStringIndexOutOfBoundsExceptionMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                displayExceptionMessage();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static String parseToLowerCase(String givenCommand) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        givenCommand \u003d givenCommand.toLowerCase();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return givenCommand;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 80
    }
  },
  {
    "path": "src/main/java/storage/ReadFromFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayIOExceptionMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayReadFromError;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.drawLines;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.printListIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Decodes the storage data file into {@code Task} objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class ReadFromFile extends Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String DONE \u003d \"1\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String NOTDONE \u003d \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final int ERROR \u003d -1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Creates a storage file \"duke.txt\" if file does not exist."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Decodes data from storage into {@code Task}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws StringIndexOutOfBoundsException If there is a deviation from allowed data format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws IOException                     If an error occurs when reading from file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int readFromFile(File file, int listIndex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                System.out.println(\"Created new file \" + file.getAbsolutePath());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    listIndex \u003d readTaskTypeFromFile(listIndex, scanner);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                printListIndex(listIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                drawLines();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayIOExceptionMessage(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Determines the task type of each line read from storage file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param scanner Line of data read by scanner from storage file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Number of tasks in storage file added to list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static int readTaskTypeFromFile(int listIndex, Scanner scanner) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String[] savedCommand \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (savedCommand[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (!(readToDoFromFile(listIndex, userInput, savedCommand) \u003d\u003d ERROR)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (savedCommand[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (!(readEventFromFile(listIndex, userInput, savedCommand) \u003d\u003d ERROR)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (savedCommand[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (!(readDeadlineFromFile(listIndex, userInput, savedCommand) \u003d\u003d ERROR)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Reads the individual attributes of {@code Deadline}."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the line read from file has errors, index of list is not updated"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * and that line is not added to list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex    Current index in list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput    Line of data without filtering from file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param savedCommand UserInput parse into array."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return ListIndex increment by 1 and with task type {@code Deadline} with attributes added to list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static int readDeadlineFromFile(int listIndex, String userInput, String[] savedCommand) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int separationIndexOfDeadline \u003d userInput.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!(savedCommand[1].equals(NOTDONE)) \u0026\u0026 !(savedCommand[1].equals(DONE))) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (separationIndexOfDeadline \u003d\u003d -1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String byInput \u003d userInput.substring(separationIndexOfDeadline + 1).trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(4, separationIndexOfDeadline - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Task inputDescription \u003d new Deadline(userInput, byInput);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.add(inputDescription);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (savedCommand[1].equals(DONE)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(listIndex++).toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Reads the individual attributes of {@code Event}."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the line read from file has errors, index of list is not updated"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * and that line is not added to list."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex    Current index in list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput    Line of data without filtering from file."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param savedCommand UserInput parse into array."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return ListIndex increment by 1 and with task type {@code Event} with attributes added to list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static int readEventFromFile(int listIndex, String userInput, String[] savedCommand) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int separationIndexOfEvent \u003d userInput.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!(savedCommand[1].equals(NOTDONE)) \u0026\u0026 !(savedCommand[1].equals(DONE))) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else if (separationIndexOfEvent \u003d\u003d -1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String atInput \u003d userInput.substring(separationIndexOfEvent + 1).trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(4, separationIndexOfEvent - 1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Task inputDescription \u003d new Event(userInput, atInput);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.add(inputDescription);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (savedCommand[1].equals(DONE)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(listIndex++).toString());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Reads the individual attributes of {@code ToDo}."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the line read from file has errors, index of list is not updated"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * and that line is not added to list."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex    Current index in list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput    Line of data without filtering from file."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param savedCommand UserInput parse into array."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return ListIndex increment by 1 and with task type {@code ToDo} with attributes added to list."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    private static int readToDoFromFile(int listIndex, String userInput, String[] savedCommand) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (!(savedCommand[1].equals(NOTDONE)) \u0026\u0026 !(savedCommand[1].equals(DONE))) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayReadFromError();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return ERROR;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(4);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Task inputDescription \u003d new ToDo(userInput);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.add(inputDescription);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (savedCommand[1].equals(DONE)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.get(listIndex).markAsDone();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(listIndex++).toString());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 171
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static storage.ReadFromFile.readFromFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static storage.WriteToFile.writeToFile;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Deals with loading tasks from storage file and saving tasks in storage file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /** Default file path used for user */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Accesses method writeToFile()."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void saveFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        writeToFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Accesses method readFromFile."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list so that it can be updated in Duke.main."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int loadFile(File file, int listIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        listIndex \u003d readFromFile(file, listIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 36
    }
  },
  {
    "path": "src/main/java/storage/WriteToFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static storage.Storage.DEFAULT_STORAGE_FILEPATH;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.displayWriteToFileException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Encodes the {@code Task} objects into a data file for storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class WriteToFile extends Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Encodes the {@code tasks} into a decodable and readable string representation."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws Exception If an error occurs when writing to file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void writeToFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            FileWriter fw \u003d new FileWriter(DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                fw.write(task.toFileString() + System.lineSeparator());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            displayWriteToFileException(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 31
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.drawLines;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.printListIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static ui.Ui.printOutput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Contains task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": " *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * It has operations to add/delete/find tasks in the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * and to process date and time input by user for task type {@code Deadline} and {@code Event}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class TaskList extends Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds a ToDO type task to the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput Line that user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list.."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int addToDo(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(4).trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        Task inputDescription \u003d new ToDo(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.add(inputDescription);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        listIndex \u003d printOutput(listIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds an Event type task to the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the input by user has errors, -1 is returned."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput Line that user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex if there is no error."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int addEvent(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(5).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String dateInput \u003d userInput.substring(byIndex + 3).trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (processDateTime(dateInput).equals(\"error\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            dateInput \u003d processDateTime(dateInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            userInput \u003d userInput.substring(0, byIndex - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            Task inputDescription \u003d new Event(userInput, dateInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.add(inputDescription);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex \u003d printOutput(listIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Adds an Deadline type task to the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns updated index of list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the input by user has errors, -1 is returned."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param userInput Line that user input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Number of tasks in list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated listIndex if there is no error."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int addDeadline(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        userInput \u003d userInput.substring(8).trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int byIndex \u003d userInput.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String dateInput \u003d userInput.substring(byIndex + 3).trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (processDateTime(dateInput).equals(\"error\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            dateInput \u003d processDateTime(dateInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            userInput \u003d userInput.substring(0, byIndex - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            Task inputDescription \u003d new Deadline(userInput, dateInput);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            tasks.add(inputDescription);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex \u003d printOutput(listIndex);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Processes the date and time input by user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Returns the conversion of user input in the format e.g. 21 SEPTEMBER 2020, 1600."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * If the input format has errors, a String \"error\" is returned."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param dateTimeInput Date and time input by user."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Date and time in the format e.g. 21 SEPTEMBER 2020, 1600."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @throws DateTimeException If format is inaccurate."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static String processDateTime(String dateTimeInput) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int indexOfT \u003d dateTimeInput.indexOf(\u0027t\u0027);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (indexOfT \u003d\u003d -1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String dateInput \u003d dateTimeInput.substring(0, indexOfT);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String timeInput \u003d dateTimeInput.substring(indexOfT + 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int time \u003d Integer.parseInt(timeInput);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            LocalDate data \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String day \u003d data.getDayOfMonth() + \" \";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String month \u003d data.getMonth() + \" \";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String year \u003d data.getYear() + \", \";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            if (time \u003c 0000 || time \u003e 2400) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                return \"error\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            } else if (time%100 \u003e 60) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                return \"error\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            String output \u003d day + month + year + timeInput;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Deletes the task at index deleteListIndex of list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param deleteListIndex Index in the list to be deleted."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param listIndex Current number of tasks in list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Updated index of list value."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int deleteTask(int listIndex, String deleteListIndex) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int removeIndex \u003d Integer.parseInt(deleteListIndex);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(--removeIndex).toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.remove(removeIndex);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        printListIndex(--listIndex);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Finds for tasks with description matching to filterString."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param filterString Keyword user wants to find in list of tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @return Arraylist with tasks containing @param keyword."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static ArrayList\u003cTask\u003e findKeyword(ArrayList\u003cTask\u003e tasksData, String filterString) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTaskList \u003d (ArrayList\u003cTask\u003e) tasksData.stream()"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                .filter((s) -\u003e s.getDescription().contains(filterString))"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return filteredTaskList;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 164
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static tasklist.TaskList.addDeadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static tasklist.TaskList.addEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static tasklist.TaskList.addToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static tasklist.TaskList.deleteTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static storage.Storage.saveFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0425705"
        },
        "content": "import static tasklist.TaskList.findKeyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0425705"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0425705"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0425705"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "public class Ui extends Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out Duke logo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDuke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out a line divider."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void drawLines() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"--------------------------------------------------------------------\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"------------------------\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out acknowledgement of adding task to list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int printOutput(int listIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(listIndex++).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        printListIndex(listIndex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out current number of tasks in list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void printListIndex(int listIndex) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Now you have \" + listIndex + ((listIndex \u003e 1) ? \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out hello message."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void helloMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String hello \u003d \"Hello! I\u0027m Duke.\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"What can I do for you today?\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(hello);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out welcome message to user when program is run."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayWelcomeMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayDuke();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        helloMessage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        displayHelpMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out error message if input is empty."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayCaseEmptyInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"The description cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out current list of tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayList(int listIndex) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.print(\"Here\" + ((listIndex \u003e 1) ? \" are\" : \" is\") + \" the\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(((listIndex \u003e 1) ? \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        for (int j \u003d 0; j \u003c listIndex; j++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"\\t\" + (j + 1) + \".\" + tasks.get(j).toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when a task is marked as done by user."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayDone(String givenCommand) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int taskDone \u003d Integer.parseInt(givenCommand);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        tasks.get(taskDone - 1).markAsDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"\\t\" + tasks.get(taskDone - 1).toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when a {@code ToDo} task is input by user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int displayToDo(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (userInput.toLowerCase().trim().equals(\"todo\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex \u003d addToDo(userInput, listIndex);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when a {@code Deadline} task is input by user."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int displayDeadline(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (addDeadline(userInput, listIndex) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"error in date-time input!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"The allowed input for date and time is YYYY-MM-DDtHH:MM\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out message when an {@code Event} task is input by user."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int displayEvent(String userInput, int listIndex) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        if (addEvent(userInput, listIndex) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"error in date-time input!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"The allowed input for date and time is YYYY-MM-DDtHHmm\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            drawLines();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out bye message and let the user know that the current list has been saved to file."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayByeMessage() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        saveFile();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String bye \u003d \"Bye. It was a pleasure serving you.\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The current list has been saved.\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Hope to see you again soon!\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(bye);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out acknowledgement of saving current list in file."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displaySaveMessage() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        saveFile();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"The current list has been saved.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out tasks that contains the keyword."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param keyword String that user is looking for in current list."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayFind(String keyword, int listIndex) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        keyword \u003d keyword.substring(4).trim();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int[] indexesOfKeyword \u003d new int[20];"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int indexToSaveKeyword \u003d 0;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        int indexToAccess \u003d 0;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        for (Task t : findKeyword(tasks, keyword)) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            for (int i \u003d 0; i \u003c listIndex; i++) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                if (tasks.get(i).equals(t)) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                    indexesOfKeyword[indexToSaveKeyword++] \u003d ++i;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0425705"
        },
        "content": "            System.out.println(\"\\t\" + indexesOfKeyword[indexToAccess++] + \".\" + t);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out commands available."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayHelpMessage() {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String help \u003d \"Commands available: list, help, done, todo, deadline, event, delete, find, save, bye\\n\""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"The expected format of input values: \\n\""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tlist - gives the list of data inputted\\n\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\thelp - this pulls out the commands available\\n\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tdone x - x is the index of data that you want to mark as done\\n\""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\ttodo x - x is the task description\\n\""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tdeadline x /by DATETIME - x is the task description and y is the deadline date and time\\n\""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tevent x /at DATETIME - x is the task description and y is the event date and time\\n\""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tFormat for DATETIME is YYYY-MM-DDtHHmm, where\\n\""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\t\\tY \u003d year, M \u003d month, D \u003d day, H \u003d hour, m \u003d minute\\n\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tdelete x - removes the task located at index x of the list\\n\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tfind y - looks for task description with y included\\n\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tsave - this saves the current list\\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"\\tbye - this terminates the program\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(help);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints out acknowledgement that task at index listIndex is deleted."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     *"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * @param deleteListIndex Index in the list to be deleted."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static int displayDeleteMessage(int listIndex, String deleteListIndex) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        listIndex \u003d deleteTask(listIndex, deleteListIndex);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        return listIndex;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints the error message when StringIndexOutOfBoundsException occurs."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayStringIndexOutOfBoundsExceptionMessage() {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"The task you input has missing fields!\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Please do input \u0027help\u0027 for the commands and their respective input format.\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when Exception occurs."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayExceptionMessage() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        String exception \u003d \"Something went wrong!! I do not understand what you mean.\\n\""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"There could be an error in the way of input.\\n\""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Please do input \u0027help\u0027 for the commands and their respective input format.\";"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(exception);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when IOException occurs."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayIOExceptionMessage(IOException e) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when there is an error in method WriteToFile."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayWriteToFileException(Exception e) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "e0425705"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     * Prints error message when there is an error in method ReadFromFile."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "e0425705"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    public static void displayReadFromError() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        System.out.println(\"An error has occurred here!\\n\""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "e0425705"
        },
        "content": "                + \"Do check file source if there is a corruption of data!\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "e0425705"
        },
        "content": "        drawLines();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "e0425705"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "e0425705"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0425705": 285
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0425705"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0425705"
        },
        "content": "deadline sleeping /by monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0425705"
        },
        "content": "event slept /at tuesday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0425705"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "e0425705": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0425705"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0425705"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "e0425705": 2,
      "-": 19
    }
  }
]
