[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Welcome to Duke!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Accessed conveniently via your PC\u0027s **Command Line Interface (CLI)**, Duke is your very own personal dashboard featuring to-dos, deadlines, events, and more."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Get focused, be productive, and do your best work today with Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Viewing help: `help`](#viewing-help-help)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Adding a todo task: `todo`](#adding-a-todo-task-todo)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Adding an event task: `event`](#adding-an-event-task-event)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Adding a deadline task: `deadline`](#adding-a-deadline-task-deadline)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Viewing all tasks: `list`](#viewing-all-tasks-list)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Marking a task as done: `done`](#marking-a-task-as-done-done)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Looking for a task: `find`](#looking-for-a-task-find)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Looking for all tasks on a date: `schedule`](#looking-for-all-tasks-on-a-date-schedule)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Deleting a task: `delete`](#deleting-a-task-delete)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Clearing all tasks: `clear`](#clearing-all-tasks-clear)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Exiting the program: `bye`](#exiting-the-program-bye)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  * [Saving your data](#saving-your-data)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* [FAQs](#faqs)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "1. Ensure that you have installed Java `11`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "2. Download the latest `ip.jar` [here](https://github.com/dorianfong98/ip/releases/tag/v1.0)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "3. Copy the jar file to any location/folder on your computer.\\"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "(Note that when you first run `ip.jar`, a file to save your data, `Duke.txt`, will be created in the same directory"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "as `ip.jar`)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "4. Open a new *terminal* window and navigate to the same directory where your `ip.jar` is located."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "5. Enter the following command into the *terminal* window to launch the application:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    ````"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    java -jar ip.jar"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    ````"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    You will be greeted with a welcome screen from Duke on successful launch."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    ![Start up screen image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/startscreen.png)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    *(Note that a new save file is created if no previous save file exists in the same directory as `ip.jar`)*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "6. Type a command into the *terminal* window and press Enter to execute it. e.g. typing `help` and pressing Enter will display a list of available commands"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    Some examples of commands that you can try:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    * `help`: Displays a list of all available commands."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    * `todo Print notes`: Adds a todo task with its description, `Print notes`, to your current task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    * `event Coffee Date /at Starbucks 2020-11-09`: Adds an event with description `Coffee Date (At: Starbucks Nov 9 2020)` "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    to the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    * `list`: Lists all available tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    * `delete 1`: Deletes 1st task shown in list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    * `bye`: Exits the program."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "7. Refer to the [Features](#features) section below for further details of each command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Notes about the command format:**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* **Words in `UPPER_CASE` are the parameters to be supplied by the user.**\\"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "e.g in `todo TASK_DESCRIPTION`, `TASK_DESCRIPTION` is a parameter which can be used as `todo Prepare for test`."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* **Items bounded by square brackets are optional.**\\"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "e.g. `/by ADDITIONAL_INFORMATION [DATE]` can be used as `/by next Mon 2020-12-25` or `/by next Mon`."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* **Dates can be inputted in any order.**\\"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "But ensure that you use the **required `YYYY-MM-DD` format** when inputting dates, and that they are placed after `/by` or `/at` tags."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Viewing help: `help`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Displays all available commands on the terminal.\\"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![Help command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/help.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Adding a todo task: `todo`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Adds a todo task to the task list without any additional information.\\"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `todo TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Examples:**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `todo Email Thomas` Adds a todo task `Email Thomas` to the task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `todo Attempt CG2027 Assignment` Adds another todo task `Attempt CG2027 Assignment` to the task list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Adding an event task: `event`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Adds an event task to the task list with additional timing information.\\"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `event TASK_DESCRIPTION /at ADDITIONAL_INFORMATION [DATE]`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Both the `TASK_DESCRIPTION` and `ADDITIONAL_INFORMATION` *(or optional `DATE`)* fields must be present."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* If `DATE` is provided, it must be in the format of `YYYY-MM-DD` for the field to be detected as a date. Else,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "it will be saved as part of the description."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Examples:**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `event CS2113T Team meeting /at 8pm tonight` "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Adds event `CS2113T Team meeting (At: 8pm tognight)` to the task list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `event ACC1701X tutorial  /at 10.30-11.30am, 2020-11-05` "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Adds another event `ACC1701X tutorial (At: 10.30-11.30am, Nov 5 2020)` to the task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![Event command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/event.png)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Adds a deadline task to the task list with additional timing information.\\"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `deadline TASK_DESCRIPTION /by ADDITIONAL_INFORMATION [DATE]`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Similar to [event](#adding-an-event-task-event)."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Both the `TASK_DESCRIPTION` and `ADDITIONAL_INFORMATION` *(or optional `DATE`)* fields must be present."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* If `DATE` is provided, it must be in the format of `YYYY-MM-DD` for the field to be detected as a date. Else,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "it will be saved as part of the description."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Examples:**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `deadline Complete assignment /by This weekend` "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Adds deadline `Complete assignment (By: This weekend)` to the task list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `deadline Pay NUS school fees /by 2020-10-31` "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Adds deadline `Pay NUS school fees (By: Oct 31 2020)`."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![Deadline command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/deadline.png)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Viewing all tasks: `list`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Displays all available tasks on the task list.\\"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![list command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/list.png)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Marking a task as done: `done`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Marks a specified task as done.\\"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Sets the task as done at the specified `INDEX`."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* The index refers to the index number shown in the displayed task [list](#viewing-all-tasks-list)."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* The index **must be a positive integer** e.g 1, 2, 3, ..."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Example:**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `done 3` marks the third task on the `list` as done. Good job! :)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![Done command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/done.png)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Looking for a task: `find`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Finds all tasks in the task list that contain the given keywords.\\"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `find KEYWORD [MORE_KEYWORDS]`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* The search is **case-sensitive**: `books` will **not** match `Books`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* The search will **follow the order of the search terms**: `email prof` will **not** match `prof email`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Only tasks containing **all keywords** in the **correct order** will be returned."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Only **full words** will be matched: `Song` will not match `Songs`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Only the description is searched."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Examples:**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `find read notes` "
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "returns `read notes (By: Tomorrow morning)` and `read notes for ACC1701X`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![Find command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/find.png)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Looking for all tasks on a date: `schedule`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Finds all tasks in the task list that fall on a particular date.\\"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `schedule DATE`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* The given date must be in the format of `YYYY-MM-DD`."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Only tasks created with a valid date will be returned: Tasks with the dates found only in their description"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "will not be returned."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Only the dates saved and linked to the task will be searched."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Examples:**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `schedule 2020-11-01` "
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "returns `Bro\u0027s ORD date (At: Nov 1 2020)` and `Prepare for presentation (By: Nov 1 2020)`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![Schedule command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/schedule.png)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Deletes the specified task from the task list.\\"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* Deletes the task at the specified `INDEX`."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* The index refers to the index number shown in the displayed task [list](#viewing-all-tasks-list)."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* The index **must be a positive integer** e.g 1, 2, 3, ..."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Examples:**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `delete 1` "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "deletes the first task from `list`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![Delete1 command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/delete1.png)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "* `delete 3` "
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "deletes the third task from `list`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![Delete3 command image](https://raw.githubusercontent.com/dorianfong98/ip/master/docs/images/delete3.png)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Clearing all tasks: `clear`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Clears all entries from the task list.\\"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Exits Duke.\\"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Saving your data"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "All data entered into Duke is saved onto the hard disk automatically after any command that changes the data. Hence, there is"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "no need to manually save the data. When no save file is detected on startup, the program will automatically create "
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "a new save file."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "## FAQs"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Q:** Why does the `schedule` command not work? Why doesn\u0027t it return the task that falls on the date I\u0027m searching for?"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**A:** Check that for the task in question, you had inputted the date in the required format of `YYYY-MM-DD`, after "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "the `/at` identifier for `event` command and `/by` for `deadline` command. If successful, the input date in the "
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "`YYYY-MM-DD` format will be automatically reformatted into a `MMM-DD-YYYY` format.\\"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "*e.g `2020-10-09` will be reformatted into `Oct 09 2020` in the task description.*"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "\\"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Q:** Why am I receiving an ArrayOutOfBounds Error when Duke ran fine the last time I ran it?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**A:** This is most likely due to an improper exit of the program the previous session (not using the `bye` command). "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Try deleting the existing Duke.txt file in the directory of your `ip.jar` or overwriting the existing Duke.txt file with a new blank Duke.txt file and executing `java -jar ip.jar` in your terminal again. "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "If you require any further technical assistance with Duke, or have any queries regarding Duke, feel free to contact the developer at [dorianfong@u.nus.edu](mailto:dorianfong@u.nus.edu). "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Command | Formatting, Examples"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "--------|-----------------"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Help**|`help`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Todo**|`todo TASK_DESCRIPTION` e.g.,`todo Read lecture notes`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Event**|`event TASK_DESCRIPTION /at ADDITIONAL_INFORMATION [DATE]` e.g.,`event Team meeting /at 8pm tonight`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Deadline**|`deadline TASK_DESCRIPTION /by ADDITIONAL_INFORMATION [DATE]` e.g.,`deadline Pay school fees /by 2020-10-31`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**List**|`list`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Done**|`done INDEX` e.g., `done 2`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Find**|`find KEYWORD [MORE_KEYWORDS]` e.g.,`find notes`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Schedule**|`schedule DATE` e.g.,`schedule 2020-12-04`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Delete**|`delete INDEX` e.g.,`delete 2`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Clear**|`clear`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "**Bye**|`bye`"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 248,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * Duke is a CLI chatbot to help you manage your tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Identifiers and values"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DEADLINE_IDENTIFIER \u003d \"/by\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EVENT_IDENTIFIER \u003d \"/at\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_TASK_MARKED \u003d \"Nice! I\u0027ve marked the task as done!:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_TASK_DELETED \u003d \"Noted. I\u0027ve removed this task from the list:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Exception Messages"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_INVALID_COMMAND \u003d \"I do not know what that means ;-;, please try again!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    private Parser parse;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        parse \u003d new Parser();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            tasks \u003d new TaskList(storage.readFileContents());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String[] splitUserInput;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String details;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        boolean isFinished \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ui.printStartupSequence();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Loop infinitely until user enters \"bye\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        while (!isFinished) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            userInput \u003d ui.readUserCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            splitUserInput \u003d parse.divideUserCommand(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            command \u003d parse.determineCommand(splitUserInput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    ui.showHelpMenu();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    isFinished \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    ui.printTaskList(tasks.getTaskList());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    details \u003d tasks.setTaskAsDone(splitUserInput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    ui.printSetDeleteConfirmMessage(MESSAGE_TASK_MARKED, details);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    details \u003d tasks.deleteTask(splitUserInput);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    ui.printSetDeleteConfirmMessage(MESSAGE_TASK_DELETED, details);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.addTodoTask(userInput);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    ui.printTaskAddedConfirmation(tasks.getTaskList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.addNewTimedEvent(userInput, COMMAND_DEADLINE, DEADLINE_IDENTIFIER);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    ui.printTaskAddedConfirmation(tasks.getTaskList());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.addNewTimedEvent(userInput, COMMAND_EVENT, EVENT_IDENTIFIER);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    ui.printTaskAddedConfirmation(tasks.getTaskList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    storage.writeToFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"schedule\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.getSchedule(splitUserInput);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.findTask(userInput);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    throw new DukeException(EXCEPTION_INVALID_COMMAND);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                ui.showDukeError(e.getErrorMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                ui.showInvalidNumberError();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                ui.showInvalidInputError();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                ui.showFileSaveError();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ui.printClosingSequence();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 121
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The Parser class handles text parsing for Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Exception messages"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_EMPTY_FIELD \u003d \"Oops!You have to enter a task number. Please try again!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_TIMEDEVENT_INTRO \u003d \"Oops! \\nThe \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_TIMEDEVENT_BODY \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            \" command requires both description and time information in the format of: \\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_TIMEDEVENT_DESCRIPTION \u003d \"[description] \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_TIMEDEVENT_TIMEINFO \u003d \" [time information]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String BLANK_SPACE \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String WHITESPACE_IDENTIFIER \u003d \" \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String HYPHEN_IDENTIFIER \u003d \"-\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final int DATE_FORMAT_SIZE \u003d 3;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DATE_FORMAT \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Removes the command passed into the method and replaces it with white space"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params userInput  Original string typed by user and to be modified"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params commandToRemove  Command to be removed from string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static String removeCommandFromInput(String userInput, String commandToRemove) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String modifiedUserInput \u003d userInput.replace(commandToRemove, BLANK_SPACE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return modifiedUserInput.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Returns a string array with the task\u0027s description and additional information"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params userInput Original string typed by user and to be modified"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params commandToRemove  Command to be removed from string"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params identifier  Identifier token to split the string with"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static String[] determineTaskInformation(String userInput, String commandToRemove, String identifier) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String modifiedString \u003d removeCommandFromInput(userInput, commandToRemove);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return modifiedString.split(identifier);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Checks for invalid command and throws DukeException."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param splitUserInput Original user typed string split by whitespace."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @throws DukeException Thrown when invalid inut length."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void checkForValidInput(String[] splitUserInput) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (splitUserInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(EXCEPTION_EMPTY_FIELD);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Validates arguments for events with time descriptions."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param informationStrings Arguments split by whitespaces."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param eventIdentifier Identifier to distinguish events and deadlines."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void checkForValidFieldEntered(String[] informationStrings, String command, String eventIdentifier)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        boolean fieldsArePresent \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check if both fields have been fulfilled"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (String information : informationStrings) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (information.equals(BLANK_SPACE)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                fieldsArePresent \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check for valid information"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (informationStrings.length \u003c 2 || !fieldsArePresent) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String exceptionMessage \u003d EXCEPTION_TIMEDEVENT_INTRO + command +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    EXCEPTION_TIMEDEVENT_BODY +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    EXCEPTION_TIMEDEVENT_DESCRIPTION + eventIdentifier + EXCEPTION_TIMEDEVENT_TIMEINFO;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(exceptionMessage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Returns an arraylist containing the information to replace the date in the original string."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param timeInformation The original field entered by the user after the task identifier."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static ArrayList\u003cString\u003e determineDateInformation(String timeInformation) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String[] splitTimeInformation \u003d timeInformation.split(WHITESPACE_IDENTIFIER);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ArrayList\u003cString\u003e replacementStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check if substring contains 2 \u0027-\u0027 to try to parse into date information"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (String stringInformation : splitTimeInformation) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (stringInformation.contains(HYPHEN_IDENTIFIER)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                if (checkForValidDateFormat(stringInformation)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                        replacementStrings \u003d formatDateInformation(stringInformation);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                        Ui.showInvalidDateFormatError();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return replacementStrings;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Formats date object into specified format and returns both original and formatted strings."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param stringInformation Date information in string form."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static ArrayList\u003cString\u003e formatDateInformation(String stringInformation) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        LocalDate taskDate;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ArrayList\u003cString\u003e replacementStrings \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        replacementStrings.add(stringInformation);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        taskDate \u003d LocalDate.parse(stringInformation);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String formattedDate \u003d taskDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        replacementStrings.add(formattedDate);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return replacementStrings;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /** Returns true when string contains 3 members separated by 2 hyphens */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static boolean checkForValidDateFormat(String stringInformation) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String[] splitDate \u003d stringInformation.split(HYPHEN_IDENTIFIER);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check for empty fields"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (String subString : splitDate) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (subString.equals(BLANK_SPACE)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check for only 3 inputs"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return splitDate.length \u003d\u003d DATE_FORMAT_SIZE;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /** Splits string by white space and returns array of strings */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String[] divideUserCommand(String userInput) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return userInput.split(WHITESPACE_IDENTIFIER);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Returns the command, the first element, from the user input"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param splitUserInput"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String determineCommand(String[] splitUserInput) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return splitUserInput[0];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 159
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The Storage class handles all file reading and writing operations for Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //File Path and other constants"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String SAVE_DELIMITER \u003d \"--\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String FILE_MESSAGE_CREATED_SUCCESS \u003d \"Save file successfully created!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String FILE_MESSAGE_NO_SAVE_DETECTED \u003d \"No previous saves detected! Creating save file...\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String TODO_ICON \u003d \"[T]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DEADLINE_ICON \u003d \"[D]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EVENT_ICON \u003d \"[E]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String BLANK_STRING \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Recreates tasks array by reading data from file. If no file available, create new file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public ArrayList\u003cTask\u003e readFileContents() throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Read from file if exists, else create new directory and files"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (saveFile.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            //Re-create task objects in the array"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String taskInformation \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String[] taskComponents \u003d taskInformation.split(SAVE_DELIMITER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String taskIcon \u003d taskComponents[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String taskStatus \u003d taskComponents[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String taskDescription \u003d taskComponents[2];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String taskTimingInformation;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String taskDate;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                switch (taskIcon) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case TODO_ICON:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    taskList.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case DEADLINE_ICON:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    taskTimingInformation \u003d taskComponents[3];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    taskDate \u003d taskComponents[4];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    taskList.add(new Deadline(taskDescription, taskTimingInformation, taskDate));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case EVENT_ICON:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    taskTimingInformation \u003d taskComponents[3];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    taskDate \u003d taskComponents[4];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    taskList.add(new Event(taskDescription, taskTimingInformation, taskDate));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                //Set status of task to done if required"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                if (Integer.parseInt(taskStatus) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    taskList.get(taskList.size() - 1).setAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            //No existing file detected. Create new save file"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(FILE_MESSAGE_NO_SAVE_DETECTED);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            boolean fileCreated \u003d saveFile.createNewFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (fileCreated) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(FILE_MESSAGE_CREATED_SUCCESS);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Writes data from the tasks array onto a file, so that data can be saved"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param tasks ArrayList of tasks to be written onto the file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Clearing file before writing"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        FileWriter fwClear \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        fwClear.write(BLANK_STRING);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        fwClear.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Append information into file"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            int taskStatus;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            //Determine status to write to file based on task status"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (task.getStatus()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                taskStatus \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                taskStatus \u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            //Create text string to write so save file"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String taskToSave \u003d task.getTaskIcon() + \" | \" + taskStatus + \" | \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + task.getDescription() + \" | \" + task.getTimingInformation() + \" | \""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + task.getDate() +System.lineSeparator();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            fileWriter.write(taskToSave);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 113
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * This TaskList class manages the features of the individual tasks of the taskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String BLANK_SPACE \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_EMPTY_TODO \u003d \"Oh no! The description of the todo cannot be empty ;-;\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DATE \u003d \"Oh no! The please enter a date in YYYY-MM-DD format!\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_EMPTY_SEARCHTERM \u003d \"Oh no! The search term cannot be empty!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DEFAULT_DATE \u003d \"9999-12-31\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DATE_FORMAT \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String COMMAND_SCHEDULE \u003d \"schedule\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Adds user input into the task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params userInput  Original input by user"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void addTodoTask(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String taskDescription \u003d Parser.removeCommandFromInput(userInput, COMMAND_TODO);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check for exception where user input for task is empty"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (taskDescription.equals(BLANK_SPACE)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(EXCEPTION_EMPTY_TODO);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        taskList.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void findTask(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String searchTerm \u003d Parser.removeCommandFromInput(userInput, COMMAND_FIND);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check for exception where user input for task is empty"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (searchTerm.equals(BLANK_SPACE)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(EXCEPTION_EMPTY_SEARCHTERM);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Filter for tasks with searchterm using stream"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ArrayList\u003cTask\u003e searchResults \u003d (ArrayList\u003cTask\u003e) taskList.stream()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                .filter((s) -\u003e s.toString().contains(searchTerm))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        Ui.printSearchResults(searchResults, searchTerm);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Adds new timed event tasks such as events or deadlines into the task list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params userInput  Original input by user"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params command  The command entered - Either event or deadline"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params eventIdentifier  Identifier to determine string information - Either /at or /by"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void addNewTimedEvent(String userInput, String command, String eventIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String additionalInformation;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String unformattedDate \u003d DEFAULT_DATE;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ArrayList\u003cString\u003e dateInformation;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String[] informationStrings \u003d Parser.determineTaskInformation(userInput, command, eventIdentifier);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        Parser.checkForValidFieldEntered(informationStrings, command, eventIdentifier);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Set variables"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        description \u003d informationStrings[0].trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        additionalInformation \u003d informationStrings[1].trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        dateInformation \u003d Parser.determineDateInformation(additionalInformation);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (dateInformation.size() \u003d\u003d 2) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            unformattedDate \u003d dateInformation.get(0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String formattedDate \u003d dateInformation.get(1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            additionalInformation \u003d additionalInformation.replace(unformattedDate, formattedDate);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Create new task objects"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            taskList.add(new Event(description, additionalInformation, unformattedDate));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            taskList.add(new Deadline(description, additionalInformation, unformattedDate));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void getSchedule(String[] splitUserInput) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            LocalDate selectedDate \u003d LocalDate.parse(splitUserInput[1]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String inputDate \u003d selectedDate.toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String formattedDate \u003d selectedDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            ArrayList\u003cTask\u003e tasksOnDay \u003d (ArrayList\u003cTask\u003e) taskList.stream()"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    .filter((s) -\u003e s.getDate().equals(inputDate))"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    .collect(toList());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            Ui.printScheduleForDay(tasksOnDay, formattedDate);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            Ui.showInvalidDateFormatError();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Sets isDone of selected task to true"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params splitUserInput Array of strings after original user input has been split by whitespace"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String setTaskAsDone (String[] splitUserInput) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        Parser.checkForValidInput(splitUserInput);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitUserInput[1]) - 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String markedItemDetails;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        taskList.get(taskNumber).setAsDone();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        markedItemDetails \u003d taskList.get(taskNumber).toString();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return markedItemDetails;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Removes task from the tasks ArrayList"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param splitUserInput Array of strings after original user input has been split by whitespace"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String deleteTask (String[]splitUserInput) throws DukeException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        Parser.checkForValidInput(splitUserInput);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskToDelete \u003d Integer.parseInt(splitUserInput[1]) - 1;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String deleteItemDetails \u003d taskList.get(taskToDelete).toString();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        taskList.remove(taskToDelete);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return deleteItemDetails;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 163
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * This UI class manages the user interface and the messages being printed to the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //ASCII art"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String BYE_ART \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            \"$$$$$$$\\\\ $$\\\\     $$\\\\ $$$$$$$$\\\\ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$  __$$\\\\\\\\$$\\\\   $$  |$$  _____|\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$ |  $$ |\\\\$$\\\\ $$  / $$ |      \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$$$$$$\\\\ | \\\\$$$$  /  $$$$$\\\\    \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$  __$$\\\\   \\\\$$  /   $$  __|   \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$ |  $$ |   $$ |    $$ |      \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$$$$$$  |   $$ |    $$$$$$$$\\\\ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"\\\\_______/    \\\\__|    \\\\________|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DUKE_ART \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            \"$$$$$$$\\\\            $$\\\\                 \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$  __$$\\\\           $$ |                \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$ |  $$ |$$\\\\   $$\\\\ $$ |  $$\\\\  $$$$$$\\\\  \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$ |  $$ |$$ |  $$ |$$ | $$  |$$  __$$\\\\ \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$ |  $$ |$$ |  $$ |$$$$$$  / $$$$$$$$ |\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$ |  $$ |$$ |  $$ |$$  _$$\u003c  $$   ____|\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"$$$$$$$  |\\\\$$$$$$  |$$ | \\\\$$\\\\ \\\\$$$$$$$\\\\ \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            + \"\\\\_______/  \\\\______/ \\\\__|  \\\\__| \\\\_______|\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //General UI messages"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_TASK_ADDED_CONFIRM \u003d \" Got it, I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_WELCOME_TO \u003d \"Welcome to\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INTRO_GREETING \u003d \" Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INTRO_DUKE_QUERY \u003d \" What can I do for you?\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_CLOSING \u003d \" Hope to see you again soon!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_DOUBLE_WHITESPACE \u003d \"   \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_LINE_SEPARATOR \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            \"______________________________________________________________________________\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_NOW_YOU_HAVE \u003d \" Now you have \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_IN_THE_LIST \u003d \" in the list.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_ERROR_TASK_UNAVAILABLE \u003d \"There are no tasks available for now. Add a task to continue.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_TASKS_IN_LIST \u003d \" Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Exception error messages"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_FILE_ERROR \u003d \"Oops! Something went wrong while creating a save file!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_INVALID_TASK_NUMBER \u003d \"Invalid task number entered... Please try again!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_DONE_EXPECTED_INTEGER \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            \"I\u0027m sorry, I don\u0027t understand that! Please enter a number instead.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_FILE_WRITE_ERROR \u003d \"Oops, something went wrong while saving!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_INVALID_DATE_FORMAT \u003d \"Please enter date in this format:\\n[YYYY-MM-DD]\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /** Prints separator component after text is printed */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printSeparator() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_LINE_SEPARATOR);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String HELP_MENU \u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    \"Welcome to the help menu!\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"The following commands are available for Duke:\\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"Note:\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \" * Words in UPPER_CASE are the parameters to be supplied by the user\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \" * Items in square brackets are optional, e.g [DATE]\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"List of Available Commands:\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"help ---------------------------------------- Displays all available commands\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"todo DESCRIPTION ------------------------------------------- Adds a todo task\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"event DESCRIPTION /at DESCRIPTION [DATE] ----------------- Adds an event task\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"deadline DESCRIPTION /by DESCRIPTION [DATE ------------- Adds a deadline task\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"list --------------------------------------- Displays all the tasks in a list\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"find KEYWORD [KEYWORDS] ------------ Returns the tasks containing the keyword\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"schedule DATE ----------------------- Returns the tasks that fall on the date\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"delete INDEX ------------------------ Deletes task at specified index of list\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"clear --------------------------------------------- Deletes all current tasks\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"bye ------------------------------------------------------- Exits the program\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + System.lineSeparator()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + \"For more details, visit: https://dorianfong98.github.io/ip/\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /** Prints startup greet sequence */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void printStartupSequence() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_WELCOME_TO + DUKE_ART);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_INTRO_GREETING);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_INTRO_DUKE_QUERY);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /** Prints closing sequence */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void printClosingSequence() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(BYE_ART);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_CLOSING);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Prints the help menu"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void showHelpMenu() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(HELP_MENU);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /** Reads user command and returns command */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String readUserCommand() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Prints the confirmation messages for setTaskAsDone and deleteTask"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param message  The header message to inform the user whether action is set or delete"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param itemDetails  Details of the item that was set or deleted"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void printSetDeleteConfirmMessage(String message, String itemDetails) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\" \" + itemDetails);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Print confirmation text when a new task is added"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params tasks  Array of current stored tasks"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params taskCount  Current count of tasks stored"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void printTaskAddedConfirmation(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_TASK_ADDED_CONFIRM);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_DOUBLE_WHITESPACE + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_NOW_YOU_HAVE + tasks.size() + MESSAGE_IN_THE_LIST);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Print list of tasks when user requests"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params tasks  Array of current stored tasks"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void printTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(MESSAGE_ERROR_TASK_UNAVAILABLE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_TASKS_IN_LIST);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(\" \" + taskNumber + \".\" + task);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            taskNumber++;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printScheduleForDay(ArrayList\u003cTask\u003e tasksOnDay, String formattedDate) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskCount \u003d 1;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\"Hi! You have the following events on \" + formattedDate + \":\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (Task task : tasksOnDay) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String taskNumber \u003d \" \" + taskCount + \". \";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(taskNumber + task.toString());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printSearchResults(ArrayList\u003cTask\u003e searchResults, String searchTerm) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskCount \u003d 1;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\"Here are your search results for: \" + searchTerm);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (Task task : searchResults) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String taskNumber \u003d \" \" + taskCount + \". \";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(taskNumber + task.toString());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            taskCount++;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(EXCEPTION_FILE_ERROR);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void showDukeError(String errorMessage) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void showInvalidNumberError() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(EXCEPTION_INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void showInvalidInputError() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(EXCEPTION_DONE_EXPECTED_INTEGER);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void showFileSaveError() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(EXCEPTION_FILE_WRITE_ERROR);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void showInvalidDateFormatError() {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(EXCEPTION_INVALID_DATE_FORMAT);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 207
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * Exception class for exceptions specific to duke.duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 18
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The duke.tasks.Deadline class inherits from the duke.tasks.Task class and is used to create deadline objects"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DEADLINE_ICON \u003d \"[D]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INFO_START \u003d \" (By: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INFO_END \u003d \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Deadline(String description, String by, String date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return DEADLINE_ICON;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTimingInformation() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return DEADLINE_ICON + super.toString() + MESSAGE_INFO_START + by + MESSAGE_INFO_END;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The duke.tasks.Event class inherits from the duke.tasks.Task class and is used to create event objects"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EVENT_ICON \u003d \"[E]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INFO_START \u003d \" (At: \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INFO_END \u003d \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Event(String description, String at, String date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return EVENT_ICON;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTimingInformation() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return EVENT_ICON + super.toString() + MESSAGE_INFO_START + at + MESSAGE_INFO_END;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 39
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The duke.tasks.Task class provides a template for the duke.tasks.Task object where description and status is stored"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String TICK_ICON \u003d \"Y\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String CROSS_ICON \u003d \"N\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return (isDone ? TICK_ICON : CROSS_ICON);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public abstract String getTaskIcon();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public abstract String getTimingInformation();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public abstract String getDate();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 45
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The duke.tasks.Todo class inherits from the duke.tasks.Task class and is used to create todo objects"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String TODO_ICON \u003d \"[T]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String TIME_INFO \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DEFAULT_DATE \u003d \"9999-12-31\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.date \u003d LocalDate.parse(DEFAULT_DATE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return TODO_ICON;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTimingInformation() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return TIME_INFO;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return date.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return TODO_ICON + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 1,
      "-": 20
    }
  }
]
