[
  {
    "path": "Desktop/fruits.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "adas"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "some changes"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 2
    }
  },
  {
    "path": "Downloads/CS2113T/ip/CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Display | Name | Github Profile | Homepage"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "---|:---:|:---:|:---:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 9
    }
  },
  {
    "path": "Downloads/CS2113T/ip/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# walter project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/walter.java` file, right-click it, and choose `Run walter.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 26
    }
  },
  {
    "path": "Downloads/CS2113T/ip/docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Description of feature."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "### `Keyword` - Describe action"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "`outcome`"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 20
    }
  },
  {
    "path": "Downloads/CS2113T/ip/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "[E] | 0 | CS2113 lecture--Friday 18 September 2020 from 4 pm to 6 pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 2
    }
  },
  {
    "path": "Downloads/CS2113T/ip/src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * Duke is a chat bot which can help the user do multiple tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Identifiers and values"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DEADLINE_IDENTIFIER \u003d \"/by\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EVENT_IDENTIFIER \u003d \"/at\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String WHITESPACE_IDENTIFIER \u003d \" \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String BLANK_SPACE \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //File Path and other constants"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String FILE_PATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String SAVE_DELIMITER \u003d \"--\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String FILE_MESSAGE_CREATED_SUCCESS \u003d \"Save file creation successful!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String FILE_MESSAGE_NO_SAVE_DETECTED \u003d \"No previous saves detected! Creating save file...\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Printed Messages"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_DOUBLE_WHITESPACE \u003d \"   \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_LINE_SEPARATOR \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            \"______________________________________________________________________________\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_NOW_YOU_HAVE \u003d \" Now you have \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_IN_THE_LIST \u003d \" in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_ERROR_TASK_UNAVAILABLE \u003d \"No tasks to complete for now. Add a task to begin.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_TASKS_IN_LIST \u003d \" Here are the tasks in your list: \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_TASK_MARKED \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_TASK_DELETED \u003d \"Noted. I\u0027ve removed this task:  \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_TASK_ADDED_CONFIRM \u003d \" Got it, I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INTRO_GREETING \u003d \" Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INTRO_DUKE_QUERY \u003d \" What can I do for you?\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_CLOSING \u003d \" Bye. Hope to see you again soon! :)\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Exception Messages"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_INVALID_COMMAND \u003d \"I don\u0027t know what that means, please try again!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_EMPTY_TODO \u003d \"Description of a todo cannot be empty!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_INVALID_TASK_NUMBER \u003d \"Invalid task number entered... Please try again!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DONE \u003d \"You have to enter a task number! Please try again!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_TIMEDEVENT \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            \"The command requires both description and time information in the format of: \\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_TIMEDEVENT_DESCRIPTION \u003d \"[description] \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_TIMEDEVENT_TIMEINFO \u003d \" [time information]\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_DONE_EXPECTED_INTEGER \u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            \"I\u0027m sorry, I don\u0027t understand that. Please enter a number instead!\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_FILE_ERROR \u003d \"Oops! something went wrong while creating a save file\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EXCEPTION_FILE_WRITE_ERROR \u003d \"Oops! something went wrong while saving!\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String TODO_ICON \u003d \"[T]\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DEADLINE_ICON \u003d \"[D]\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EVENT_ICON \u003d \"[E]\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /** Prints separator component after text is printed */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printSeparator() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_LINE_SEPARATOR);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Prints startup greet sequence"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printStartupSequence() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_INTRO_GREETING);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_INTRO_DUKE_QUERY);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Prints closing sequence"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printClosingSequence() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_CLOSING);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Removes the command passed into the method and replaces it with white space"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params userInput  Original string typed by user and to be modified"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params commandToRemove  Command to be removed from string"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static String removeCommandFromInput(String userInput, String commandToRemove) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String modifiedUserInput \u003d userInput.replace(commandToRemove, BLANK_SPACE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return modifiedUserInput.trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Returns a string array with the task\u0027s description and additional information"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params userInput Original string typed by user and to be modified"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params commandToRemove  Command to be removed from string"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params identifier  Identifier token to split the string with"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static String[] getTaskInfo(String userInput, String commandToRemove, String identifier) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String modifiedString \u003d removeCommandFromInput(userInput, commandToRemove);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return modifiedString.split(identifier);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Adds user input into the task list"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params tasks  Array of current stored tasks"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params userInput  Original input by user"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params taskCount  Current count of tasks stored"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void addTodoTask(ArrayList\u003cTask\u003e tasks, String userInput) throws DukeException, IOException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String taskDescription \u003d removeCommandFromInput(userInput, COMMAND_TODO);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check for exception where user input for task is empty"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (taskDescription.equals(BLANK_SPACE)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(EXCEPTION_EMPTY_TODO);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        tasks.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        writeToFile(tasks);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Adds new timed event tasks such as events or deadlines into the task list"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params tasks  Array of current stored tasks"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params userInput  Original input by user"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params taskCount  Current count of tasks stored"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params command  The command entered - Either event or deadline"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params eventIdentifier  Identifier to determine string information - Either /at or /by"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void addNewTimedEvent(ArrayList\u003cTask\u003e tasks, String userInput, String command,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String eventIdentifier) throws DukeException, IOException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String timeInformation;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        boolean fieldsArePresent \u003d true;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String[] informationStrings \u003d getTaskInfo(userInput, command, eventIdentifier);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check if both fields have been fulfilled"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (String information : informationStrings) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (information.equals(BLANK_SPACE)) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                fieldsArePresent \u003d false;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check if additional information was given"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (informationStrings.length \u003c 2 || !fieldsArePresent) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String exceptionMessage \u003d command +"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    EXCEPTION_TIMEDEVENT +"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    EXCEPTION_TIMEDEVENT_DESCRIPTION + eventIdentifier + EXCEPTION_TIMEDEVENT_TIMEINFO;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(exceptionMessage);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Set variables"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        description \u003d informationStrings[0].trim();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        timeInformation \u003d informationStrings[1].trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Create new task objects"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            tasks.add(new Event(description, timeInformation));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            tasks.add(new Deadline(description, timeInformation));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        writeToFile(tasks);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Print confirmation text when a new task is added"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params tasks  Array of current stored tasks"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params taskCount  Current count of tasks stored"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printTaskAddedConfirmation(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_TASK_ADDED_CONFIRM);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_DOUBLE_WHITESPACE + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_NOW_YOU_HAVE + tasks.size() + MESSAGE_IN_THE_LIST);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Print list of tasks when user requests"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params tasks  Array of current stored tasks"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(MESSAGE_ERROR_TASK_UNAVAILABLE);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(MESSAGE_TASKS_IN_LIST);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(\" \" + taskNumber + \".\" + task);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            taskNumber++;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Checks for invalid command and throws DukeException"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void checkForValidInput(String[] splitUserInput) throws DukeException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (splitUserInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(EXCEPTION_EMPTY_DONE);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Sets isDone of selected task to true"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params tasks  Array of current stored tasks"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params splitUserInput  Array of strings after original user input has been split by whitespace"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @params taskCount  Current count of tasks stored"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void setTaskAsDone(ArrayList\u003cTask\u003e tasks, String[] splitUserInput)"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throws DukeException, IOException {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        checkForValidInput(splitUserInput);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (splitUserInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(EXCEPTION_EMPTY_DONE);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitUserInput[1]) - 1;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String markedItemDetails;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //TaskNumber is valid"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        tasks.get(taskNumber).setAsDone();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        markedItemDetails \u003d tasks.get(taskNumber).toString();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSetOrDeleteConfirmation(MESSAGE_TASK_MARKED, markedItemDetails);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        writeToFile(tasks);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Removes task from the tasks ArrayList"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param tasks  Array of current stored tasks"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param splitUserInput  Array of strings after original user input has been split by whitespace"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] splitUserInput) throws DukeException, IOException {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        checkForValidInput(splitUserInput);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskToDelete \u003d Integer.parseInt(splitUserInput[1]) - 1;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String deleteItemDetails \u003d tasks.get(taskToDelete).toString();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //TaskNumber is valid"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        tasks.remove(taskToDelete);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSetOrDeleteConfirmation(MESSAGE_TASK_DELETED, deleteItemDetails);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        writeToFile(tasks);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Prints the confirmation messages for setTaskAsDone and deleteTask"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param message  The initial message to inform the user whether they are setting or deleting"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param itemDetails  Details of the item that was set or deleted"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printSetOrDeleteConfirmation(String message, String itemDetails) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\" \" + itemDetails);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Writes data from the tasks array onto a file, so that data can be saved"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * @param tasks  ArrayList of tasks to be written onto the file"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Clearing file before writing"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        FileWriter fwClear \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        fwClear.write(\"\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        fwClear.close();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Append information into file"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH, true);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            int taskStatus;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            //Determine status to write to file based on task status"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (task.getStatus()) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                taskStatus \u003d 1;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                taskStatus \u003d 0;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String taskToSave \u003d task.getTaskIcon() + \" | \" + taskStatus + \" | \""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    + task.getDescription() + SAVE_DELIMITER + task.getTimingInformation() + System.lineSeparator();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            fw.write(taskToSave);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     * Recreates tasks array by reading data from file. If no file is available, create new file"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void readFileContents(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Read from file if exists, else create new directory and files"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            //Re-create task objects in the array"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String taskInformation \u003d s.nextLine();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                String[] taskComponents \u003d taskInformation.split(SAVE_DELIMITER);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                switch (taskComponents[0]) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case TODO_ICON:"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.add(new Todo(taskComponents[2]));"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case DEADLINE_ICON:"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.add(new Deadline(taskComponents[2], taskComponents[3]));"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case EVENT_ICON:"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.add(new Event(taskComponents[2], taskComponents[3]));"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                //Set status of task to done if required"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                if (Integer.parseInt(taskComponents[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    tasks.get(tasks.size() - 1).setAsDone();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            //No existing file detected. Create new save file"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(FILE_MESSAGE_NO_SAVE_DETECTED);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            boolean fileCreated \u003d f.createNewFile();"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (fileCreated) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(FILE_MESSAGE_CREATED_SUCCESS);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Initialise variables"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String[] splitUserInput;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        boolean isFinished \u003d true;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Print startup sequence"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printStartupSequence();"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Read information from saved files"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            readFileContents(tasks);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(EXCEPTION_FILE_ERROR);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Loop infinitely until user enters \"bye\""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        while (isFinished) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            splitUserInput \u003d userInput.split(WHITESPACE_IDENTIFIER);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                switch (splitUserInput[0]) {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    isFinished \u003d false;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    printTaskList(tasks);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    setTaskAsDone(tasks, splitUserInput);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    deleteTask(tasks, splitUserInput);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    addTodoTask(tasks, userInput);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    printTaskAddedConfirmation(tasks);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    addNewTimedEvent(tasks, userInput, COMMAND_DEADLINE, DEADLINE_IDENTIFIER);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    printTaskAddedConfirmation(tasks);"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    addNewTimedEvent(tasks, userInput, COMMAND_EVENT, EVENT_IDENTIFIER);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    printTaskAddedConfirmation(tasks);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    //Throw exception for invalid command - Break statement unreachable"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    throw new DukeException(EXCEPTION_INVALID_COMMAND);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                //Catch exceptions and print error messages unique to Duke"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(e.getErrorMessage());"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                //Catch exceptions when index given is out of bounds or invalid"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(EXCEPTION_INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                //Catch exception when string is given for a field which requires number"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(EXCEPTION_DONE_EXPECTED_INTEGER);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(EXCEPTION_FILE_WRITE_ERROR);"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Print closing sequence"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printClosingSequence();"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 425
    }
  },
  {
    "path": "Downloads/CS2113T/ip/src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * Exception class for exceptions specific to duke.duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 18
    }
  },
  {
    "path": "Downloads/CS2113T/ip/src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The duke.tasks.Deadline class inherits from the duke.tasks.Task class and is used to create deadline objects"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String DEADLINE_ICON \u003d \"[D]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INFO_START \u003d \" (By: \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INFO_END \u003d \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return DEADLINE_ICON;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTimingInformation() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return DEADLINE_ICON + super.toString() + MESSAGE_INFO_START + by + MESSAGE_INFO_END;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 29
    }
  },
  {
    "path": "Downloads/CS2113T/ip/src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The duke.tasks.Event class inherits from the duke.tasks.Task class and is used to create event objects"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String EVENT_ICON \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INFO_START \u003d \" (At: \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String MESSAGE_INFO_END \u003d \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return EVENT_ICON;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTimingInformation() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return EVENT_ICON + super.toString() + MESSAGE_INFO_START + at + MESSAGE_INFO_END;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 31
    }
  },
  {
    "path": "Downloads/CS2113T/ip/src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The duke.tasks.Task class provides a template for the duke.tasks.Task object where description and status is stored"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return (isDone ? TICK_ICON : CROSS_ICON);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public abstract String getTaskIcon();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public abstract String getTimingInformation();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 43
    }
  },
  {
    "path": "Downloads/CS2113T/ip/src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The duke.tasks.Todo class inherits from the duke.tasks.Task class and is used to create todo objects"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String TODO_ICON \u003d \"[T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static final String TIME_INFO \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return TODO_ICON;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getTimingInformation() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return TIME_INFO;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return TODO_ICON + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 27
    }
  },
  {
    "path": "Downloads/CS2113T/ip/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 9
    }
  },
  {
    "path": "Downloads/CS2113T/ip/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 21
    }
  },
  {
    "path": "Downloads/CS2113T/ip/text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 38
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * Duke is a CLI chatbot for managing and tracking tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * Currently, there are 3 types of tasks Duke can handle:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * 1. ToDos: tasks without any date/time attached to it e.g., visit new theme park"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * 2. Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * 3. Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Prints separator line"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printSeparator() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\"______________________________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    // Removes command from userInput and replaces it with a blank space"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static String removeCommandFromInput(String userInput, String commandToRemove) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String modifiedUserInput \u003d userInput.replace(commandToRemove, \"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return modifiedUserInput.trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Returns an array with the task\u0027s description and additional information"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static String[] getTaskInfo(String userInput, String commandToRemove, String identifier) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String modifiedString \u003d removeCommandFromInput(userInput, commandToRemove);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return modifiedString.split(identifier);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //adds new todo task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void addTodoTask(ArrayList\u003cTask\u003e tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String taskDescription \u003d removeCommandFromInput(userInput, \"todo\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check for exception where user input for task is empty"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (taskDescription.equals(\"\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        tasks.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //adds new timed event, i.e. Deadline or Event"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void addNewTimedEvent(ArrayList\u003cTask\u003e tasks, String userInput, String command,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                                        String eventIdentifier) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String timeInformation;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        boolean fieldsFilled \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String[] informationStrings \u003d getTaskInfo(userInput, command, eventIdentifier);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check if both fields have been fulfilled"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (String information : informationStrings) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            if (information.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                fieldsFilled \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Check if additional information was given"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (informationStrings.length \u003c 2 || !fieldsFilled) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            String exceptionMessage \u003d \"☹ OOPS!!! The \" + command +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    \" command requires both description and time information in the format of: \\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    \"[description] \" + eventIdentifier + \" [time]\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(exceptionMessage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Set variables"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        description \u003d informationStrings[0].trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        timeInformation \u003d informationStrings[1].trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Create new task objects"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            tasks.add(new Event(description, timeInformation));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            tasks.add(new Deadline(description, timeInformation));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Prints a confirmation message once a new task is added successfully"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printTaskAddedConfirmation(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\"  \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Prints a list of tasks upon request"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(\"No tasks available! Add a task to continue.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            System.out.println(\" \" + taskNumber + \".\" + task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            taskNumber++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //checks input validity, throws DukeException otherwise"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void checkInputValidity(String[] splitInput) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please enter a task number!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void deleteTask(ArrayList\u003cTask\u003e tasks, String[] splitInput) throws DukeException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        checkInputValidity(splitInput);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskToDelete \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String deleteItemDetails \u003d tasks.get(taskToDelete).toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //TaskNumber is valid"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        tasks.remove(taskToDelete);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSetOrDeleteConfirmation(\"Noted. I\u0027ve removed this task from the list:\", deleteItemDetails);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void setTaskAsDone(ArrayList\u003cTask\u003e tasks, String[] splitInput) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        checkInputValidity(splitInput);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String markedItemDetails;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //TaskNumber is valid"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        tasks.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        markedItemDetails \u003d tasks.get(taskNumber).toString();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSetOrDeleteConfirmation(\"Nice! I\u0027ve marked this task as done: \", markedItemDetails);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void printSetOrDeleteConfirmation(String message, String itemDetails) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\" \" + itemDetails);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Variable declarations"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        String[] splitInput;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        boolean isFinished \u003d true;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\"Hello from\\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        //Loops infinitely until user inputs \"bye\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        while (isFinished) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            splitInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                switch (splitInput[0]) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    isFinished \u003d false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    printTaskList(tasks);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    setTaskAsDone(tasks, splitInput);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    deleteTask(tasks, splitInput);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    addTodoTask(tasks, userInput);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    printTaskAddedConfirmation(tasks);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    addNewTimedEvent(tasks, userInput, \"deadline\", \"/by\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    printTaskAddedConfirmation(tasks);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    addNewTimedEvent(tasks, userInput, \"event\", \"/at\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    printTaskAddedConfirmation(tasks);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    //Throw exception for invalid command - Break statement unreachable"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                    throw new DukeException(\"Invalid Command! Try again.\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                //Catch exceptions and print error messages unique to Duke"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(e.getErrorMessage());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                //Catch exceptions when index given is out of bounds or invalid"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(\"Invalid task number! Try again.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                //Catch exception when string is given for a field which requires number"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 220
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * Exceptions specific to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 17
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The Deadline class inherits from the Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * E.g. of input: deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * E.g. of output: [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 22
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The Event class inherits from the Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * E.g. of input: event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * E.g. of output:[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return \"[E]\" + super.toString() + \" (At: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The Task class provides a reference for more specific types of Task objects, and stores description and status."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Returns symbol corresponding to completion status of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    //Sets isDone to true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 34
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * The Todo class inherits from the Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * E.g. of input: todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " * E.g. of output: [T][✓] join sport club"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dorianfong98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dorianfong98": 19
    }
  }
]
