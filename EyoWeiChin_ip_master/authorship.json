[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "2. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   i. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   ii. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   iii. Click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "3. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   i. Click `Open or Import`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   ii. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   iii. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "4. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Error: Save file not found! New file created!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Hello! I\u0027m Duke!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 31,
      "-": 9
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Duke is a flexible command line application that is useful for managing tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "1. Ensure you have Java 11 installed on your computer."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "2. Download the latest `ip.jar`."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "3. Move the jar file to the folder that will be used as the working directory for this application."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "4. Run the following command to execute the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "5. Here are some sample commands to get you started."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "6. Refer to Usage or Command Summary section for more details."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Task Manager"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Manages different types of tasks, allows creation, completion and deletion of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Search tools"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Includes various features that will aid in finding tasks by specific names or due dates."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Persistent Task list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "All tasks and changes will be saved to a local file. Future use of Duke will load from this save file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Listing all Tasks `list`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "This will list all task that the user has added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Expected Outcome:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "1: [D][✗] return book (by:June 6th)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "2: [E][✗] project meeting (at:Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "3: [T][✓] join sports club"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Adding a Todo task `todo`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "This will add a Todo task to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: `todo task_name`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Sample Input: `todo new task`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "The expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "+ [T][✗] new task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "You a total of tasks remaining: 25"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Adding a Deadline task `deadline`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "This will add a deadline task to the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "1. `deadline task_name /by due_by`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "2. `deadline task_name /by YYYY-MM-DD HHmm`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Notes: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- Format \u00272\u0027 allows Duke to find this deadline with `due` command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- Format \u00271\u0027 allows user to store any string, but will be non-searchable by \u0027due\u0027."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Sample Input: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "1. `deadline CS2105 Assignment 1/by Wednesday`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "2. `deadline Finish this userguide/by2020-9-20 1450`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "The expected outcome:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "+ [D][✗] CS2105 Assignment 1 (by: Wednesday!)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "You a total of tasks remaining: 26"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "+ [D][✗] Finish this userguide (by:20/Sep/2020 02:50 PM)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "You a total of tasks remaining: 27"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Adding an Event task `event`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "This will add an event task to the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "1. `event task_name /at due_date`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "2. `event task_name /at YYYY-MM-DD HHmm`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Notes: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- Format 2 allows Duke to find this deadline with `due` command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- Format \u00271\u0027 allows user to store any string, but will be non-searchable by \u0027due\u0027."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Sample Input: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "1. `event Meet my friends!(jk I have no friends)/at Never apparently :|`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "2. `event CS2113T tP meeting/at2020-09-25 2000`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "The expected outcome:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "+ [E][✗] Meet my friends!(jk I have no friends) (at: Never apparently :|)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "You a total of tasks remaining: 28"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "+ [E][✗] CS2113T tP meeting (at:25/Sep/2020 08:00 PM)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "You a total of tasks remaining: 29"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Completing a Task `done`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "This will mark a task as completed."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: `done task_id`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Notes:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- task_id refers to the index number displayed when the command \u0027list\u0027 is used."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- task_id field must be a positive integer."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Sample Input: `done 32`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "The expected outcome:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "\u0027Meet my friends!(jk I have no friends)\u0027"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "marked as completed, well done!"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "You a total of tasks remaining: 28"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Deleting a Task `delete`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "This will remove a task from the task list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: `delete task_id`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Notes:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- task_id refers to the index number displayed when the command \u0027list\u0027 is used."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- task_id field must be a positive integer."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Sample Input: `delete 32`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "The expected outcome:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Noted! I have removed the task:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "[E][✓] Meet my friends!(jk I have no friends) (at: Never apparently :()"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Find by Keyword `find`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Searches and prints all tasks that has the search string in the task name."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: `find search_term`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Sample Input: `find meeting`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "The expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "[E][✗] project meeting (at:Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "[E][✗] project meeting 2 (at:Mon 2-4pm)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "[E][✗] CS2113T tP meeting (at:25/Sep/2020 08:00 PM)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Find by Due Date `due`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Searches and prints all tasks that has the specified due date."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: `due search_date`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Notes:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "- The \u0027search_date\u0027 must be in the following format \u0027YYYY-MM-DD\u0027."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Sample Input: `due 2020-9-25`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "The expected outcome:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "[E][✗] CS2113T tP meeting (at:25/Sep/2020 08:00 PM)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "[D][✗] Enjoy mandatory break (by:25/Sep/2020 10:00 PM)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "### Exiting the program `bye`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Terminates the program and exits gracefully."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Sample Input: `bye`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "The expected outcome:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Bye! Hope to see you again soon!"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Q: Why do I keep getting \"Error: Please provide more information\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "A: This error message indicates that you did not provide enough information for the command to work on."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "You can refer to the sample input for more information."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "Q: Where does Duke store my save file?"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "A: It will create a data/duke.txt in the working directory that Duke was called from."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "|Feature|Command|"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "|---    |---|"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| List all Tasks                | `list` |"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| Add a Todo task               | `todo task_name` |"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| Add a Deadline task           | `deadline task_name /by due_by` \u003cbr\u003e `deadline task_name /by YYYY-MM-DD` |"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| Add an Event task             | `event task_name /at due_date` \u003cbr\u003e `event task_name /at YYYY-MM-DD`    |"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| Mark a task as complete       | `done task_id` |"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| Delete a task from the list   | `delete task_id` |"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| Find a specific task          | `find search_term` |"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| Find task on a specific date  | `due search_date`  |"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "| Exit                          | `bye` | "
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 171,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.ui.TextUI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Entry point for Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Greets the User, loads the save file and begins User interaction"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String FIXED_FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final TextUI ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final SaveManager saveManager;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        new Duke(FIXED_FILE_PATH).run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Initialize the starting resources that is required by the application"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param filePath is the path of the save file that will be loaded at the start"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.ui \u003d new TextUI();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.saveManager \u003d new SaveManager(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.tasks \u003d saveManager.loadTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (DukeException fileReadError) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            ui.printErrorMessage(fileReadError);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Runs the program until the Bye Command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        loopUntilExitCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * The main looping logic that processes the user inputs and parses the command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Once the input has been processed, it will execute the command and prints the Command result"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void loopUntilExitCommand() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        boolean stillInteracting \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        while(stillInteracting) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Command command \u003d parser.processInput(ui.getUserInput());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                ui.printResultOfCommand(command.execute(tasks, saveManager));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                stillInteracting \u003d !(command instanceof ByeCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                ui.printErrorMessage(error);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                ui.printSingleLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        ui.printWelcomeScreen();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 79,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Represents an Exception unique to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DEFAULT_ERROR_HEADER \u003d \"Error: \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return DEFAULT_ERROR_HEADER + this.message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 19
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Adds a task to TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String TYPE_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String TYPE_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String ADD_SYMBOL \u003d \"+ \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String INVALID_DATE_FORMAT \u003d \"Not a valid date format. Storing as String instead!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String EXPECTED_DATE_FORMAT \u003d \"yyyy-MM-dd HHmm\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String PRINTED_DATE_FORMAT \u003d \"dd/MMM/yyyy hh:mm a\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private Task addThis;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String result \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Constructor for Todo tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskName Name of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public AddCommand(String taskName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        addThis \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Constructor to handle Deadline and Event tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskName Name of the task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskDuration Duration of the the tasks, it could be a LocalDate object in String form."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskType The type of task. It will be either a deadline or event identifier."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public AddCommand(String taskName, String taskDuration, String taskType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        taskDuration \u003d checkAndParseDate(taskDuration);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if(taskType.equals(TYPE_DEADLINE)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            addThis \u003d new Deadline(taskName, taskDuration);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if(taskType.equals(TYPE_EVENT)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            addThis \u003d new Event(taskName, taskDuration);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks if the user input a valid date and convert it to readable format"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskDuration the user input for duration"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return a String that has the readable date format or normal user input string if not valid date"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String checkAndParseDate(String taskDuration) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            SimpleDateFormat stringToDate \u003d new SimpleDateFormat(EXPECTED_DATE_FORMAT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            Date taskDate \u003d stringToDate.parse(taskDuration.trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            SimpleDateFormat newDateFormat \u003d new SimpleDateFormat(PRINTED_DATE_FORMAT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            taskDuration \u003d newDateFormat.format(taskDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (java.text.ParseException invalidDateFormat) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d INVALID_DATE_FORMAT + System.lineSeparator();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return taskDuration;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Executes the command by adding to TaskList and saving the update to the save file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks the TaskList object that the task will be added to."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param saveManager the SaveManager object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return ResultCommand object that will contain the output of the command."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.addTask(addThis);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        saveManager.saveTaskList(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d Messages.SINGLE_LINE + System.lineSeparator() + ADD_SYMBOL + addThis + System.lineSeparator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d Messages.MESSAGE_TASKS_LEFT + Task.getTotalTasks();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand(result);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 85
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Indicates an exit command and program will commence exit."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Abstract class that represent an executable command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public abstract ResultCommand execute(TaskList tasks, SaveManager saveManager);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 12
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Deletes a task identified by a task id"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String NON_INTEGER_INPUT \u003d \"Please enter an integer\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String INTEGER_ONLY_REGEX \u003d \"-?\\\\d+(\\\\.\\\\d+)?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final int taskToDelete;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks if String contains an integer and parses it as an int"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskToDelete the task index to delete as String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @throws DukeException If a taskToDelete is not an int"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public DeleteCommand(String taskToDelete) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Input validation to handle non-integer input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (taskToDelete.matches(INTEGER_ONLY_REGEX)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.taskToDelete \u003d Integer.parseInt(taskToDelete) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Performs input validation and checks to delete only legitimate tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks the TaskList object to delete the task from"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param saveManager the SaveManager object that will update the save file after deletion"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return ResultCommand object that has the result of the delete execution"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (taskToDelete \u003c 0 || taskToDelete \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_NO_SUCH_TASK;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_REMOVED_TASK + System.lineSeparator();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result +\u003d tasks.getTasks().get(taskToDelete);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            tasks.deleteTask(taskToDelete);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            saveManager.saveTaskList(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand(result);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 51
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Mark a Task as completed indicated by an index"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private int taskIDToComplete;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String result;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String NON_INTEGER_INPUT \u003d \"Please enter an integer\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String INTEGER_ONLY_REGEX \u003d \"-?\\\\d+(\\\\.\\\\d+)?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks if the String is an integer value and parses it as an int"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskIDInString the task index to delete as String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @throws DukeException If a taskIDInString is not an int"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public DoneCommand(String taskIDInString) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (taskIDInString.matches(INTEGER_ONLY_REGEX)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.taskIDToComplete \u003d Integer.parseInt(taskIDInString) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(NON_INTEGER_INPUT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Completes the tasks if it is a valid Task that can be completed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks TaskList to complete the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param saveManager Updates this save file after completion"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return ResultCommand object that has the result of the done execution"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (canTaskBeCompleted(tasks)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            tasks.completeTask(taskIDToComplete);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            saveManager.saveTaskList(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand(result);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks if the task is a valid task or is not completed yet."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks the Tasklist object which the task to check resides in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return boolean whether this task is completable or not"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private boolean canTaskBeCompleted(TaskList tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        boolean isValidTask \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (taskIDToComplete \u003c 0 || taskIDToComplete \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_NO_SUCH_TASK;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (Task.getTotalTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_NO_REMAINING_TASKS;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (tasks.getTasks().get(taskIDToComplete).isCompleted()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_TASK_ALREADY_COMPLETED;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d \"\u0027\" + tasks.getTasks().get(taskIDToComplete).getTaskName().trim() + \"\u0027\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result +\u003d System.lineSeparator() + Messages.MESSAGE_TASK_COMPLETED + System.lineSeparator();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (Task.getTotalTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                result +\u003d Messages.MESSAGE_ALL_TASK_COMPLETED;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                result +\u003d Messages.MESSAGE_TASKS_LEFT + Task.getTotalTasks();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            isValidTask \u003d true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return isValidTask;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 75
    }
  },
  {
    "path": "src/main/java/duke/commands/DueCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Searches and returns for all tasks with the specified due date."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class DueCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String ERROR_INVALID_DATE \u003d \"Invalid Date! Format: \u0027due YYYY-MM-DD\u0027\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String EXPECTED_DATE_FORMAT \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SEARCH_DATE_FORMAT \u003d \"dd/MMM/yyyy\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final Date checkThisDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Constructor that validates the specified date input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param checkThisDate The specified date to search for"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @throws DukeException if the date is not in the valid format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public DueCommand(String checkThisDate) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            SimpleDateFormat stringToDate \u003d new SimpleDateFormat(EXPECTED_DATE_FORMAT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.checkThisDate \u003d stringToDate.parse(checkThisDate.trim());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (java.text.ParseException invalidDateFormat) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(ERROR_INVALID_DATE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Finds all Deadline and Event tasks that has the same specified LocalDate Object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks The TaskList object to complete the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param saveManager Updates this save file after completion"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return ResultCommand object that has the found tasks as result"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        SimpleDateFormat newDateFormat \u003d new SimpleDateFormat(SEARCH_DATE_FORMAT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String formattedDate \u003d newDateFormat.format(checkThisDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Used stream to find Deadline and Event tasks that has the request date, then it prints them."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.getTasks().stream().filter((s)-\u003e s instanceof Deadline || s instanceof Event)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                .filter((s)-\u003es.getDueTime().contains(formattedDate.trim()))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                .forEach(System.out::println);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 55
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Finds a task using the task\u0027s name and a search string"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final String findThisTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public FindCommand(String findThisTask) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.findThisTask \u003d findThisTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Finds tasks that has the search string in the task name."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks the TaskList object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param saveManager the SaveManager object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return The ResultCommand object that contains the result of the execution"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Stream that will find Tasks that has the search string and then prints them."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.getTasks().stream().filter((s)-\u003e s.getTaskName().contains(findThisTask))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                .forEach(System.out::println);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String HELP_HEADER_MESSAGE \u003d \"Duke.java v0.2 Commands\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String NEW_LINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String TWO_NEW_LINE \u003d System.lineSeparator() + System.lineSeparator();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String LIST_COMMAND \u003d \"\u0027list\u0027\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String LIST_DESCRIPTION \u003d \"List all the task added\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String TODO_COMMAND \u003d \"\u0027todo task_name\u0027\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String TODO_DESCRIPTION \u003d \"Adds a todo task\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DEADLINE_COMMAND \u003d \"\u0027deadline task_name /by YYYY-MM-DD HHmm\u0027\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DEADLINE_DESCRIPTION \u003d \"Adds a deadline task\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String EVENT_COMMAND \u003d \"\u0027event task_name /at YYYY-MM-DD HHmm\u0027\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String EVENT_DESCRIPTION \u003d \"Adds an event task\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DONE_COMMAND \u003d \"\u0027done task_id\u0027\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DONE_DESCRIPTION \u003d \"Completes a task\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELETE_COMMAND \u003d \"\u0027delete task_id\u0027\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELETE_DESCRIPTION \u003d \"Deletes any task\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String FIND_COMMAND \u003d \"\u0027find task_name\u0027\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String FIND_DESCRIPTION \u003d \"Finds a task with task_name string\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DUE_COMMAND \u003d \"\u0027due YYYY-MM-DD\u0027\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DUE_DESCRIPTION \u003d \"Finds task that has the specified due date\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String BYE_COMMAND \u003d \"\u0027bye\u0027\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String EXIT_DESCRIPTION \u003d \"Exit the program\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String USER_GUIDE_LINK \u003d \"View the User Guide: https://eyoweichin.github.io/ip/\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String result \u003d HELP_HEADER_MESSAGE + NEW_LINE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d LIST_COMMAND + NEW_LINE + LIST_DESCRIPTION + TWO_NEW_LINE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d TODO_COMMAND + NEW_LINE + TODO_DESCRIPTION + TWO_NEW_LINE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d DEADLINE_COMMAND + NEW_LINE + DEADLINE_DESCRIPTION + TWO_NEW_LINE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d EVENT_COMMAND + NEW_LINE + EVENT_DESCRIPTION + TWO_NEW_LINE;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d DONE_COMMAND + NEW_LINE + DONE_DESCRIPTION + TWO_NEW_LINE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d DELETE_COMMAND + NEW_LINE + DELETE_DESCRIPTION + TWO_NEW_LINE;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d FIND_COMMAND + NEW_LINE + FIND_DESCRIPTION + TWO_NEW_LINE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d DUE_COMMAND + NEW_LINE + DUE_DESCRIPTION + TWO_NEW_LINE;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d BYE_COMMAND + NEW_LINE + EXIT_DESCRIPTION + NEW_LINE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d USER_GUIDE_LINK;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand(result);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 55
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Lists all tasks in the task lists"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.listAllTasks();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/ResultCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " *  Hold the result and information of every command to be printed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class ResultCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final String resultOfCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand(String resultOfCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.resultOfCommand \u003d resultOfCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        resultOfCommand \u003d EMPTY_STRING;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getResultOfCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return resultOfCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 22
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Container for all messages used in program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_NO_TASKS_DUE \u003d \"Fortunately, you have no tasks due\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Declare Messages to be used by Duke here."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_NO_SUCH_TASK \u003d \"That Task does not exist!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_NO_REMAINING_TASKS \u003d \"No remaining tasks\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_TASK_ALREADY_COMPLETED \u003d \"That Task has already \" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            \"been completed, but let\u0027s shoot it again\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_TASK_COMPLETED \u003d \"marked as completed, well done!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_ALL_TASK_COMPLETED \u003d \"All Task Completed!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_TASKS_LEFT \u003d \"You a total of tasks remaining: \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Bye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_GREETING \u003d \"Hello! I\u0027m Duke!\" + System.lineSeparator()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    + \"What can I do for you?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String ERROR_MESSAGE_NO_INFO \u003d \"Please provide more information!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_REMOVED_TASK \u003d \"Noted! I have removed the task:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String ERROR_CANNOT_WRITE \u003d \"Unable to write to file: \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_SUCCESSFUL_LOAD \u003d \"Save file loaded! Added the following tasks:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_NO_TASK_LOADED \u003d \"No tasks loaded!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String ERROR_DUPLICATE_SAVE \u003d \"Save file already exists!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_CREATED_SAVE_FILE \u003d \"Save file not found! New file created!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String LOGO \u003d \" ____        _\" + System.lineSeparator()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____\" + System.lineSeparator()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\" + System.lineSeparator()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\" + System.lineSeparator()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\" + System.lineSeparator();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String SINGLE_LINE \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    \"____________________________________________________________\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String INIT_STRING \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 37
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.DueCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Parses and handles user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Constant variables used for input and string processing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String RAW_COMMAND_DELIMIT \u003d \" \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final int SPLIT_INPUT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_DELETE \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_TODO \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_DONE \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_DEADLINE \u003d \"/by\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_EVENT \u003d \"/at\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_FIND \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_DUE \u003d \"due\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_DUE \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Returns the raw user input into the Command for execution based on found keywords."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param userInput the unprocessed User Input"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return the Command to be executed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @throws DukeException if the user enters an invalid command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Command processInput(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] inputParts \u003d userInput.trim().split(RAW_COMMAND_DELIMIT, SPLIT_INPUT_LIMIT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] commandParts;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        switch (inputParts[0]) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_DONE, COMMAND_DONE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new DoneCommand(commandParts[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_TODO:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_TODO, COMMAND_TODO);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new AddCommand(commandParts[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_DEADLINE, COMMAND_DEADLINE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new AddCommand(commandParts[1], commandParts[2], COMMAND_DEADLINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_EVENT, COMMAND_EVENT);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new AddCommand(commandParts[1], commandParts[2], COMMAND_EVENT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_DELETE, COMMAND_DELETE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new DeleteCommand(commandParts[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_FIND, COMMAND_FIND);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new FindCommand(commandParts[1]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_DUE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_DUE, COMMAND_DUE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new DueCommand(commandParts[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(Messages.ERROR_MESSAGE_NO_INFO);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Returns the split inputParts into 3 distinct data: Command, Task name, Task Parameters"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param inputParts Separated user input into 2 parts by the first spacing"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param splitBy The delimiter option to process the 2nd half of the user input"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskType The identified type of the COMMAND"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return processedInputs String array with the input in parts"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @throws DukeException if the user does not enough information for the command"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static String[] splitInputToParts(String[] inputParts, String splitBy, String taskType)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String taskParameter \u003d Messages.INIT_STRING;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            taskName \u003d inputParts[1];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            userInput \u003d taskType;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //Perform additional splicing if event types are deadline or event"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (taskType.equals(COMMAND_DEADLINE) || taskType.equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                String[] dateParts \u003d inputParts[1].trim().split(splitBy, SPLIT_INPUT_LIMIT);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                taskName \u003d dateParts[0];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                taskParameter \u003d dateParts[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            // Catches out of bounds for two different splicing"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(Messages.ERROR_MESSAGE_NO_INFO);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new String[]{ userInput, taskName, taskParameter };"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 123
    }
  },
  {
    "path": "src/main/java/duke/storage/SaveManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Represents a save file with methods to save / load / create the save file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class SaveManager {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Constant variables used for save and loading command logic"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_SAVE_FILE \u003d \" | \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_SAVE_FILE_REGEX \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final int SPLIT_SAVE_LIMIT \u003d 5;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_COMPLETED_TASK \u003d \"1\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_NOT_COMPLETED_TASK \u003d \"0\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Declare file paths for saving and loading"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final File DATA_FOLDER \u003d new File(\"data\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final File filePath;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //TODO: Split the filePath in the constructor so that it can use a dynamic DATA_FOLDER"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public SaveManager(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.filePath \u003d new File(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Handles creating a TaskList and loading the result. Will call methods to create file if needed"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints the result of loading at the end"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return tasks the TaskList object that has the loaded tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @throws DukeException if duplicate file is found"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public TaskList loadTaskList() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        TaskList loadedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            createDirIfNeeded();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            createFileIfNeeded();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (IOException fileExists) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //Do nothing as the files would be created when needed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //This will only catch rare exceptions of duplicate files created after the first check"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        savedFileReader(loadedTasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        printLoadResult(loadedTasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks if any tasks were loaded and print them"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param loadedTasks is the TaskList object to load the saved data into"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void printLoadResult(TaskList loadedTasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (loadedTasks.getTasks().size() \u003e 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(Messages.MESSAGE_SUCCESSFUL_LOAD);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            loadedTasks.listAllTasks();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(Messages.MESSAGE_NO_TASK_LOADED);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void createDirIfNeeded() throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (!DATA_FOLDER.exists()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            Files.createDirectories(Paths.get(String.valueOf(DATA_FOLDER)));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void createFileIfNeeded() throws IOException, DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (!filePath.exists()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            Files.createFile(Paths.get(String.valueOf(filePath)));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(Messages.MESSAGE_CREATED_SAVE_FILE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Reads the saved file and adds the saved data to the data structure"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * ."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks is the TaskList object to load the saved data into"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @throws DukeException if save file cannot be found"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void savedFileReader(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Scanner fileScanner;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            fileScanner \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (java.io.FileNotFoundException existExcept) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(Messages.ERROR_DUPLICATE_SAVE + existExcept);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        while(fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String[] stringParts \u003d fileScanner.nextLine().split(DELIMIT_SAVE_FILE_REGEX, SPLIT_SAVE_LIMIT);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            switch (stringParts[1].trim()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case SAVE_TODO:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Task loadTodo \u003d new Todo(stringParts[2].trim());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                if (stringParts[0].trim().equals(SAVE_COMPLETED_TASK)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    loadTodo.setCompleted(true);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                tasks.loadTask(loadTodo);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case SAVE_DEADLINE:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Task loadDeadline \u003d new Deadline(stringParts[2].trim(), stringParts[3].trim());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                if (stringParts[0].trim().equals(SAVE_COMPLETED_TASK)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    loadDeadline.setCompleted(true);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                tasks.loadTask(loadDeadline);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case SAVE_EVENT:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Task loadEvent \u003d new Event(stringParts[2].trim(), stringParts[3].trim());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                if (stringParts[0].trim().equals(SAVE_COMPLETED_TASK)) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    loadEvent.setCompleted(true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                tasks.loadTask(loadEvent);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Saves the current TaskList to a save file in the correct format that can be loaded."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks is the TaskList object to load the saved data into"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void saveTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        StringBuilder saveString \u003d new StringBuilder(Messages.INIT_STRING);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Here it will loop through the TaskList and build the string to be saved."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        for (Task saveTask: tasks.getTasks()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (saveTask.isCompleted()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_COMPLETED_TASK + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_NOT_COMPLETED_TASK + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (saveTask instanceof Todo) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_TODO + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(saveTask.getTaskName()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } else if (saveTask instanceof Deadline) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_DEADLINE + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(saveTask.getTaskName()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(saveTask.getDueTime()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } else if (saveTask instanceof Event) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_EVENT + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(saveTask.getTaskName()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(saveTask.getDueTime()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            saveString.append(System.lineSeparator());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            fw.write(saveString.toString());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(Messages.ERROR_CANNOT_WRITE + e.getMessage());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 175
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Represents a Deadline task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DEADLINE_ICON \u003d \"[D]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DURATION_OPEN \u003d \" (by:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DURATION_CLOSE \u003d \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected String dueTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Deadline(String taskName, String dueTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.dueTime \u003d dueTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setDueTime(String dueTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.dueTime \u003d dueTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getDueTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return dueTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return DEADLINE_ICON + super.toString() + DURATION_OPEN + dueTime + DURATION_CLOSE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Represents an Event task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String EVENT_ICON \u003d \"[E]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DURATION_OPEN \u003d \" (at:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DURATION_CLOSE \u003d \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Event(String taskName, String duration) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setDuration(String duration) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getDueTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return EVENT_ICON + super.toString() + DURATION_OPEN + duration + DURATION_CLOSE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Represents a Task in a TaskList"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String NO_DUE_DATE \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DONE_ICON \u003d \"[✓]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String NOT_DONE_ICON \u003d \"[✗]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String WHITE_SPACE \u003d \" \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        totalTasks +\u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getDueTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return NO_DUE_DATE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return isCompleted;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getStatusIndicator() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return (isCompleted ? DONE_ICON : NOT_DONE_ICON);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setCompleted(boolean completed) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        isCompleted \u003d completed;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        totalTasks -\u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static int getTotalTasks() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return totalTasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return getStatusIndicator() + WHITE_SPACE + getTaskName();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 50
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Represents the entire TaskList. Will store all details of Tasks and methods to support adding and removal"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String ID_DELIMIT \u003d \": \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Takes the new Tasks (Todos, Deadlines, Events) and adds it to the tasks ArrayList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param newTask Takes in as Task object, but in reality it is a subclass."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void loadTask(Task newTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Finds and delete the task from the Arraylist"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskToDeleteInt is the task id to delete"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void deleteTask(int taskToDeleteInt) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.remove(tasks.get(taskToDeleteInt));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks the task to complete, and completes it if it is a valid task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskIDToFinish Processed input that identifies the task to complete"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void completeTask(int taskIDToFinish) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.get(taskIDToFinish).setCompleted(true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints all Tasks stored in the tasks ArrayList"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void listAllTasks() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(Messages.MESSAGE_NO_TASKS_DUE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                System.out.println((i + 1) + ID_DELIMIT + tasks.get(i));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Represents a Todo Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String TODO_ICON \u003d \"[T]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return TODO_ICON + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 17
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.ResultCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " * Represents the Text User Interface for the application"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class TextUI {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Declare scanner and print stream to handle I/O"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public TextUI() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out \u003d new PrintStream(System.out);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printWelcomeScreen() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.LOGO);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.MESSAGE_GREETING);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints the exit message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *  Prints a single straight line and a newline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printSingleLine() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints the error caused"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(e);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints the result of a command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param printResult is a ResultCommand object that has the output of a command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printResultOfCommand(ResultCommand printResult) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Checks if empty string to prevent printing of duplicate newlines."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if(!printResult.getResultOfCommand().equals(\"\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            out.println(printResult.getResultOfCommand());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Takes the raw user input from the next line"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return the raw user input"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 82
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "deadline return book/by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "event project meeting/at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "deadline return book/by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "delete"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 2,
      "-": 19
    }
  }
]
