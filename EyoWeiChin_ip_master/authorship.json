[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.ui.TextUI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final TextUI ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final SaveManager saveManager;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Main entry point of the application"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Greets the User, loads the save file and begins User interaction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Initialize starting resources"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.ui \u003d new TextUI();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.saveManager \u003d new SaveManager(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.tasks \u003d saveManager.loadTaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (DukeException fileReadError) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            ui.printErrorMessage(fileReadError);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        loopUntilExitCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void loopUntilExitCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        boolean stillInteracting \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        while(stillInteracting) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Command command \u003d parser.processInput(ui.getUserInput());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                ui.printResultOfCommand(command.execute(tasks, saveManager));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                stillInteracting \u003d !(command instanceof ByeCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                ui.printErrorMessage(error);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                ui.printSingleLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        ui.printWelcomeScreen();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 67,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return \"Error: \" + this.message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String TYPE_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String TYPE_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String ADD_SYMBOL \u003d \"+ \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private Task addThis;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String result;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public AddCommand(String taskName) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        addThis \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public AddCommand(String taskName, String taskDuration, String taskType) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            LocalDate tryParsing \u003d LocalDate.parse(taskDuration.trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            taskDuration \u003d tryParsing.format(DateTimeFormatter.ofPattern(Messages.DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch(java.time.format.DateTimeParseException invalidDateFormat) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //Do nothing to modify the taskDuration. This enables us to store other strings as task Duration"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if(taskType.equals(TYPE_DEADLINE)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            addThis \u003d new Deadline(taskName, taskDuration);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if(taskType.equals(TYPE_EVENT)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            addThis \u003d new Event(taskName, taskDuration);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.addTask(addThis);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        saveManager.saveTaskList(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result \u003d Messages.SINGLE_LINE + System.lineSeparator() + ADD_SYMBOL + addThis + System.lineSeparator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        result +\u003d Messages.MESSAGE_TASKS_LEFT + Task.getTotalTasks();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand(result);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 50
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 12
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 11
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String taskToDelete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String result;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public DeleteCommand(String taskToDelete) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.taskToDelete \u003d taskToDelete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int taskToDeleteInt \u003d Integer.parseInt(taskToDelete) - 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (taskToDeleteInt \u003c 0 || taskToDeleteInt \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_NO_SUCH_TASK;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_REMOVED_TASK + System.lineSeparator();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result +\u003d tasks.getTasks().get(taskToDeleteInt);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            tasks.deleteTask(taskToDeleteInt);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            saveManager.saveTaskList(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand(result);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String taskIDInString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String result;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public DoneCommand(String taskIDInString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.taskIDInString \u003d taskIDInString;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        // Change from String to Integer then 0-base to 1-base indexing by deducting 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        int taskIDToFinish \u003d Integer.parseInt(taskIDInString) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (taskIDToFinish \u003c 0 || taskIDToFinish \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_NO_SUCH_TASK;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (Task.getTotalTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_NO_REMAINING_TASKS;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else if (tasks.getTasks().get(taskIDToFinish).isCompleted()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d Messages.MESSAGE_TASK_ALREADY_COMPLETED;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            tasks.completeTask(taskIDToFinish);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            saveManager.saveTaskList(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result \u003d \"\u0027\" + tasks.getTasks().get(taskIDToFinish).getTaskName().trim() + \"\u0027\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            result +\u003d System.lineSeparator() + Messages.MESSAGE_TASK_COMPLETED;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (Task.getTotalTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                result +\u003d Messages.MESSAGE_ALL_TASK_COMPLETED;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                result +\u003d Messages.MESSAGE_TASKS_LEFT + Task.getTotalTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand(result);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/DueCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class DueCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String ERROR_INVALID_DATE \u003d \"Invalid Date!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private LocalDate checkThisDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public DueCommand(String checkThisDate) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            this.checkThisDate \u003d LocalDate.parse(checkThisDate.trim());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch(java.time.format.DateTimeParseException invalidDateFormat) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(ERROR_INVALID_DATE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String formattedDate \u003d checkThisDate.format(DateTimeFormatter.ofPattern(Messages.DATE_TIME_FORMAT));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.getTasks().stream().filter((s)-\u003e s instanceof Deadline || s instanceof Event)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                .filter((s)-\u003es.getDueTime().equals(formattedDate.trim()))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                .forEach(System.out::println);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String findThisTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public FindCommand(String findThisTask) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.findThisTask \u003d findThisTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.getTasks().stream().filter((s)-\u003e s.getTaskName().contains(findThisTask))"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                .forEach(System.out::println);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 19
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.storage.SaveManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand execute(TaskList tasks, SaveManager saveManager) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.listAllTasks();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new ResultCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 13
    }
  },
  {
    "path": "src/main/java/duke/commands/ResultCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class ResultCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final String resultOfCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand(String resultOfCommand) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.resultOfCommand \u003d resultOfCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ResultCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        resultOfCommand \u003d EMPTY_STRING;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getResultOfCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return resultOfCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 19
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_NO_TASKS_DUE \u003d \"Fortunately, you have no tasks due\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Declare Messages to be used by Duke here."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_NO_SUCH_TASK \u003d \"That Task does not exist!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_NO_REMAINING_TASKS \u003d \"No remaining tasks\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_TASK_ALREADY_COMPLETED \u003d \"That Task has already \" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            \"been completed, but let\u0027s shoot it again\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_TASK_COMPLETED \u003d \"marked as completed, well done!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_ALL_TASK_COMPLETED \u003d \"All Task Completed!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_TASKS_LEFT \u003d \"You a total of tasks remaining: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Bye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_GREETING \u003d \"Hello! I\u0027m Duke!\" + System.lineSeparator()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    + \"What can I do for you?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_INVALID_OPTION \u003d \"Invalid option, Try again!\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                            + System.lineSeparator();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String ERROR_MESSAGE_NO_INFO \u003d \"Please provide more information!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_REMOVED_TASK \u003d \"Noted! I have removed the task:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String ERROR_CANNOT_WRITE \u003d \"Unable to write to file: \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_SUCCESSFUL_LOAD \u003d \"Save file loaded! Added the following tasks:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String ERROR_DUPLICATE_SAVE \u003d \"Save file already exists!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String MESSAGE_CREATED_SAVE_FILE \u003d \"No save file detected! New file was created!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String LOGO \u003d \" ____        _\" + System.lineSeparator()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____\" + System.lineSeparator()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\" + System.lineSeparator()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\" + System.lineSeparator()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\" + System.lineSeparator();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String SINGLE_LINE \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    \"____________________________________________________________\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String INIT_STRING \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static final String DATE_TIME_FORMAT \u003d \"MM/dd/yyyy\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 37
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //Constant variables for Command logic"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String RAW_COMMAND_DELIMIT \u003d \" \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final int SPLIT_INPUT_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_DELETE \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_TODO \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_DONE \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_DEADLINE \u003d \"/by\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_EVENT \u003d \"/at\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_FIND \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String COMMAND_DUE \u003d \"due\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_DUE \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Returns the raw user input into the Command for execution based on found keywords"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return Command to be executed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Command processInput(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] inputParts \u003d userInput.trim().split(RAW_COMMAND_DELIMIT, SPLIT_INPUT_LIMIT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String[] commandParts;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        switch (inputParts[0]) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_DONE, COMMAND_DONE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new DoneCommand(commandParts[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_TODO, COMMAND_TODO);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new AddCommand(commandParts[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_DEADLINE, COMMAND_DEADLINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new AddCommand(commandParts[1], commandParts[2], COMMAND_DEADLINE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_EVENT, COMMAND_EVENT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new AddCommand(commandParts[1], commandParts[2], COMMAND_EVENT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_DELETE, COMMAND_DELETE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new DeleteCommand(commandParts[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_FIND, COMMAND_FIND);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new FindCommand(commandParts[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        case COMMAND_DUE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            commandParts \u003d splitInputToParts(inputParts, DELIMIT_DUE, COMMAND_DUE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            return new DueCommand(commandParts[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(Messages.ERROR_MESSAGE_NO_INFO);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Returns the split inputParts into 3 distinct data: Command, Task name, Task Parameters"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param inputParts Separated user input into 2 parts by the first spacing"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param splitBy The delimiter option to process the 2nd half of the user input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskType The identified type of the COMMAND"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return processedInputs String array with the input in parts"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static String[] splitInputToParts(String[] inputParts, String splitBy, String taskType)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        String taskParameter \u003d Messages.INIT_STRING;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            taskName \u003d inputParts[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            userInput \u003d taskType;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //Perform additional splicing if event types are deadline or event"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (taskType.equals(COMMAND_DEADLINE) || taskType.equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                String[] dateParts \u003d inputParts[1].trim().split(splitBy, SPLIT_INPUT_LIMIT);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                taskName \u003d dateParts[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                taskParameter \u003d dateParts[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //Catches out of bounds for two different splicing"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(Messages.ERROR_MESSAGE_NO_INFO);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return new String[]{ userInput, taskName, taskParameter };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 98
    }
  },
  {
    "path": "src/main/java/duke/storage/SaveManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class SaveManager {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //Constant Variables for Save / Load logic"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_SAVE_FILE \u003d \" | \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String DELIMIT_SAVE_FILE_REGEX \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final int SPLIT_SAVE_LIMIT \u003d 5;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_COMPLETED_TASK \u003d \"1\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final String SAVE_NOT_COMPLETED_TASK \u003d \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Declare file paths for saving and loading"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //protected static final File filePath \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected static final File DATA_FOLDER \u003d new File(\"data\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final File filePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //TODO: Split the filePath in the constructor so that it can use a dynamic DATA_FOLDER"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public SaveManager(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.filePath \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks if save folder and save file exists, if not create them."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * If they exist, call savedFileReader() to read it."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public TaskList loadTaskList() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        TaskList loadedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            Files.createDirectories(Paths.get(String.valueOf(DATA_FOLDER)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            Files.createFile(Paths.get(String.valueOf(filePath)));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(Messages.MESSAGE_CREATED_SAVE_FILE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (IOException fileExists) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            //The actual reading takes place here"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            savedFileReader(loadedTasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (loadedTasks.getTasks().size() \u003e 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(Messages.MESSAGE_SUCCESSFUL_LOAD);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            loadedTasks.listAllTasks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Reads the saved file and adds the saved data to the data structure."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private void savedFileReader(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Scanner fileScanner;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            fileScanner \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (java.io.FileNotFoundException existExcept) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            throw new DukeException(Messages.ERROR_DUPLICATE_SAVE + existExcept);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        while(fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            String[] stringParts \u003d fileScanner.nextLine().split(DELIMIT_SAVE_FILE_REGEX, SPLIT_SAVE_LIMIT);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            switch (stringParts[1].trim()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case SAVE_TODO:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Task loadTodo \u003d new Todo(stringParts[2].trim());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                if (stringParts[0].trim().equals(SAVE_COMPLETED_TASK)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    loadTodo.setCompleted(true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                tasks.loadTask(loadTodo);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case SAVE_DEADLINE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Task loadDeadline \u003d new Deadline(stringParts[2].trim(), stringParts[3].trim());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                if (stringParts[0].trim().equals(SAVE_COMPLETED_TASK)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    loadDeadline.setCompleted(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                tasks.loadTask(loadDeadline);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            case SAVE_EVENT:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                Task loadEvent \u003d new Event(stringParts[2].trim(), stringParts[3].trim());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                if (stringParts[0].trim().equals(SAVE_COMPLETED_TASK)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                    loadEvent.setCompleted(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                tasks.loadTask(loadEvent);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Saves the current TaskList to a save file in the correct format that can be loaded."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void saveTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        StringBuilder saveString \u003d new StringBuilder(Messages.INIT_STRING);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Loop through the Task ArrayList and build the string to save"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        for (Task saveTask: tasks.getTasks()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (saveTask.isCompleted()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_COMPLETED_TASK + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_NOT_COMPLETED_TASK + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            if (saveTask instanceof Todo) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_TODO + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(saveTask.getTaskName()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } else if (saveTask instanceof Deadline) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_DEADLINE + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(saveTask.getTaskName()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(((Deadline) saveTask).getDueTime()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            } else if (saveTask instanceof Event) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(SAVE_EVENT + DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(saveTask.getTaskName()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                saveString.append(((Event) saveTask).getDueTime()).append(DELIMIT_SAVE_FILE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            saveString.append(System.lineSeparator());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            fw.write(saveString.toString());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(Messages.ERROR_CANNOT_WRITE + e.getMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 142
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected String dueTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Deadline(String taskName, String dueTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.dueTime \u003d dueTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setDueTime(String dueTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.dueTime \u003d dueTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getDueTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return dueTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + dueTime + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Event(String taskName, String duration) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setDuration(String duration) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getDueTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + duration + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static final String NO_DUE_DATE \u003d \"\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //duke.task.Task attribute"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //Class Level Attribute"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    //duke.task.Task Constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        totalTasks +\u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getDueTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return NO_DUE_DATE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return isCompleted;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getStatusIndicator() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return (isCompleted ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setCompleted(boolean completed) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        isCompleted \u003d completed;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        totalTasks -\u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void setTaskName(String taskName) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static int getTotalTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return totalTasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public static void setTotalTasks(int totalTasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        Task.totalTasks \u003d totalTasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return getStatusIndicator() + \" \" + getTaskName();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 56
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Takes the new Tasks (Todos, Deadlines, Events) and adds it to the tasks ArrayList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param newTask Takes in as Task object, but in reality it is a subclass."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void loadTask(Task newTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Finds and delete the task from the Arraylist"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskToDeleteInt is the task id to delete"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void deleteTask(int taskToDeleteInt) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.remove(tasks.get(taskToDeleteInt));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Checks the task to complete, and completes it if it is a valid task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @param taskIDToFinish Processed input that identifies the task to complete"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void completeTask(int taskIDToFinish) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        tasks.get(taskIDToFinish).setCompleted(true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints all Tasks stored in the tasks ArrayList"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void listAllTasks() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            System.out.println(Messages.MESSAGE_NO_TASKS_DUE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "                System.out.println((i + 1) + \": \" + tasks.get(i));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public Todo(String taskName) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 12
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.commands.ResultCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "public class TextUI {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Declare scanner and print stream to handle I/O"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public TextUI() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out \u003d new PrintStream(System.out);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printWelcomeScreen() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.LOGO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.MESSAGE_GREETING);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints the exit message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *  Prints a single straight line and a newline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printSingleLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(Messages.SINGLE_LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Prints the error caused"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printErrorMessage(DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        out.println(e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public void printResultOfCommand(ResultCommand printResult) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        //Checks if empty string, don\u0027t print newline again"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        if(!printResult.getResultOfCommand().equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "            out.println(printResult.getResultOfCommand());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * Takes the raw user input from the next line"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     * @return the raw user input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 74
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "deadline return book/by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "event project meeting/at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "deadline return book/by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "delete 8"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "delete"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EyoWeiChin"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "EyoWeiChin": 2,
      "-": 19
    }
  }
]
