[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected String byDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Deadline(String description, String byDate) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.byDate\u003dbyDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + description + \" (by: \" + byDate + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    static int countThings\u003d0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    static Task [] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void storeTextAndList() throws DukeException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String inputLine;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        inputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        while(!inputLine.equals(\"bye\")){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                if(inputLine.equals(\"list\")){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    int count;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    for(count\u003d0;count\u003ccountThings;count++){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                        System.out.print(count+1 + \". \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                        System.out.println(tasks[count]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                } else if(inputLine.contains(\"done\")){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    int index \u003d Integer.parseInt(inputLine.substring(5));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    doneTask(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    if (inputLine.contains(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                        addTodoTask(inputLine);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    } else if (inputLine.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                        addDeadlineTask(inputLine);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                        ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    } else if (inputLine.contains(\"event\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                        addEventTask(inputLine);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }catch (DukeException e){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                dealWithException(inputLine);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            inputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        bye();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void dealWithException(String inputLine){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if(inputLine.equals(\"todo\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }else if(inputLine.equals(\"deadline\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }else if(inputLine.equals(\"event\")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println((\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void addTodoTask(String inputLine) throws DukeException{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String todoDescription;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if(inputLine.equals(\"todo\")){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        todoDescription \u003d inputLine.substring(5);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task task \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasks[countThings] \u003d task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        countThings++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        printTask(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void addDeadlineTask(String inputLine) throws DukeException{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String deadlineDescription;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String deadlineByDate;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int getIndex;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if(inputLine.equals(\"deadline\")){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        getIndex \u003d inputLine.indexOf(\"/\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        deadlineDescription \u003d inputLine.substring(9,getIndex-1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        deadlineByDate \u003d inputLine.substring(getIndex+4);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task task \u003d new Deadline(deadlineDescription, deadlineByDate);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasks[countThings] \u003d task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        countThings++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        printTask(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void addEventTask(String inputLine) throws DukeException{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String eventDescription;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String eventAtDate;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int getIndex;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if(inputLine.equals(\"event\")){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        getIndex \u003d inputLine.indexOf(\"/\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        eventDescription \u003d inputLine.substring(6,getIndex-1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        eventAtDate \u003d inputLine.substring(getIndex+4);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task task \u003d new Event(eventDescription, eventAtDate);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasks[countThings] \u003d task;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        countThings++;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        printTask(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void printTask(Task task){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Now you have \" + countThings + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void doneTask(int index){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasks[index-1].taskDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +tasks[index-1]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void bye(){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void main(String[] args) throws DukeException{"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String initialGreet \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                \" What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(initialGreet);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        storeTextAndList();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Zhangyilin0203": 129
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected String atDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Event(String description, String atDate) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.atDate\u003datDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + description + \" (at: \" + atDate + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void taskDone(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.isDone\u003dtrue;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return this.getStatusIcon() + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 25
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "event project /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "Zhangyilin0203": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 33,
      "Zhangyilin0203": 1
    }
  }
]
