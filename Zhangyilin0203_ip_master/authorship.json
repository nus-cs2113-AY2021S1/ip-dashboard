[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "# duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "Zhangyilin0203": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "##introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Duke is a Personal Assistant Chatbot that helps a person to keep track of his or her tasks, including todo tasks, deadline tasks and events."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### Add tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Add any one of the three types of tasks: `todo`, `deadline`, `event`."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "For `deadline`, you need to add a due date. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "For `event`, you need to add the date of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### Delete tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Delete a task from the current tasks you have."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### Complete tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Mark a task as done when you complete the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### Display all tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Display the tasks to view all the tasks you have currently."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### Search for tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Search for specific tasks by giving a keyword."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### Load tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Load tasks from a local `.txt` file. Everytime when Duke is open, all the tasks will automatically be loaded from the local file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### Save tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Save tasks to a local .txt file. Everytime when the user makes some changes, the changed data will be automatically stored into the local file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### Exit"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "Exit Duke by typing `bye`."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### `todo` - Add todo task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Add a todo task with task description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Example of usage: "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  `todo swimming`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  ````"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  [T][✘]borrow book"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  ````"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### `deadline` - Add deadline task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Add a deadline task with task description and due date."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Example of usage: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  `deadline return book /by Sunday`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  ````"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  [D][✘]return book (by: Sunday)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  ````"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### `event` - Add event"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Add an event with description and event date."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Example of usage: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  `event project /at Mon 2-4pm`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  ````"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  [E][✘]project (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  ````"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " ### `delete` - Delete a task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Delete a specific task according to the given index."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Example of usage: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "   `delete 2`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "   ````"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "   Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "   [D][✘]return book (by: Oct 15 2019)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "   Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "   ````"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "   "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " ### `done` - Complete a task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Mark a specific task as done when finish the task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Example of usage: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    `done 2`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    ````"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    [D][✓]return book (by: Sunday)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    ````"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " ### `list` - Display tasks"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Display all the tasks you currently have."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Example of usage: "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    `list`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    ````"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    1. [D][✘]sleep (by: 12:00)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    2. [D][✘]borrow book (by: 2020-1-1)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    3. [E][✘]go home (at: 20:20)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    ````"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### `find` - Find tasks"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Find out all the tasks with the given keyword."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Example of usage: "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    `find borrow`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Expected outcome:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    ````"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    1. [D][✘]borrow book (by: 2020-1-1)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    ````"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "### `bye` - Exit Duke"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Exit Duke."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Example of usageL"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    `bye`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "  * Expected outcome:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "      ````"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "      Bye. Hope to see you again soon"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "      ````"
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "Zhangyilin0203": 144
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "D|false|sleep|12:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "T|false|68"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "T|true|99"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "D|false|return book|Oct 15 2019"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "D|false|borrow book|2020-1-1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "E|false|gohome|2020"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "E|false|go|Sep 02 2020"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 7
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Main class of the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * A task storage system which can store events, deadlines as well as todos."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * It supports features like add and remove tasks, search for keywords as well as mark tasks as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * It can also list all the tasks you have."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String FILE_PATH\u003d\"duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static int countThings \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Constructor for the main program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Initialize the UI, Storage and taskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param filePath the path that you are going to store the data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Start the Duke program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException Throw the dukeException."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void run() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        countThings \u003d storage.readFromFile(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        ui.getCount(countThings);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        ui.interact(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * initialize Duke and run."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException throw the exception."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws IOException throw the input or output exception."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        new Duke(FILE_PATH).run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Zhangyilin0203": 53
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 5
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static final String FAIL \u003d \"fail\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Parse user input command and deal with incorrect input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param inputLine User input command line."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The parsed command line."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException Throw invalid or incomplete exceptions."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static String getCommand(String inputLine) throws DukeException{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            if (inputLine.equals(LIST)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return LIST;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if (inputLine.equals(BYE)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return BYE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if ( inputLine.equals(TODO) || inputLine.equals(DEADLINE)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    || inputLine.equals(EVENT) || inputLine.equals(DONE)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    || inputLine.equals(DELETE)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if (inputLine.contains(TODO)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return TODO;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if (inputLine.contains(EVENT)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return EVENT;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if (inputLine.contains(DEADLINE)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return DEADLINE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if (inputLine.contains(DELETE)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return DELETE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if (inputLine.contains(DONE)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return DONE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            } else if (inputLine.contains(FIND)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                return FIND;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Ui.dealWithException(inputLine);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            return FAIL;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Function to understand date."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * If it is not a recognizable date, it will not convert it to standard output datetime."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param datetime User input date."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return A string contains the parsed datetime."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static String getDateFormat(String datetime) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String dateForm;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            date \u003d LocalDate.parse(datetime);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            dateForm \u003d date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            dateForm\u003ddatetime;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return dateForm;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 84
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Loading the tasks from file and saving the tasks to file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static File f;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static int countFileTasks \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Constructor of the Storage class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Initialize file f and file path, if f does not exists, creat a new file f."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param filePath the path that is the destination of the file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        f \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.filePath\u003dfilePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Write the data from taskList into file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param tasks the taskList that the data is stored during running the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void writeToFile(TaskList tasks){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            taskArrayList \u003d tasks.getTasksList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            for(Task task: taskArrayList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                fw.write(task.printIntoFile() + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"Error writing file\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Read data from file and store the data into the taskList."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param tasks A taskList that store the data read from file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static int readFromFile(TaskList tasks){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            while(sc.hasNext()){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                String[] taskInFile \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                if(taskInFile[0].equals(\"T\")){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    task \u003d new Todo(taskInFile[2]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                }else if(taskInFile[0].equals(\"D\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    task \u003d new Deadline(taskInFile[2],taskInFile[3]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    task \u003d new Event(taskInFile[2], taskInFile[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                countFileTasks++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                if(taskInFile[1].equals(\"true\")){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    task.taskDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"Error reading file\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return countFileTasks;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 84
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Provide a list that all the data can be stored into."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Support functions including add, delete, print tasks and find keywords of a task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A constructor that initialize the taskList when there is no existing taskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A constructor that initialize the taskList when there is an existing taskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param tasksList the existing taskList that we want our tasksList to be equal to."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasksList){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.tasksList \u003d tasksList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Add a task to the taskList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param task the task to be added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void add(Task task){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * remove the task from the taskList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param index the index of the removed task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return the removed task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Task remove(int index){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task removeTask \u003d tasksList.remove(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return removeTask;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * get the task with this index."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param index the index of the needed task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return the task with this index."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Task get(int index){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task getTask\u003dtasksList.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return getTask;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * get the whole taskList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return the corresponding taskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList(){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Print everything in the taskList."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        for(Task task : tasksList){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.print(count + \". \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * To find corresponding tasks which include the required keyword."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param inputLine user input command to show the required keyword."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void findTasks(String inputLine) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String findLine \u003d inputLine.substring(5);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        ArrayList\u003cTask\u003e findTasks \u003d (ArrayList\u003cTask\u003e) tasksList.stream()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                .filter((t) -\u003e t.getDescription().contains(findLine))"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        for(Task task : findTasks){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.print(count + \". \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if(count\u003d\u003d1){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"no matching result\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * To add a todo task into the taskList."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param inputLine User input command showing the description of the todo task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException Throw the DukeException."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void addTodoTask(String inputLine) throws DukeException{"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String todoDescription;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        todoDescription \u003d inputLine.substring(5);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task task \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        //tasks[countThings] \u003d task;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Ui.printTask(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * To add a deadline task into the taskList."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param inputLine User input command showing the description and deadline of the task."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException Throw the DukeException."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void addDeadlineTask(String inputLine) throws DukeException{"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String deadlineDescription;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String deadlineByDate;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int getIndex;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        getIndex \u003d inputLine.indexOf(\"/\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        deadlineDescription \u003d inputLine.substring(9,getIndex-1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        deadlineByDate \u003d inputLine.substring(getIndex+4);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task task \u003d new Deadline(deadlineDescription, deadlineByDate);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        //tasks[countThings] \u003d task;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Ui.printTask(task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * To add an event to the taskList."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param inputLine User input command showing the description and time of the event."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException Throw the DukeException."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void addEventTask(String inputLine) throws DukeException{"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String eventDescription;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String eventAtDate;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int getIndex;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        getIndex \u003d inputLine.indexOf(\"/\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        eventDescription \u003d inputLine.substring(6,getIndex-1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        eventAtDate \u003d inputLine.substring(getIndex+4);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task task \u003d new Event(eventDescription, eventAtDate);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        //tasks[countThings] \u003d task;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Ui.printTask(task);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * To delete an item in the taskList."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param inputLine User input command showing the index of the deleted task."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param countTasks The number of the tasks in the taskList, to decide whether the index is out of bound."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException Throw exception when the index is out of bound."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void deleteItem(String inputLine, int countTasks) throws DukeException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int index \u003d Integer.parseInt(inputLine.substring(7));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if(index \u003e countTasks){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Task task \u003d tasksList.remove(index - 1);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        countTasks--;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Now you have \" + countTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * To mark task as done when you finish the task."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param inputLine User input command showing the index of the done task."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param countTasks The number of the tasks in the taskList, to decide whether the index is out of bound."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException Throw exception when the index is out of bound."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void markAsDone(String inputLine, int countTasks) throws DukeException{"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        int index \u003d Integer.parseInt(inputLine.substring(5));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if(index \u003e countTasks){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        tasksList.get(index-1).taskDone();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + tasksList.get(index-1));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 199
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static int countTasks \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Get the total number of tasks after the data is read from a file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param countThings The total number of tasks in the taskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void getCount(int countThings){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.countTasks \u003dcountThings;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Get user input commands and handle the user input commands."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param tasks The taskList that contains all the information of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @throws DukeException Throw exception when there is incorrect or incomplete input commands."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void interact(TaskList tasks) throws DukeException{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String inputLine;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        while(in.hasNextLine()){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            inputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            String command \u003d parser.getCommand(inputLine);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    tasks.printList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    tasks.markAsDone(inputLine,countTasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    countTasks++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    tasks.addTodoTask(inputLine);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    countTasks++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    tasks.addDeadlineTask(inputLine);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    countTasks++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    tasks.addEventTask(inputLine);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    tasks.deleteItem(inputLine,countTasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    tasks.findTasks(inputLine);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Print out the information of the task every time when a new task is being added."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param task The taskList that contains all the information of tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void printTask(Task task){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Now you have \" + countTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Deal with all the incorrect and incomplete user input command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param inputLine User input command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void dealWithException(String inputLine){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        if(inputLine.equals(TODO)){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }else if(inputLine.equals(DEADLINE)){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }else if(inputLine.equals(EVENT)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }else if(inputLine.contains(DONE)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"OOPS!!! The done index is out of bound.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }else if(inputLine.contains(DELETE)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println(\"OOPS!!! The delete index is out of bound.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "            System.out.println((\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Print out bye when Duke is about to end."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void bye(){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Greet the user everytime they open Duke."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public static void greeting(){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        String initialGreet \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                \" What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "                \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        System.out.println(initialGreet);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 129
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * A class for deadline tasks that is inherited from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Requires user to input the description and deadline of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected String byDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A constructor that create a new deadline task from the description and deadline of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param description The description of the deadline task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param byDate The date of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Deadline(String description, String byDate) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        byDate\u003d parser.getDateFormat(byDate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.byDate\u003dbyDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A type icon to tell that the task is a deadline task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The type icon of the deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Return a formatted deadline description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The standard output form of the deadline task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + description + \" (by: \" + byDate + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Return a formatted deadline task description that could be written into a file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The standard form for deadline task to write into local file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"D|\" + isDone + \"|\" + description + \"|\" + this.byDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * A class for event that is inherited from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Requires user to input the description and time of the event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected String atDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A constructor that create a new event from the description and time of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param atDate The date that the event will happen."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Event(String description, String atDate) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        atDate\u003d parser.getDateFormat(atDate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.atDate\u003datDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A type icon to tell that the task is an event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The type icon of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Return a formatted event description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The standard output form of the event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + description + \" (at: \" + atDate + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Return a formatted event description that could be written into a file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The standard form for event to write into local file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"E|\" + isDone + \"|\" + description + \"|\" + this.atDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 51
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * A class for task objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * The parent class of the event, deadline and todo class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Constructor of the task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Create a new task object from the given description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param description The description of the task given by user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public void taskDone(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        this.isDone\u003dtrue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return this.getStatusIcon() + description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"Task|\" + isDone + \"|\" + description + \"|\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * A class for todotasks that is inherited from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " * Requires user to input the description and time of the todotask."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A constructor that create a new todotask from the description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @param description The description of the todotask."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * A type icon to tell that the task is a todotask."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The type icon of the todotask."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Return a formatted todotask description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The standard output form of the todotask."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * Return a formatted todotask description that could be written into a file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     * @return The standard form for todotask to write into local file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    public String printIntoFile(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "        return \"T|\" + isDone + \"|\" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 44
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "event project /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Zhangyilin0203": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "Zhangyilin0203": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhangyilin0203"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 31,
      "Zhangyilin0203": 3
    }
  }
]
