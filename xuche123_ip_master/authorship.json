[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.ui.DukeUI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.parser.DukeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.file.FileManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        dukeRun();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void dukeRun() throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        DukeUI.showWelcomeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        FileManager.loadFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        DukeParser.executeUserCommand(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 23
    }
  },
  {
    "path": "src/main/java/duke/file/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.ui.DukeUI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static final String fileName \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void loadFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        File dukeTxt \u003d new File(fileName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        if (dukeTxt.createNewFile()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"File does not exist. New file duke.txt created.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"File found and loaded.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(DukeUI.horizLine);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        Scanner scanner \u003d new Scanner(dukeTxt);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String taskData \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            char taskType \u003d taskData.charAt(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            boolean isDone \u003d (taskData.charAt(4) \u003d\u003d \u00271\u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String taskDetails \u003d taskData.substring(8);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String taskDescription \u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String taskTiming \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            if (taskType !\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                int dividerPos \u003d taskDetails.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                taskDescription \u003d taskDetails.substring(0, dividerPos-1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                taskTiming \u003d taskDetails.substring(dividerPos + 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.add(new Todo(taskDetails));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.add(new Deadline(taskDescription, taskTiming));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.add(new Event(taskDescription, taskTiming));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.get(tasks.size() - 1).setDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        for (Task task:tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            fw.write(task.convertToFileString() + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 63
    }
  },
  {
    "path": "src/main/java/duke/parser/DukeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.ui.DukeUI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.parser.commands.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.file.FileManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class DukeParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void executeUserCommand(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        String formattedCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        command \u003d in.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        formattedCommand \u003d command.toLowerCase();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        while (!formattedCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            if (formattedCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                AddCommand.computeTodoCommand(tasks, command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (formattedCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                AddCommand.computeDeadlineCommand(tasks, command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (formattedCommand.startsWith(\"event\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                AddCommand.computeEventCommand(tasks, command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (formattedCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                ListCommand.printList(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (formattedCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                ListCommand.markAsDone(tasks, command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (formattedCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                DeleteCommand.removeTask(tasks, command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (formattedCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                FindCommand.findKeyword("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                        tasks, command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                DukeUI.printMessageWithBorders(\"Invalid command given. Please enter a new command.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            FileManager.writeToFile(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            formattedCommand \u003d command.toLowerCase();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        DukeUI.showFarewellMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 45
    }
  },
  {
    "path": "src/main/java/duke/parser/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.parser.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.ui.DukeUI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class AddCommand implements DukeCommands{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void computeEventCommand(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        String[] eventDetails \u003d new String[2];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            extractCommandDetails(eventDetails, command, \"Event\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printAcknowledgement();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            tasks.add(new Event(eventDetails[0], eventDetails[1]));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printMessageWithBorders(\"Description for an Event cannot be left empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"There are now \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printHorizLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void computeDeadlineCommand(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        String[] deadlineDetails \u003d new String[2];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            extractCommandDetails(deadlineDetails, command, \"Deadline\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printAcknowledgement();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            tasks.add(new Deadline(deadlineDetails[0], deadlineDetails[1]));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printMessageWithBorders(\"Description for a Deadline cannot be left empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"There are now \" + tasks.size() +  \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printHorizLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void extractCommandDetails(String[] commandDetails, String command, String commandType)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            throws StringIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        int dividerPos \u003d command.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        commandDetails[0] \u003d command.substring((commandType.equals(\"Deadline\") ? nineChar : sixChar), dividerPos);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        commandDetails[1] \u003d command.substring(dividerPos + 4);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void computeTodoCommand(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String description \u003d command.substring(fiveChar);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printAcknowledgement();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printMessageWithBorders(\"Description for a Todo cannot be left empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"There are now \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printHorizLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 63
    }
  },
  {
    "path": "src/main/java/duke/parser/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.parser.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.ui.DukeUI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class DeleteCommand implements DukeCommands{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void removeTask(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        int indexToDelete \u003d -1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        boolean proceedOnwards \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            indexToDelete \u003d Integer.parseInt(command.substring(sevenChar)) - 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            proceedOnwards \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printMessageWithBorders(\"Please provide a valid number.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        if (proceedOnwards) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                String toDelete \u003d tasks.get(indexToDelete).toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.remove(indexToDelete);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                DukeUI.printMessageWithBorders(\"Noted. I\u0027ve removed this task\" + \"\\n\" + toDelete);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                DukeUI.printMessageWithBorders(\"Number given is not in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                DukeUI.printMessageWithBorders(\"Please provide a valid number.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 30
    }
  },
  {
    "path": "src/main/java/duke/parser/commands/DukeCommands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.parser.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public interface DukeCommands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    int nineChar \u003d 9;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    int sevenChar \u003d 7;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    int sixChar \u003d 6;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    int fiveChar \u003d 5;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 8
    }
  },
  {
    "path": "src/main/java/duke/parser/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.parser.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.ui.DukeUI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class FindCommand implements DukeCommands{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void findKeyword(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        String keyword \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        boolean proceedOnwards \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            keyword \u003d command.substring(fiveChar);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            proceedOnwards \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printMessageWithBorders(\"Find command must be used with a keyword/phrase.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        if (proceedOnwards) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                if (task.getDescription().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                    matchedTasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printMatchingList(matchedTasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void printMatchingList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        DukeUI.printHorizLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(\"Here are the matching tasks on your list: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size() ; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println((i+1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        DukeUI.printHorizLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 38
    }
  },
  {
    "path": "src/main/java/duke/parser/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.parser.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.ui.DukeUI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class ListCommand implements DukeCommands {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void markAsDone(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        int taskNum \u003d -1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        boolean proceedOnwards \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            taskNum \u003d Integer.parseInt(command.substring(fiveChar));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            proceedOnwards \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            DukeUI.printMessageWithBorders(\"Please provide a valid number.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        if (proceedOnwards) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.get(taskNum - 1).setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                DukeUI.printMessageWithBorders(\"Nice! I\u0027ve marked this task as done:\\n\" + \"[\\u2713] \" + tasks.get(taskNum - 1).getDescription());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                DukeUI.printMessageWithBorders(\"Number given is not in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                DukeUI.printMessageWithBorders(\"Please provide a valid number.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        DukeUI.printHorizLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(\"Here are the tasks on your list: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size() ; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println((i+1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        DukeUI.printHorizLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 39
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"D\" + super.convertToFileString() + \" | \" + by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"E\" + super.convertToFileString() + \" | \" + at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \" | \" + getStatus() + \" | \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 34
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"T\" + super.convertToFileString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 18
    }
  },
  {
    "path": "src/main/java/duke/ui/DukeUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class DukeUI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static final String horizLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void printAcknowledgement() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        printMessageWithBorders(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void showFarewellMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        printMessageWithBorders(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void showWelcomeMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        printMessageWithBorders(\"Hello! I\u0027m Duke.\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void printMessageWithBorders(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        printHorizLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        printHorizLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void printHorizLine() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(horizLine);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 28
    }
  }
]
