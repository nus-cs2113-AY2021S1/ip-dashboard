[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import file.FileManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static final String horizLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        showWelcomeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        FileManager.loadFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        executeUserCommand(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void executeUserCommand(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        command \u003d in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        while (!command.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            if (command.toLowerCase().startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                computeTodoCommand(tasks, command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (command.toLowerCase().startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                computeDeadlineCommand(tasks, command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (command.toLowerCase().startsWith(\"event\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                computeEventCommand(tasks, command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (command.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                printList(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (command.toLowerCase().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                markAsDone(tasks, command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else if (command.toLowerCase().startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                removeTask(tasks, command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                printErrorMessage(\"Invalid command given. Please enter a new command.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            FileManager.writeToFile(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        showFarewellMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void markAsDone(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        int taskNum \u003d -1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        boolean proceedOnwards \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            taskNum \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            proceedOnwards \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printErrorMessage(\"Please provide a valid number.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        if (proceedOnwards) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.get(taskNum - 1).setDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + \"[\\u2713] \" + tasks.get(taskNum - 1).getDescription());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                printErrorMessage(\"Number given is not in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                printErrorMessage(\"Please provide a valid number.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(\"Here are the tasks on your list: \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size() ; i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println((i+1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void computeEventCommand(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        String[] eventDetails \u003d new String[2];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            extractCommandDetails(eventDetails, command, \"Event\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printAcknowledgement();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            tasks.add(new Event(eventDetails[0], eventDetails[1]));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"There are now \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printErrorMessage(\"Description for an Event cannot be left empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void computeDeadlineCommand(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        String[] deadlineDetails \u003d new String[2];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            extractCommandDetails(deadlineDetails, command, \"Deadline\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printAcknowledgement();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            tasks.add(new Deadline(deadlineDetails[0], deadlineDetails[1]));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"There are now \" + tasks.size() +  \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printErrorMessage(\"Description for a Deadline cannot be left empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void extractCommandDetails(String[] commandDetails, String command, String commandType)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            throws StringIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        int dividerPos \u003d command.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        commandDetails[0] \u003d command.substring((commandType.equals(\"Deadline\") ? 9 : 6), dividerPos);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        commandDetails[1] \u003d command.substring(dividerPos + 4);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void computeTodoCommand(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String description \u003d command.substring(5);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printAcknowledgement();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"There are now \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printErrorMessage(\"Description for a Todo cannot be left empty.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void removeTask(ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        int indexToDelete \u003d -1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        boolean proceedOnwards \u003d false;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            indexToDelete \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            proceedOnwards \u003d true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            printErrorMessage(\"Please provide a valid number.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        if (proceedOnwards) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                String toDelete \u003d tasks.get(indexToDelete).toString();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.remove(indexToDelete);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                System.out.println(toDelete);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                printErrorMessage(\"Number given is not in the list.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                printErrorMessage(\"Please provide a valid number.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void printAcknowledgement() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void showFarewellMessage() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void showWelcomeMessage() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    private static void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 181
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"D\" + super.convertToFileString() + \" | \" + by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"E\" + super.convertToFileString() + \" | \" + at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \" | \" + getStatus() + \" | \" + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 34
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public String convertToFileString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        return \"T\" + super.convertToFileString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 18
    }
  },
  {
    "path": "src/main/java/file/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xuche123"
        },
        "content": "package file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xuche123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xuche123"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static final String fileName \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void loadFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        File dukeTxt \u003d new File(fileName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        if (dukeTxt.createNewFile()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"File does not exist. New file duke.txt created.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(\"File found and loaded.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            System.out.println(Duke.horizLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        Scanner scanner \u003d new Scanner(dukeTxt);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String taskData \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            char taskType \u003d taskData.charAt(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            boolean isDone \u003d (taskData.charAt(4) \u003d\u003d \u00271\u0027);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String taskDetails \u003d taskData.substring(8);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String taskDescription \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            String taskTiming \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            if (taskType !\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                int dividerPos \u003d taskDetails.indexOf(\u0027|\u0027);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                taskDescription \u003d taskDetails.substring(0, dividerPos-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                taskTiming \u003d taskDetails.substring(dividerPos + 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.add(new Todo(taskDetails));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.add(new Deadline(taskDescription, taskTiming));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.add(new Event(taskDescription, taskTiming));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xuche123"
        },
        "content": "                tasks.get(tasks.size() - 1).setDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xuche123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        for (Task task:tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xuche123"
        },
        "content": "            fw.write(task.convertToFileString() + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xuche123"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xuche123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xuche123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xuche123": 64
    }
  }
]
