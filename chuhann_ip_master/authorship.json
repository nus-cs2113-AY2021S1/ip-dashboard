[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "chuhann": 1,
      "-": 25
    }
  },
  {
    "path": "filename.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "T | false | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": "D | false | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "E | false | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "T | true | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "T | false | project"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": "D | false | assignment 1  | sept 23rd"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "E | false | meetup  | sept 25th"
      }
    ],
    "authorContributionMap": {
      "chuhann": 7
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        super(description, \"D\", by);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Prints out all the items in the inventory"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of items added"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void listInventory(ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        for(int i \u003d 0; i \u003c inventory.size(); i++){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.print(i+1 +\".\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(inventory.get(i));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Mark item in the inventory as checked"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void checkInventory(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"done \",\"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            int index \u003d Integer.parseInt(line) -1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.get(index).setIsChecked(true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(inventory.get(index)+\"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Item is not in List ! Please try with another valid index\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }catch(NumberFormatException e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Please enter a valid number !\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Remove item from the inventory"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void deleteItem(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"delete \",\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            int index \u003d Integer.parseInt(line) -1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.get(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(inventory.get(index));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.remove(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Now you have \"+inventory.size()+\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Item is not in List ! Please try with another valid index\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }catch(NumberFormatException e){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Please enter a valid number !\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Add todo item into inventory"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void todoTask(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            // Add items to Todo list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"todo\",\"\").trim();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if(line.equals(\"\")){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                throw new TaskException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            Todo todo \u003d new Todo(line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.add(todo);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(todo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Now you have \"+inventory.size()+\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Add deadline task to inventory"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void deadlineTask(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            String by;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"deadline\",\"\").trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if(line.equals(\"\")){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                throw new TaskException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            by \u003d line.substring(line.lastIndexOf(\"/by\") + 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.substring(0,line.lastIndexOf(\"/by \"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            by \u003d by.replace(\"by \",\"\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            Deadline deadline \u003d new Deadline(line, by);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.add(deadline);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(deadline);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Now you have \"+inventory.size()+\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Please use \u0027/by\u0027 to specify date\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Add event task to inventory"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void eventTask(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            String at;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"event\",\"\").trim();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if(line.equals(\"\")){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                throw new TaskException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            at \u003d line.substring(line.lastIndexOf(\"/at \") + 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.substring(0,line.lastIndexOf(\"/at \"));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            at \u003d at.replace(\"at \",\"\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            Event event \u003d new Event(line, at);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.add(event);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Now you have \"+inventory.size()+\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Please use \u0027/at\u0027 to specify date\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Saves record to a file"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void saveToFile(ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        String records \u003d \"\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        for(int i \u003d 0; i \u003c inventory.size(); i++){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            records +\u003d inventory.get(i).getTag() +\" | \";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            records +\u003d (boolean)inventory.get(i).getIsChecked()+\" | \";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            records +\u003d inventory.get(i).getItems();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if(inventory.get(i).getTag().equals(\"D\") || inventory.get(i).getTag().equals(\"E\")){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                records +\u003d \" | \"+inventory.get(i).getDuration();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            records +\u003d \"\\n\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(records);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            File file \u003d new File(\"C:\\\\Users\\\\chuha\\\\Documents\\\\ip\\\\filename.txt\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if(!file.exists()){"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            writer.write(records);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Records saved in :\"+file.getName());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"File not found !\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"File cannot be opened !\\n\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Reads record from a file"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @return updated inventory"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static ArrayList\u003cTask\u003e readFromFile(ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        File file \u003d new File(\"C:\\\\Users\\\\chuha\\\\Documents\\\\ip\\\\filename.txt\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        if(file.exists()){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                String strCurrentLine;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                while ((strCurrentLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    String record [] \u003d strCurrentLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    if(record[0].equals(\"T\")){"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        Todo todo \u003d new Todo(record[2]);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        todo.isChecked \u003d Boolean.parseBoolean(record[1]);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        inventory.add(todo);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    }else if(record[0].equals(\"D\")){"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        Deadline deadline \u003d new Deadline(record[2], record[3]);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        deadline.isChecked \u003d Boolean.parseBoolean(record[1]);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        inventory.add(deadline);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    }else if(record[0].equals(\"E\")){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        Event event \u003d new Event(record[2], record[3]);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        event.isChecked \u003d Boolean.parseBoolean(record[1]);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                        inventory.add(event);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                System.out.println(\"File not found !\\n\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }catch (IOException e) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                System.out.println(\"File cannot be opened !\\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return inventory;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        String intro \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        String bye \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        ArrayList\u003cTask\u003e inventory \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        inventory \u003d readFromFile(inventory);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        // Takes in user input until \"bye\" is entered by user"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        while (!line.equals(\"bye\")){"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                if (line.equals(\"list\")){"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    // List inventory"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    listInventory(inventory);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }else if(line.startsWith(\"done\")){"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    // check items"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    checkInventory(line, inventory);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                } else if(line.startsWith(\"todo\")){"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    // Add items to Todo list"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    todoTask(line, inventory);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                } else if (line.startsWith(\"deadline\")){"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    //Add items to Deadline list"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    deadlineTask(line, inventory);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                } else if (line.startsWith(\"event\")){"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    //Add items to Event list"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    eventTask(line, inventory);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }else if (line.startsWith(\"delete\")){"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    //Delete items in Inventory"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    deleteItem(line, inventory);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }else if(line.equals(\"save\")){"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    //Save records to file"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    saveToFile(inventory);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    //Invalid command"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        // Exit message todo “Answer CS2113 tutorial questions” todo “Answer CS2113 tutorial questions”"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        if(line.equals(\"bye\")){"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(bye);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 265,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 5
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    //protected String tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        super(description,\"E\", at);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 17
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String items;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected Boolean isChecked;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Task(String items, String tag, String duration){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.isChecked \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public void setDuration(String duration) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String getItems() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public void setItems(String items) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Boolean getIsChecked() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return isChecked;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public void setIsChecked(Boolean isChecked) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.isChecked \u003d isChecked;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String getTag() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return tag;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public void setTag(String tag) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        if (isChecked){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            return \"[✓] \" + this.items;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            return \"[✗] \" + this.items;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuhann": 58
    }
  },
  {
    "path": "src/main/java/duke/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class TaskException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 4
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        super(description, \"T\", null);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chuhann": 2,
      "-": 19
    }
  }
]
