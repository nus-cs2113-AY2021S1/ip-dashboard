[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "chuhann": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Prints out all the items in the inventory"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of items added"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void listInventory(ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        for(int i \u003d 0; i \u003c inventory.size(); i++){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.print(i+1 +\".\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(inventory.get(i));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Mark item in the inventory as checked"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void checkInventory(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"done \",\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            int index \u003d Integer.parseInt(line) -1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.get(index).setIsChecked(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(inventory.get(index)+\"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Item is not in List ! Please try with another valid index\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }catch(NumberFormatException e){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Please enter a valid number !\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Add todo item into inventory"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void todoTask(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            // Add items to Todo list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"todo\",\"\").trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if(line.equals(\"\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                throw new TaskException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            Todo todo \u003d new Todo(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.add(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(todo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Now you have \"+inventory.size()+\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Add deadline task to inventory"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void deadlineTask(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            String by;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"deadline\",\"\").trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if(line.equals(\"\")){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                throw new TaskException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            by \u003d line.substring(line.lastIndexOf(\"/by\") + 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.substring(0,line.lastIndexOf(\"/by \"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            by \u003d by.replace(\"by \",\"\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            Deadline deadline \u003d new Deadline(line, by);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.add(deadline);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(deadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Now you have \"+inventory.size()+\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Please use \u0027/by\u0027 to specify date\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * Add event task to inventory"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param line line of command string"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     * @param inventory inventory of all items"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuhann"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void eventTask(String line, ArrayList\u003cTask\u003e inventory){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            String at;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.replace(\"event\",\"\").trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            if(line.equals(\"\")){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                throw new TaskException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            at \u003d line.substring(line.lastIndexOf(\"/at \") + 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d line.substring(0,line.lastIndexOf(\"/at \"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            at \u003d at.replace(\"at \",\"\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            Event event \u003d new Event(line, at);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            inventory.add(event);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Now you have \"+inventory.size()+\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(\"Please use \u0027/at\u0027 to specify date\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        String intro \u003d \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        String bye \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        ArrayList\u003cTask\u003e inventory \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        // Takes in user input until \"bye\" is entered by user"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        while (!line.equals(\"bye\")){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                if (line.equals(\"list\")){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    // List inventory"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    listInventory(inventory);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }else if(line.startsWith(\"done\")){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    // check items"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    checkInventory(line, inventory);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                } else if(line.startsWith(\"todo\")){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    // Add items to Todo list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    todoTask(line, inventory);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                } else if (line.startsWith(\"deadline\")){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    //Add items to Deadline list"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    deadlineTask(line, inventory);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                } else if (line.startsWith(\"event\")){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    //Add items to Event list"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    eventTask(line, inventory);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    //Invalid command"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chuhann"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        // Exit message todo “Answer CS2113 tutorial questions” todo “Answer CS2113 tutorial questions”"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        if(line.equals(\"bye\")){"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            System.out.println(bye);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 165,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 5
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 16
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String items;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected Boolean isChecked;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Task(String items){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.isChecked \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String getItems() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public void setItems(String items) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Boolean getIsChecked() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return isChecked;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public void setIsChecked(Boolean isChecked) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.isChecked \u003d isChecked;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        if (isChecked){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            return \"[✓] \" + this.items;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuhann"
        },
        "content": "            return \"[✗] \" + this.items;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuhann": 39
    }
  },
  {
    "path": "src/main/java/duke/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class TaskException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 4
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuhann"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuhann"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuhann"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuhann"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuhann"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuhann"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuhann": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuhann"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuhann"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chuhann": 2,
      "-": 19
    }
  }
]
