[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    private Parser parse;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        parse \u003d new Parser();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            tasks \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            ui.showInvalidFileFormatExceptionMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            String commandType \u003d parse.getCommandType(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            String commandArgs \u003d parse.getCommandArgs(userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case COMMAND_TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    Task todoTask \u003d tasks.addTodo(parse.getDescription(commandArgs));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    ui.showAddTaskMessage(tasks, todoTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    Task deadlineTask \u003d tasks.addDeadline(parse.getDescription(commandArgs), parse.getDate(commandArgs));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    ui.showAddTaskMessage(tasks, deadlineTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case COMMAND_EVENT:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    Task eventTask \u003d tasks.addEvent(parse.getDescription(commandArgs), parse.getDate(commandArgs));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    ui.showAddTaskMessage(tasks, eventTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case COMMAND_DONE:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    Task taskToBeMarkedAsDone \u003d tasks.markTaskAsDone(parse.getIndex(commandArgs));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    taskToBeMarkedAsDone.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    ui.showTaskDoneMessage(taskToBeMarkedAsDone);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case COMMAND_LIST:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    ui.showTaskList(tasks.getTaskList());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case COMMAND_DELETE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    Task taskToBeDeleted \u003d tasks.deleteTask(parse.getIndex(commandArgs));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    ui.showTaskDeletedMessage(tasks, taskToBeDeleted);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case COMMAND_FIND:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    ui.showFilteredTaskList(tasks.getTaskList(), commandArgs);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case COMMAND_BYE:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    ui.showExitMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                ui.showInvalidCommandExceptionMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            } catch (InvalidDateArgsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                ui.showInvalidDateArgsExceptionMessage(commandType);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            } catch (NullDescriptionException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                ui.showNullDescriptionExceptionMessage(commandType);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            } catch (NullIndexException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                ui.showNullIndexExceptionMessage(commandType);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            } catch (NullStringException e)  {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                ui.showNullStringExceptionMessage();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                ui.showInvalidDateInputExceptionMessage();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        new Duke(FILE_PATH).run();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "czlin98": 106,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.exceptions.InvalidDateArgsException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.exceptions.NullDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.exceptions.NullIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_WORD_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DEADLINE_DELIMITER \u003d \"/by\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String EVENT_DELIMITER \u003d \"/at\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String getCommandType(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String[] commandTypeAndParams;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String commandType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (userInput.contains(COMMAND_WORD_DELIMITER)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            commandTypeAndParams \u003d userInput.split(COMMAND_WORD_DELIMITER, 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            commandType \u003d commandTypeAndParams[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            commandType \u003d userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String getCommandArgs(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String[] commandTypeAndParams;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String commandArgs;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (userInput.contains(COMMAND_WORD_DELIMITER)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            commandTypeAndParams \u003d userInput.split(COMMAND_WORD_DELIMITER, 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            commandArgs \u003d commandTypeAndParams[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            commandArgs \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return commandArgs;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String getDescription(String commandArgs) throws NullDescriptionException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String[] descriptionAndDate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (commandArgs \u003d\u003d null || commandArgs.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            throw new NullDescriptionException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (commandArgs.contains(DEADLINE_DELIMITER)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            descriptionAndDate \u003d commandArgs.split(DEADLINE_DELIMITER, 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            description \u003d descriptionAndDate[0].trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        else if (commandArgs.contains(EVENT_DELIMITER)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            descriptionAndDate \u003d commandArgs.split(EVENT_DELIMITER, 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            description \u003d descriptionAndDate[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            description \u003d commandArgs;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public LocalDate getDate(String commandArgs) throws InvalidDateArgsException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String[] descriptionAndDate;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        String date \u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (!(commandArgs.contains(DEADLINE_DELIMITER) || commandArgs.contains(EVENT_DELIMITER))) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            throw new InvalidDateArgsException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (commandArgs.contains(DEADLINE_DELIMITER)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            descriptionAndDate \u003d commandArgs.split(DEADLINE_DELIMITER, 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            date \u003d descriptionAndDate[1].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        else if (commandArgs.contains(EVENT_DELIMITER)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            descriptionAndDate \u003d commandArgs.split(EVENT_DELIMITER, 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            date \u003d descriptionAndDate[1].trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public int getIndex(String commandArgs) throws NullIndexException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (commandArgs \u003d\u003d null || commandArgs.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            throw new NullIndexException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        int index \u003d Integer.parseInt(commandArgs) - 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 86
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String LETTER_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String LETTER_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String LETTER_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_SOMETHING_WENT_WRONG \u003d \"Something went wrong: \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String FILE_DELIMITER \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String OUTPUT_FORMAT \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() throws FileNotFoundException, DateTimeParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                String taskLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                String[] taskTypeAndParams \u003d taskLine.split(FILE_DELIMITER);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                String taskType \u003d taskTypeAndParams[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                String taskDoneStatus \u003d taskTypeAndParams[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                String taskDescription \u003d taskTypeAndParams[2];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case LETTER_TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    tasks.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case LETTER_DEADLINE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    String deadlineDate \u003d taskTypeAndParams[3];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    tasks.add(new Deadline(taskDescription, LocalDate.parse(deadlineDate, DateTimeFormatter.ofPattern(OUTPUT_FORMAT))));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                case LETTER_EVENT:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    String eventDate \u003d taskTypeAndParams[3];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    tasks.add(new Event(taskDescription, LocalDate.parse(eventDate, DateTimeFormatter.ofPattern(OUTPUT_FORMAT))));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    throw new FileNotFoundException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                if (taskDoneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void writeToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            FileWriter filewriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                filewriter.write(task.toSave() + System.lineSeparator());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            filewriter.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            System.out.println(MESSAGE_SOMETHING_WENT_WRONG + e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 87
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Task addTodo(String todoDescription) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        Todo todoTask \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        taskList.add(todoTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return todoTask;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Task addDeadline(String deadlineDescription, LocalDate deadlineDate) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        Deadline deadlineTask \u003d new Deadline(deadlineDescription, deadlineDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        taskList.add(deadlineTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return deadlineTask;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Task addEvent(String eventDescription, LocalDate eventDate) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        Event eventTask \u003d new Event(eventDescription, eventDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        taskList.add(eventTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return eventTask;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Task markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 56
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.exceptions.NullStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DIVIDER_TOP \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DIVIDER_BOTTOM \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_PREFIX \u003d \"     \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String TASK_PREFIX \u003d \"       \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_GREET_A \u003d \"Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_GREET_B \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_LIST \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_LIST_NO_TASKS \u003d \"There are no tasks in your list yet.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_ADD_TASK \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_TASK_COUNT_A \u003d \"Now you have \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_TASK_COUNT_B \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String PERIOD \u003d \".\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_NULL_COMMAND_ARGS_A \u003d \"☹ OOPS!!! The description of a \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String NULL_COMMAND_ARGS_B \u003d \" cannot be empty.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_NULL_INDEX_DONE_A \u003d \"☹ OOPS!!! The index of the task to be marked as done\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_NULL_INDEX_DONE_B \u003d \"cannot be empty.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_NULL_INDEX_DELETE_A \u003d \"☹ OOPS!!! The index of the task to be deleted cannot be\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_NULL_INDEX_DELETE_B \u003d \"empty.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"No existing file detected\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_NEW_FILE_CREATED \u003d \"New file created\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_ARGS_A \u003d \"☹ OOPS!!! The input format for the \";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_ARGS_B \u003d \" is not valid.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_INPUT \u003d \"☹ OOPS!!! The format of the date entered is not valid\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_INVALID_FILE_FORMAT \u003d \"☹ OOPS!!! The format of the file to be read is not valid.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_FILTERED_LIST \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_NULL_STRING_A \u003d \"☹ OOPS!!! The keyword you want to search for cannot be\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String MESSAGE_NULL_STRING_B \u003d \"empty.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_GREET_A);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_GREET_B);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showInvalidCommandExceptionMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showInvalidDateArgsExceptionMessage(String commandType) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_INVALID_DATE_ARGS_A + commandType + MESSAGE_INVALID_DATE_ARGS_B);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showInvalidDateInputExceptionMessage() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_INVALID_DATE_INPUT);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showInvalidFileFormatExceptionMessage() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_INVALID_FILE_FORMAT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showNullDescriptionExceptionMessage(String commandType) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_NULL_COMMAND_ARGS_A + commandType + NULL_COMMAND_ARGS_B);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showNullIndexExceptionMessage(String commandType) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + MESSAGE_NULL_INDEX_DONE_A);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + MESSAGE_NULL_INDEX_DONE_B);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + MESSAGE_NULL_INDEX_DELETE_A);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + MESSAGE_NULL_INDEX_DELETE_B);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showAddTaskMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_ADD_TASK);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(TASK_PREFIX + task.toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_TASK_COUNT_A + tasks.getTaskList().size() + MESSAGE_TASK_COUNT_B);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showTaskDoneMessage(Task task) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_DONE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(TASK_PREFIX + task.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + MESSAGE_LIST_NO_TASKS);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + MESSAGE_LIST);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            tasks.stream()"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                    .forEach((t) -\u003e System.out.println(MESSAGE_PREFIX + (tasks.indexOf(t) + 1) + PERIOD + t.toString()));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showTaskDeletedMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_DELETE_TASK);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(TASK_PREFIX + task.toString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_TASK_COUNT_A + tasks.getTaskList().size() + MESSAGE_TASK_COUNT_B);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_BYE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_NEW_FILE_CREATED);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showFilteredTaskList(ArrayList\u003cTask\u003e tasks, String filterString) throws NullStringException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        if (filterString \u003d\u003d null || filterString.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            throw new NullStringException();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_FILTERED_LIST);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTaskList \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                .filter((s) -\u003e s.getDescription().contains(filterString))"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "czlin98"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        for (Task t : filteredTaskList) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "czlin98"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + (filteredTaskList.indexOf(t) + 1) + PERIOD + t.toString());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void showNullStringExceptionMessage() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_TOP);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_NULL_STRING_A);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(MESSAGE_PREFIX + MESSAGE_NULL_STRING_B);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        System.out.println(DIVIDER_BOTTOM);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 169
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDateArgsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class InvalidDateArgsException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NullDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class NullDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NullIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class NullIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NullStringException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class NullStringException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 4
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String ICON_DEADLINE \u003d \"[D]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DATE_PREFIX \u003d \" (by: \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DATE_POSTFIX \u003d \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String LETTER_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DELIMITER \u003d \" | \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String OUTPUT_FORMAT \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return ICON_DEADLINE + super.toString() + DATE_PREFIX + date.format(DateTimeFormatter.ofPattern(OUTPUT_FORMAT)) + DATE_POSTFIX;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return LETTER_DEADLINE + DELIMITER + super.toSave() + DELIMITER + date.format(DateTimeFormatter.ofPattern(OUTPUT_FORMAT));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 30
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String ICON_EVENT \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DATE_PREFIX \u003d \" (at: \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DATE_POSTFIX \u003d \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String LETTER_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DELIMITER \u003d \" | \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String OUTPUT_FORMAT \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return ICON_EVENT + super.toString() + DATE_PREFIX + date.format(DateTimeFormatter.ofPattern(OUTPUT_FORMAT)) + DATE_POSTFIX;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return LETTER_EVENT + DELIMITER + super.toSave() + DELIMITER + date.format(DateTimeFormatter.ofPattern(OUTPUT_FORMAT));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 30
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String YES \u003d \"Y\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String NO \u003d \"N\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String BRACKET_OPEN \u003d \"[\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String BRACKET_CLOSE \u003d \"] \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String TRUE \u003d \"1\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String FALSE \u003d \"0\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DELIMITER \u003d \" | \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return (isDone ? YES : NO);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return BRACKET_OPEN + getStatusIcon() + BRACKET_CLOSE + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return (isDone ? TRUE : FALSE) + DELIMITER + description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "czlin98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "czlin98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String ICON_TODO \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String LETTER_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public static final String DELIMITER \u003d \" | \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return ICON_TODO + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "czlin98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "czlin98"
        },
        "content": "        return LETTER_TODO + DELIMITER + super.toSave();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "czlin98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "czlin98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "czlin98": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "czlin98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "czlin98": 1,
      "-": 20
    }
  }
]
