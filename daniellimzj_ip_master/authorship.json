[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "# Daniel Flavoured Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "This is my project done as part of a Software Engineering module in unviersity. It\u0027s named after the Java mascot _Duke_. Please refer to the User Guide in the `/docs` folder. You can also find it [here!](https://daniellimzj.github.io/ip/)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 2,
      "-": 2
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "T~#~âœ˜~#~help"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Duke is a desktop app for keeping track of your daily todos, events and deadlines, optimized for use via a Command Line Interface (CLI). For fast typists, using Duke can be faster than traditional Graphical User Interface (GUI) apps."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "* [Accessing Duke](#accessing-duke)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Setting Up in IntelliJ](#setting-up-in-intellij) "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Running the JAR file](#running-the-jar-file)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "* [Commands and Usage](#commands-and-usage)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [General Notes](#general-notes)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Adding a todo: `todo`](#adding-a-todo)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Adding an event: `event`](#adding-an-event)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Adding a deadline: `deadline`](#adding-a-deadline)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Displaying the list: `list`](#displaying-the-list)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Marking a task as done: `done`](#marking-a-task-as-done)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Deleting a task: `delete`](#deleting-a-task)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Finding a task: `find`](#finding-a-task)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    * [Exiting the program:`bye`](#exiting-the-program)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "## Accessing Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Setting Up in IntelliJ"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "One way to chat with Duke is through an IDE like IntelliJ."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Prerequisites: JDK 11, update IntelliJ to the most recent version."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. Import the project into IntelliJ as follows:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     _________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    | Hello! I\u0027m Duke         |"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    | What can I do for you?  |"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    | ________________________|"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    |/"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Running the JAR File"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Another way to chat with Duke is by running the JAR file directly."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Below are the instructions for how to run the JAR file on Windows."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. Drag the JAR file to an empty folder."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. Run your command prompt by pressing `Windows + \u0027R\u0027` or otherwise."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. Navigate to the folder that the JAR file is in."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. Type `chcp 65001` and press `Enter`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1. Run the JAR file by using the command `java -Dfile.encoding\u003dUTF-8 -jar ip.jar`. You should see something like below:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     _________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    | Hello! I\u0027m Duke         |"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    | What can I do for you?  |"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    | ________________________|"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    |/"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "If the status icons in lists do not display properly, experiment with changing the font used in the command prompt. One font that works is NSimSun."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "## Commands and Usage"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### General Notes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "- In the following section, all capitalised words in code represent parameters. e.g. `PARAMETER`."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "- All `DATETIME` parameters must be in a `dd-mm-yy hh:mm` format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Adding a todo"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "The `todo` command adds a to-do with `DESCRIPTION` to the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Usage: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Example: `todo buy groceries!!!`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Expected Output: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "[T][âœ˜] buy groceries!!!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Adding an event"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "The `event` command adds an event with `DESCRIPTION` at `DATETIME` to the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Usage: `event DESCRIPTION /at DATETIME`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Example: `event my first midterm exam /at 01-10-20 10:01`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Expected Output: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "  [E][âœ˜] my first midterm exam (at: 01-10-20 10:01)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": " "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Adding a deadline"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "The `deadline` command adds a deadline with `DESCRIPTION` to be done by `DATETIME` to the list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Usage: `deadline DESCRIPTION /by DATETIME`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Example: `deadline my homework /by 31-12-20 23:59`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Expected Output: "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "  [D][âœ˜] my homework (by: 31-12-20 23:59)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Displaying the list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "The `list` command shows all the tasks in the list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Usage: `list`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Example: `list`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Expected Output:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1.[T][âœ˜] buy groceries!!!"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "2.[E][âœ˜] my first midterm exam (at: 01-10-20 10:01)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "3.[D][âœ˜] my homework (by: 31-12-20 23:59)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Marking a task as done"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "The `done` command marks the task in the list at that `INDEX` as done."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Usage: `done INDEX`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Example: `done 1` "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Expected Output: "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "[T][âœ“] buy groceries!!!"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Deleting a task"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "The `delete` command deletes the task in the list at a particular `INDEX`."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Usage: `delete INDEX`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Example: `delete 3`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Expected Output: "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Nice! I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "[D][âœ˜] my homework (by: 31-12-20 23:59)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Finding a task"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "The `find` command shows all the tasks in the list containing a `KEYWORD`."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Usage: `find KEYWORD`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Example: `find groceries`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Expected Output: "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Here are the matching tasks in the list:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "1.[T][âœ“] buy groceries!!!"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "### Exiting the program"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "The `bye` command exits the program and saves your tasks to a file for future usage."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Usage: `bye`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Example: `bye`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Expected Output: "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Command | Format | Example"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "------- | ------ | -------"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Add todo | `todo DESCRIPTION` | `todo buy groceries!!!`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Add event | `event DESCRIPTION /at DATETIME` | `event my first midterm exam /at 01-10-20 10:01`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Add deadline | `deadline DESCRIPTION /by DATETIME` | `deadline my homework /by 31-12-20 23:59`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "List | `list` | `list`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Done | `done INDEX` | `done 1`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Delete | `delete INDEX` | `delete 3`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Find | `find KEYWORD` | `find groceries`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "Exit | `bye` | `bye`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 194,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            ui.printGenericErrorMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        parser.runConversation(tasks, ui);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            storage.writeTasksToFile(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            ui.printGenericErrorMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        ui.printByeMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 41,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 8
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static final int INDEX_DESCRIPTION \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static final int INDEX_BY \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static final int INDEX_AT \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the parameter taken as the command word for adding a type of Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param param The type of Task whose parameter is desired."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Command word for adding a type of Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static String getParam(String param) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        switch(param) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            return PARAM_TODO;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            return PARAM_EVENT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            return PARAM_DEADLINE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            return \"command\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean isListCommand(String nextLine) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.equals(PARAM_LIST);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean isByeCommand(String nextLine) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.equals(PARAM_BYE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean isDoneCommand(String nextLine) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.startsWith(PARAM_DONE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean isDeleteCommand(String nextLine) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.startsWith(PARAM_DELETE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean isAddToDoCommand(String nextLine) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.startsWith(PARAM_TODO);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean isAddDeadlineCommand(String nextLine) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.startsWith(PARAM_DEADLINE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean isAddEventCommand(String nextLine) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.startsWith(PARAM_EVENT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean isFindCommand(String nextLine) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.startsWith(PARAM_FIND);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the index at which the desired Task should be marked done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param nextLine Command inputted by user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Index at which desired Task should be marked done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public int getIndexToMarkAsDone(String nextLine) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return Integer.parseInt(nextLine.substring(PARAM_DONE.length()).trim()) - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the index at which the desired Task should be deleted."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param nextLine Command inputted by user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Index at which desired Task should be deleted."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public int getIndexToDelete(String nextLine) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return Integer.parseInt(nextLine.substring(PARAM_DELETE.length()).trim()) - 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns description of ToDo."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param nextLine Command inputted by user."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Description of the ToDo as a String."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @throws DukeException If no description is provided."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String getToDoParams(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String[] input \u003d nextLine.split(\" \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.substring(nextLine.indexOf(PARAM_TODO) + PARAM_TODO.length()).trim();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns description and \u0027by\u0027 of Deadline."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param nextLine Command inputted by user."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Description and \u0027by\u0027 of Deadline as Strings."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @throws DukeException If no description is provided."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String[] getDeadlineParams(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String[] params \u003d new String[2];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String deadline \u003d nextLine.substring(PARAM_DEADLINE.length());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int firstIndexOfByCommand \u003d deadline.indexOf(PARAM_BY);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int lastIndexOfByCommand \u003d firstIndexOfByCommand + PARAM_BY.length();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        params[INDEX_DESCRIPTION] \u003d deadline.substring(0, firstIndexOfByCommand).trim();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        params[INDEX_BY] \u003d deadline.substring(lastIndexOfByCommand).trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        if (params[INDEX_DESCRIPTION].isBlank()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return params;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns description and \u0027at\u0027 of Event."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param nextLine Command inputted by user."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Description and \u0027at\u0027 of Event as Strings."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @throws DukeException If no description is provided."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String[] getEventParams(String nextLine) throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String[] params \u003d new String[2];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String event \u003d nextLine.substring(PARAM_EVENT.length());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int firstIndexOfAtCommand \u003d event.indexOf(PARAM_AT);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int lastIndexOfAtCommand \u003d firstIndexOfAtCommand + PARAM_AT.length();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        params[INDEX_DESCRIPTION] \u003d event.substring(0, firstIndexOfAtCommand).trim();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        params[INDEX_AT] \u003d event.substring(lastIndexOfAtCommand).trim();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        if (params[INDEX_DESCRIPTION].isBlank()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return params;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the keyword used to find Tasks in the TaskList."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param nextLine Command inputted by user."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Keyword to search for."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String getFindParams(String nextLine) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return nextLine.substring(PARAM_FIND.length()).trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Runs the conversation between Duke and the user."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param tasks The TaskList holding all saved Tasks so far."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param ui The Ui to print messages to the user."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void runConversation(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String nextLine \u003d ui.getNextLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        while (!isByeCommand(nextLine)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            if (isListCommand(nextLine)) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                ui.printList(tasks);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (isDoneCommand(nextLine)) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    int taskNumber \u003d getIndexToMarkAsDone(nextLine);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    tasks.markTaskAsDone(taskNumber);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDoneTaskMessage(tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDoneErrorMessage();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printTaskNumberErrorMessage();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (isDeleteCommand(nextLine)) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    int taskNumber \u003d getIndexToDelete(nextLine);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Task deletedTask \u003d tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDeleteTaskMessage(deletedTask, tasks);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDoneErrorMessage();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printTaskNumberErrorMessage();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (isAddToDoCommand(nextLine)) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    tasks.addToDo(getToDoParams(nextLine));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printAddTaskMessage(tasks);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDescriptionErrorMessage(Parser.getParam(\"todo\"));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (isAddDeadlineCommand(nextLine)) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    tasks.addDeadline(getDeadlineParams(nextLine));"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printAddTaskMessage(tasks);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (StringIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDescriptionErrorMessage(Parser.getParam(\"deadline\"));"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDateTimeParseErrorMessage();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (isAddEventCommand(nextLine)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    tasks.addEvent(getEventParams(nextLine));"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printAddTaskMessage(tasks);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (StringIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDescriptionErrorMessage(Parser.getParam(\"event\"));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    ui.printDateTimeParseErrorMessage();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (isFindCommand(nextLine)) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                ArrayList\u003cTask\u003e filteredTaskList \u003d tasks.findTasks(getFindParams(nextLine));"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                ui.printFilteredList(filteredTaskList);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                ui.printUnknownMessage();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            nextLine \u003d ui.getNextLine();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 253
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private String directoryPath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.directoryPath \u003d filePath.substring(0, filePath.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private boolean getTasksFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return Files.exists(Paths.get(filePath));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private void createTasksFile() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        Files.createDirectory(Paths.get(directoryPath));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        Files.createFile(Paths.get(filePath));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns an ArrayList of Tasks that were previously saved to the file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return ArrayList of previously saved Tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @throws DukeException If there is a problem with the contents of the file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @throws FileNotFoundException If there is a problem opening the file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private ArrayList\u003cTask\u003e processFileContents() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            String[] task \u003d line.split(Task.getSeparator());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            switch (task[0]) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                tasks.add(new ToDo(task[2]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                tasks.get(i).setIsDone(task[1].equals(Task.getTick()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                tasks.add(new Event(task[2], task[3]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                tasks.get(i).setIsDone(task[1].equals(Task.getTick()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                tasks.add(new Deadline(task[2], task[3]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                tasks.get(i).setIsDone(task[1].equals(Task.getTick()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns ArrayList of Tasks that were previously saved."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * If no tasks were saved, an empty save file is created and an empty ArrayList is returned."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return ArrayList of previously saved Tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @throws IOException If there is an error creating the empty save file, or reading from an existing file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @throws DukeException If there is a problem with the file contents."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        if (!getTasksFile()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            createTasksFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            tasks \u003d processFileContents();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Writes all current Tasks to the save file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param tasks TaskList of all current Tasks."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @throws IOException if there is a problem opening or writing to the file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void writeTasksToFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            fw.append(tasks.getTask(i).printToFile() + \"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 112
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by.trim(), formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the \u0027by\u0027 of the Deadline in LocalDateTime format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return \u0027by\u0027 of the Deadline in LocalDateTimeFormat."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Sets the \u0027by\u0027 of the Deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param by \u0027by\u0027 in String format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by.trim(), formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the \u0027by\u0027 in a formatted String."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return \u0027by\u0027 as a formatted String."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String formatByForPrint() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return by.format(formatter);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatByForPrint() + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns a String to be written to files when the Deadline is saved."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Deadline as a formatted String to be saved to files."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"D\"+ SEPARATOR + super.printToFile() + SEPARATOR + formatByForPrint();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at.trim(), formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the \u0027at\u0027 of the Event in LocalDateTime format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return \u0027at\u0027 of the Event in LocalDateTime format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public LocalDateTime getAt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Sets the \u0027at\u0027 of the Event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param at \u0027at\u0027 in String format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at.trim(), formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the \u0027at\u0027 in a formatted String."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return \u0027at\u0027 as a formatted String."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String formatAtForPrint() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return at.format(formatter);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formatAtForPrint() + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns a String to be written to files when the Event is saved."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Event as a formatted String to be saved to files."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"E\"+ SEPARATOR + super.printToFile() + SEPARATOR + formatAtForPrint();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected static final String SEPARATOR \u003d \"~#~\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yy HH:mm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the status icon to be printed that represents if the Task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return (isDone ? TICK : CROSS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Sets if the Task is done or not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param isDone Boolean of whether the Task is done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns a String to be written to files when the Task is saved."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Task in format to be saved to files."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return getStatusIcon() + SEPARATOR + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static String getSeparator() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return SEPARATOR;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static String getTick() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return TICK;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 62
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private int taskCount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private void addTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private Task removeTask(int i) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return tasks.remove(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the Task at the specified index of the TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param taskNumber Index of the required Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Task at specified index."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the number of Tasks in the TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Number of Tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns the most recently added Task in the TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Most recently added Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Task getLastTask() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return tasks.get(getTaskCount() - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Marks the Task at the specified index of the TaskList as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param taskNumber Index of the Task to be deleted."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        getTask(taskNumber).setIsDone(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Deletes the Task at the specified index of the TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param taskNumber Index of the Task to be deleted."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return Deleted Task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Task deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        Task deletedTask \u003d removeTask(taskNumber);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        taskCount--;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Adds a todo to the task list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param todo Description of the todo."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void addToDo(String todo) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        addTask(new ToDo(todo));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Adds a Deadline to the TaskList."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param params String array holding the description and \u0027by\u0027 of the DeadLine."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void addDeadline(String[] params) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        addTask(new Deadline(params[Parser.INDEX_DESCRIPTION], params[Parser.INDEX_BY]));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Adds an Event to the TaskList."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param params String array holding the description and \u0027at\u0027 of the Event."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void addEvent(String[] params) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        addTask(new Event(params[Parser.INDEX_DESCRIPTION], params[Parser.INDEX_AT]));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns an ArrayList of Tasks containing the keyword searched for."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param keyword Keyword to search for."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return ArrayList of Tasks containing the keyword."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                .filter((t) -\u003e t.toString().contains(keyword))"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 117
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns a String to be written to files when the ToDo is saved."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return ToDo as a formatted String to be saved to files."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"T\"+ SEPARATOR + super.printToFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 23
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String BORDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private Scanner conversation;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.conversation \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Returns a String of the user\u0027s next input line."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @return User\u0027s next input line."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String getNextLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return conversation.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message telling the user a Task has been added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param tasks TaskList the Task has been added to."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printAddTaskMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"  \" + tasks.getLastTask());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.getTaskCount());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message to say goodbye to the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message telling the user a Task has been deleted."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param task Deleted Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param tasks TaskList the Task has been deleted from."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printDeleteTaskMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve deleted this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list.\\n\", tasks.getTaskCount());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message telling the user a Task has been marked as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param task Task marked as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printDoneTaskMessage(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message for when the user inputs an invalid command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printUnknownMessage() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println (\"Unknown command!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a list of all Tasks in the TaskList."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param tasks TaskList to be printed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        if (tasks.getTaskCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(\"There are no tasks in the list!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(BORDER);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "       for (int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.print((i + 1) + \".\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(tasks.getTask(i));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message to welcome the user."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\" _________________________\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"| Hello! I\u0027m Duke         |\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"| What can I do for you?  |\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"| ________________________|\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"|/\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message when the user inputs an incorrectly formatted command to add a Task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param task Task which has the incorrect format."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printDescriptionErrorMessage(String task) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Oops! The format of the \" + task + \" is incorrect!\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        switch(task) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(\"Format for todo: todo DESCRIPTION\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(\"Format for event: event DESCRIPTION /at dd-mm-yy hh:mm\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(\"Format for deadline: deadline DESCRIPTION /by dd-mm-yy hh:mm\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message when the user inputs a Task number that does not exist."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printTaskNumberErrorMessage() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Oops! Please input a task number that exists!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message when the user inputs an incorrectly formatted command to mark a Task as done."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printDoneErrorMessage() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Oops! Please input a number after done!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a generic error message for all other errors."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printGenericErrorMessage() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Oops! Something went wrong!\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints a message when the user inputs an incorrectly formatted date or time."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printDateTimeParseErrorMessage() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Oops! Please make sure your date and time is in the format dd-mm-yy hh:mm!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * Prints an ArrayList of Tasks."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     * @param tasks ArrayList to be printed."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void printFilteredList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(\"There are no matching tasks!\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(BORDER);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Here are the matching tasks in the list:\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.print((i + 1) + \".\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(tasks.get(i));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 200
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "T~#~âœ˜~#~sell groceries"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "D~#~âœ˜~#~do cs2101 project~#~30-09-20 23:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "E~#~âœ˜~#~midterms~#~20-10-20 14:00"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "todo buy groceries!!!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "deadline do cs2113t project /by the day after tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "deadline do cs2101 project /at tomorrow afternoon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "deadline do cs2101 project /by 25-09-20 18:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "event finals /at the end of the semester"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "event midterms /by week 7"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "event finals /at 10-11-20 15:00"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "hello"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "done 18"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "find cs2101"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "find hello my friend"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 21
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 2,
      "-": 19
    }
  }
]
