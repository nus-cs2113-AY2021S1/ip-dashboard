[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final int MAX_LIST_CAPACITY \u003d 100;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String PARAM_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        Task[] tasks \u003d new Task[MAX_LIST_CAPACITY];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        Printer.printWelcomeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        while (!line.equals(PARAM_BYE)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            if (line.equals(PARAM_LIST)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                Printer.printList(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (line.startsWith(PARAM_DONE)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    int taskNumber \u003d markTaskAsDone(tasks, line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printDoneTaskMessage(tasks[taskNumber]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printDoneErrorMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printTaskNumberErrorMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (line.startsWith(PARAM_TODO)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    addToDo(tasks, line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printAddTaskMessage(tasks[Task.getTaskCount() - 1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printDescriptionErrorMessage(PARAM_TODO);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (line.startsWith(PARAM_DEADLINE)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    addDeadline(tasks, line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printAddTaskMessage(tasks[Task.getTaskCount() - 1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printDescriptionErrorMessage(PARAM_DEADLINE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else if (line.startsWith(PARAM_EVENT)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    addEvent(tasks, line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printAddTaskMessage(tasks[Task.getTaskCount() - 1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                    Printer.printDescriptionErrorMessage(PARAM_EVENT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "                Printer.printErrorMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        Printer.printByeMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static void addDeadline(Task[] tasks, String line) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String deadline \u003d line.substring(line.indexOf(PARAM_DEADLINE) + PARAM_DEADLINE.length());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int firstIndexOfByCommand \u003d deadline.indexOf(PARAM_BY);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int lastIndexOfByCommand \u003d firstIndexOfByCommand + PARAM_BY.length();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String description \u003d deadline.substring(0, firstIndexOfByCommand).trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String by \u003d deadline.substring(lastIndexOfByCommand).trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        tasks[Task.getTaskCount()] \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static void addEvent(Task[] tasks, String line) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String event \u003d line.substring(line.indexOf(PARAM_EVENT) + PARAM_EVENT.length());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int firstIndexOfAtCommand \u003d event.indexOf(PARAM_AT);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int lastIndexOfAtCommand \u003d firstIndexOfAtCommand + PARAM_AT.length();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String description \u003d event.substring(0, firstIndexOfAtCommand).trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String at \u003d event.substring(lastIndexOfAtCommand).trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        tasks[Task.getTaskCount()] \u003d new Event(description, at);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static void addToDo(Task[] tasks, String line) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        String todo \u003d line.substring(line.indexOf(PARAM_TODO) + PARAM_TODO.length()).trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        tasks[Task.getTaskCount()] \u003d new ToDo(todo);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static int markTaskAsDone(Task[] tasks, String line) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(line.substring(PARAM_DONE.length()).trim()) - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        tasks[taskNumber].setIsDone(true);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 118,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    // Represents exceptions specific to duke.Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 5
    }
  },
  {
    "path": "src/main/java/duke/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String border \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printAddTaskMessage(Task task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list.\\n\", Task.getTaskCount());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printDoneTaskMessage(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printErrorMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println (\"Unknown command!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printList(Task[] tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        for (int i \u003d 0; i \u003c Task.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.print((i + 1) + \".\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "            System.out.println(tasks[i]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\" _________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"| Hello! I\u0027m duke.Duke         |\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"| What can I do for you?  |\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"| ________________________|\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"|/\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printDescriptionErrorMessage(String task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Oops! The format of the \" + task + \" is incorrect!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printTaskNumberErrorMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Oops! Please input a task number that exists!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static void printDoneErrorMessage() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(\"Oops! Please input a number after done!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    private static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public static int getTaskCount() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return (isDone ? TICK : CROSS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 34
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "todo buy groceries!!!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "deadline do cs2113t project /by the day after tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "deadline do cs2101 project /at tomorrow afternoon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "event finals /at the end of the semester"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "event midterms /by week 7"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "hello"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "done 18"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimzj"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "daniellimzj": 2,
      "-": 36
    }
  }
]
