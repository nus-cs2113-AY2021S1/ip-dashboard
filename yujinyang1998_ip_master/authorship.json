[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "import java.util.Vector;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        SystemMessages.welcomeMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        boolean breakCheck \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        String input,firstWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        Vector\u003cTask\u003e dataStorage \u003d new Vector\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        while(!breakCheck) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            input \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            firstWord \u003d input.split(\" \",2)[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                switch (firstWord.toLowerCase()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        breakCheck \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                    case \"\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        System.out.println(\"Please enter something.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        printList(dataStorage, counter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        markAsDone(input, dataStorage, counter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                        counter \u003d addTask(input, dataStorage, counter);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(e.description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        SystemMessages.goodbyeMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private static void markAsDone(String input, Vector\u003cTask\u003e dataStorage, int counter) throws DukeException{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        int completedIndex \u003d Integer.parseInt(input.split(\" \")[1].trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        //checking for invalid input"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        if(input.split(\" \").length\u003e2 || !input.split(\" \")[1].matches(\"^-?\\\\d+$\") || completedIndex\u003c0){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            throw new DukeException(\"Invalid input.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        if(completedIndex \u003c\u003d counter \u0026\u0026 !dataStorage.get(completedIndex - 1).isDone){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            if(dataStorage.get(completedIndex-1) instanceof Event){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                Event replacement \u003d new Event(dataStorage.get(completedIndex-1).description,  ((Event) dataStorage.get(completedIndex-1)).at);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                replacement.isDone \u003d true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                dataStorage.set(completedIndex-1,replacement);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            }else if(dataStorage.get(completedIndex-1) instanceof ToDo){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                ToDo replacement \u003d new ToDo(dataStorage.get(completedIndex-1).description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                replacement.isDone \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                dataStorage.set(completedIndex-1,replacement);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            }else if(dataStorage.get(completedIndex-1) instanceof Deadline){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                Deadline replacement \u003d new Deadline(dataStorage.get(completedIndex-1).description, ((Deadline) dataStorage.get(completedIndex-1)).by);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                replacement.isDone \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                dataStorage.set(completedIndex-1,replacement);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                Task replacement \u003d new Task(dataStorage.get(completedIndex-1).description);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                replacement.isDone \u003d true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                dataStorage.set(completedIndex-1,replacement);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            System.out.println(dataStorage.get(completedIndex-1).toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }else if(completedIndex \u003c\u003d counter \u0026\u0026 dataStorage.get(completedIndex - 1).isDone){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            throw new DukeException(\"The task has already been marked as completed.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            throw new DukeException(\"This task does not exist.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private static void printList(Vector\u003cTask\u003e dataStorage,int counter) throws DukeException{"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        if(counter \u003c\u003d 0){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            throw new DukeException(\"Please add something to the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        for (int i \u003d 0; i\u003ccounter-1; i++){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            System.out.println((i+1) + \".\" + dataStorage.get(i).toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    private static int addTask(String input, Vector\u003cTask\u003e dataStorage, int counter) throws DukeException{"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        switch (input.toLowerCase().split(\" \")[0]){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                ToDo newToDo \u003d new ToDo(input.split(\"todo\",2)[1].trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                dataStorage.add(newToDo);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(dataStorage.get(counter - 1).toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(\"Now you have \" + counter + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(input.split(\" \",2)[1].split(\"/by\",2)[0].trim(),input.split(\" \",2)[1].split(\"/by\",2)[1].trim());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                dataStorage.add(newDeadline);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(dataStorage.get(counter - 1).toString());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(\"Now you have \" + counter + \" tasks in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                Event newEvent \u003d new Event(input.split(\" \",2)[1].split(\"/at\",2)[0].trim(),input.split(\" \",2)[1].split(\"/at\",2)[1].trim());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                dataStorage.add(newEvent);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(dataStorage.get(counter - 1).toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                System.out.println(\"Now you have \" + counter + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                throw new DukeException(\"Invalid Command\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        return counter;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 127,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public DukeException (String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 9
    }
  },
  {
    "path": "src/main/java/duke/SystemMessages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class SystemMessages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public static void welcomeMessage(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public static void goodbyeMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 21
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "exit"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yujinyang1998"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yujinyang1998": 2,
      "-": 19
    }
  }
]
