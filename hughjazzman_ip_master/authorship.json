[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/ip.Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        ___  ________  ________  ________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "       |\\  \\|\\   __  \\|\\_____  \\|\\_____  \\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "       \\ \\  \\ \\  \\|\\  \\\\|___/  /|\\|___/  /|"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     __ \\ \\  \\ \\   __  \\   /  / /    /  / /"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    |\\  \\\\_\\  \\ \\  \\ \\  \\ /  /_/__  /  /_/__"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    \\ \\________\\ \\__\\ \\__\\\\________\\\\________\\"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     \\|________|\\|__|\\|__|\\|_______|\\|_______|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     Hey there! The name\u0027s Jazz."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 12,
      "-": 19
    }
  },
  {
    "path": "src/main/java/ip/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import ip.file.FileManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import ip.task.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /** File path **/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String root \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    // inserts correct file path separator to data.txt file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final Path filePath \u003d Paths.get(root, \"src\", \"main\", \"resources\", \"data.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final Path dirPath \u003d Paths.get(root, \"src\", \"main\", \"resources\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final boolean directoryExists \u003d Files.exists(dirPath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /** Number of dashes used in printed horizontal line **/"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final int NUM_DASHES \u003d 60;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /** Prefix strings that determine the command **/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /** Parameters for commands **/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String PARAM_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static final String PARAM_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Print logo and greeting"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        FileManager fileManager \u003d new FileManager(filePath.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Create TaskManager"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        TaskManager taskManager;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            taskManager \u003d createTaskManager(fileManager);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        // Scanner class for user input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        // Parsing of user input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            line \u003d in.nextLine().strip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            execute(taskManager, line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } while (!line.equals(COMMAND_BYE));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Exit program"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printFarewell();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Returns TaskManager object given an input FileManager."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param fileManager FileManager of a file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return TaskManager object to keep track of tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws IOException If an I/O error occurs."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static TaskManager createTaskManager(FileManager fileManager) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Will loop as long as FileNotFoundException is caught"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                return new TaskManager(fileManager);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                printFileNotFound();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                // Create file if not found"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                    fileManager.createFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                } catch (IOException err) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                    printFileError();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                    throw err;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                printFileError();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                throw e;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printHorizontalLine() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\"-\".repeat(NUM_DASHES));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printLogo() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \"    ___  ________  ________  ________\\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \"   |\\\\  \\\\|\\\\   __  \\\\|\\\\_____  \\\\|\\\\_____  \\\\\\n\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \"   \\\\ \\\\  \\\\ \\\\  \\\\|\\\\  \\\\\\\\|___/  /|\\\\|___/  /|\\n\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \" __ \\\\ \\\\  \\\\ \\\\   __  \\\\   /  / /    /  / /\\n\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \"|\\\\  \\\\\\\\_\\\\  \\\\ \\\\  \\\\ \\\\  \\\\ /  /_/__  /  /_/__\\n\" +"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \"\\\\ \\\\________\\\\ \\\\__\\\\ \\\\__\\\\\\\\________\\\\\\\\________\\\\\\n\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \" \\\\|________|\\\\|__|\\\\|__|\\\\|_______|\\\\|_______|\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printGreeting() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" Hey there! The name\u0027s Jazz.\\n\" +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \" What can I do for you?\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printFarewell() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" Bye. See you next time!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printFileNotFound() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" File data.txt not found in src/main/resources... Creating new file data.txt.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printFileError() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" Error reading/writing data.txt. Exiting.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printInvalid() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printEmpty(String command) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printList(TaskManager taskManager) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        taskManager.listTasks();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printWrongFormatInteger() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" The index of the task must be an integer.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printWrongFormatTask(String command, String parameter) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" \" + command + \" requires the \" + parameter + \" parameter\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printInvalidTask() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" The task ID does not exist!\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void printFullTasks() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" Sorry, unable to add any more tasks! The task manager is full. \");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Executes appropriate methods based on the given command."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param taskManager TaskManager object."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param line Line of user input."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void execute(TaskManager taskManager, String line) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Prevent blank tasks"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        if (line.isBlank()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Find position of first space"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        int spacePos \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // command is first word"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String command \u003d spacePos \u003e 0 ? line.substring(0, spacePos).strip() : line;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String num;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printList(taskManager);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            num \u003d line.substring(spacePos + 1).strip();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            execDone(taskManager, num);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            num \u003d line.substring(spacePos + 1).strip();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            execDeleteTask(taskManager, num);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_TODO: // Fallthrough"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_DEADLINE: // Fallthrough"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                execAddTask(taskManager, command, line);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                printFullTasks();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printInvalid();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Writes to file"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            taskManager.writeToFile();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printFileError();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Executes marking a task as done"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param taskManager TaskManager object."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param num ID number of task in list."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void execDone(TaskManager taskManager, String num) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Check for a valid integer as input"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            id \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printWrongFormatInteger();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Check that id is valid"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            task \u003d taskManager.markAsDone(id);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printInvalidTask();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" \" + task.toString());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Executes deleting a task"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param taskManager TaskManager object."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param num ID number of task in list."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void execDeleteTask(TaskManager taskManager, String num) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            id \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printWrongFormatInteger();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            task \u003d taskManager.deleteTask(id);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printInvalidTask();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task:\\n   \" +"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                task.toString() + \"\\n Now you have \" +"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                taskManager.getTasksCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Adds appropriate type of Task based on the given command."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param taskManager TaskManager object."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param command Command determined from first word of the line of user input."
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param line Rest of the line of user input."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static void execAddTask(TaskManager taskManager, String command, String line) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Position of task description, /by marker, and /at marker"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        int descPos \u003d line.indexOf(\" \"), byPos, atPos;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String descriptionParam, description;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Check for blank description"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            descriptionParam \u003d line.substring(descPos).strip();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printEmpty(command);"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String by, at;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_TODO:"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            task \u003d taskManager.addTodo(descriptionParam);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            byPos \u003d descriptionParam.indexOf(PARAM_BY);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                String[] details \u003d parseTask(descriptionParam, COMMAND_DEADLINE, PARAM_BY, byPos);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                by \u003d details[0];"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                description \u003d details[1];"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } catch (StringIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            task \u003d taskManager.addDeadline(description, by);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            atPos \u003d descriptionParam.indexOf(PARAM_AT);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                String[] details \u003d parseTask(descriptionParam, COMMAND_EVENT, PARAM_AT, atPos);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                at \u003d details[0];"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                description \u003d details[1];"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } catch (StringIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            task \u003d taskManager.addEvent(description, at);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printInvalid();"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        System.out.println(\" Got it. I\u0027ve added this task:\\n  \" +"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                task.toString() +"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \"\\n Now you have \" + taskManager.getTasksCount() +"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                \" tasks in the list.\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Parses the parameters of the user input. Used in parseTask."
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param descriptionParam User input after the command."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param command Command name."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param param Parameter name."
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param paramPos Parameter index in descriptionParam."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return paramDetails User input for the param."
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws DukeException If paramPos is \u003c 0 (missing param)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws StringIndexOutOfBoundsException If paramPos is \u003e descriptionParam.length() (blank param)"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static String parseParam("
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            String descriptionParam, String command, String param, int paramPos)"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            throws StringIndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Check that there is a parameter"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        if (paramPos \u003c 0) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printWrongFormatTask(command, param);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String paramDetails;"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Check for blank parameter"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            paramDetails \u003d descriptionParam.substring(paramPos + param.length() + 1).strip();"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return paramDetails;"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printEmpty(command + \" \" + param + \" parameter\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Parses the description of the user input. Used in parseTask."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param descriptionParam User input after the command."
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param command Command name."
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param paramPos Parameter index in descriptionParam."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return description User input for the command description."
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws StringIndexOutOfBoundsException If paramPos \u003c\u003d 0 (missing description)"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static String parseDesc("
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            String descriptionParam, String command, int paramPos)"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            description \u003d descriptionParam.substring(0, paramPos - 1).strip();"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printEmpty(command);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Parses the entire task given as user input with description and parameters."
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Used in execAddTask."
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param descriptionParam User input after the command."
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param command Command name."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param param Parameter name."
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param paramPos Parameter index in descriptionParam."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return details String array of paramDetails and description of task."
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws StringIndexOutOfBoundsException If parsed parameter field is blank."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws DukeException If parsed description is blank."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private static String[] parseTask("
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            String descriptionParam, String command, String param, int paramPos)"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            throws StringIndexOutOfBoundsException, DukeException {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String paramDetails, description;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String[] details \u003d new String[2];"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        paramDetails \u003d parseParam(descriptionParam, command, param, paramPos);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        description \u003d parseDesc(descriptionParam, command, paramPos);"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            printEmpty(command);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        details[0] \u003d paramDetails;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        details[1] \u003d description;"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 424,
      "-": 18
    }
  },
  {
    "path": "src/main/java/ip/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 5
    }
  },
  {
    "path": "src/main/java/ip/file/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "package ip.file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import ip.task.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public FileManager(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Creates a file at filePath."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws IOException If an I/O error occurs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author hughjazzman-reused"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://www.javatpoint.com/how-to-create-a-file-in-java with minor modifications"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"File created at location: \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"File already exists at location: \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Creates a directory at filePath."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param dirPath Path to directory to be created."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws IOException If an I/O error occurs."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public static void createDirectory(String dirPath) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Solution adapted from https://www.javatpoint.com/how-to-create-a-file-in-java"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        File file \u003d new File(dirPath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            if (file.mkdir()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                System.out.println(\"Directory created at location: \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                System.out.println(\"Directory already exists at location: \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Parses the file from the given filePath."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws IOException If an I/O error occurs."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author hughjazzman-reused"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://stackoverflow.com/a/45826710 with minor modifications"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getLines(TaskManager taskManager) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        FileInputStream stream;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        stream \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(stream));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            taskManager.parseLines(reader);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Write the lines as input to the file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param lines Input data being written to file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws IOException If an I/O error occurs."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author hughjazzman-reused"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://www.journaldev.com/878/java-write-to-file#java-write-to-file-example with minor modifications"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void writeFile(String lines) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        FileWriter fr \u003d null;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            fr \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            fr.write(lines);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            // close resources"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                if (fr !\u003d null) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    fr.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 63,
      "-": 62
    }
  },
  {
    "path": "src/main/java/ip/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param description Description of Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param by Deadline of Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 26
    }
  },
  {
    "path": "src/main/java/ip/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param description Description of Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param at Timing of Task Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 26
    }
  },
  {
    "path": "src/main/java/ip/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Returns a status icon depending on whether task isDone."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return Tick symbol if isDone else X symbol."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        return isDone ? \"[\\u2713]\" : \"[\\u2718]\"; //return tick or X symbols"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Returns a String representation of the Task, using the statusIcon and description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return String representation."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 25,
      "-": 23
    }
  },
  {
    "path": "src/main/java/ip/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import ip.file.FileManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private int tasksCount \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private FileManager fileManager;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param fileManager FileManager of file being parsed by TaskManager."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws IOException If an I/O error occurs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public TaskManager(FileManager fileManager) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        this.fileManager \u003d fileManager;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        fileManager.getLines(this);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public FileManager getFileManager() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return fileManager;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Parses the lines within the file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param reader Reads text from the input stream from the file given in getLines()."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws IOException If an I/O error occurs."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public void parseLines(BufferedReader reader) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // strLine format:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // \u003ccommand\u003e | \u003cisDone\u003e | \u003cdescription\u003e | \u003cparam/optional\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // e.g. D | 1 | homework | yesterday"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String strLine;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        while ((strLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            // Solution below adapted from https://stackoverflow.com/a/41953571"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            // Splits line using \"|\" and the whitespace surrounding it as the delimiter"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            String[] params \u003d strLine.trim().split(\"\\\\s*[|]\\\\s*\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            switch (params[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                task \u003d this.addTodo(params[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                task \u003d this.addDeadline(params[2], params[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                task \u003d this.addEvent(params[2], params[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            if (params[1].strip().equals(\"1\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Write data to file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @throws IOException If an I/O error occurs."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        StringBuilder lines \u003d new StringBuilder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String type, isDone, desc, param;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        String delimiter \u003d \" | \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        boolean hasParam;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksCount; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            Task task \u003d getTask(i);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                type \u003d \"T\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                desc \u003d task.getDescription();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                param \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                hasParam \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                type \u003d \"D\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                desc \u003d task.getDescription();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                param \u003d ((Deadline) task).getBy();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                hasParam \u003d true;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                type \u003d \"E\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                desc \u003d task.getDescription();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                param \u003d ((Event) task).getAt();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                hasParam \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            isDone \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            lines.append(type).append(delimiter).append(isDone).append(delimiter).append(desc);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            if (hasParam) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "                lines.append(delimiter).append(param);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            lines.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        // Writes to file"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        fileManager.writeFile(lines.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private Task getTask(int id) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return tasks.get(id);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Returns the current task count in the tasks array."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return Number of tasks."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public int getTasksCount() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return tasksCount;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Adds a general Task object to the tasks array."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param task Task object."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return the Task object passed in after being added to the array."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    private Task addTask(Task task) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        tasksCount++;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Deletes task based on their id in tasks."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param id The id in the tasks list."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return Task object deleted."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public Task deleteTask(int id) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        Task task \u003d tasks.get(id-1);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        tasks.remove(id-1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        tasksCount--;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Adds a Todo task to the tasks array."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public Task addTodo(String description) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return addTask(todo);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Adds a Deadline task to the tasks array."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param by Date/Time of the task deadline."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public Task addDeadline(String description, String by) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return addTask(deadline);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Adds an Event task to the tasks array."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param at Location of the task."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public Task addEvent(String description, String at) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return addTask(event);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Marks a Task as done."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @param id ID of task corresponding to index in the tasks array."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * @return Task object marked as done."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public Task markAsDone(int id) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        Task task \u003d tasks.get(id-1);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     * Prints a list of all tasks currently in the tasks array."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        for (int i\u003d0;i\u003ctasksCount;i++) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "            System.out.println(\" \" + (i+1) + \".\" + tasks.get(i).toString() );"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 203
    }
  },
  {
    "path": "src/main/java/ip/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 13
    }
  },
  {
    "path": "src/main/resources/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "T | 1 | EAT DINNER"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "D | 0 | Homework | 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "T | 0 | YOLO"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "E | 1 | Project meeting | Mon 8pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "T | 1 | Smile!"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "deadline do homework /by no idea"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "REM delete data file from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "del src\\main\\resources\\data.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ip\\Duke.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin ip.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 5,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "if ! javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\ip\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hughjazzman"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin ip.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "hughjazzman": 2,
      "-": 36
    }
  }
]
