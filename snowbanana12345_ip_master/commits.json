{
  "authorDailyContributionsMap": {
    "snowbanana12345": [
      {
        "date": "2020-08-16",
        "commitResults": [
          {
            "hash": "b03e67df3478e1cd6ac17130417a2bab358eea75",
            "messageTitle": "CAN YOU SEE THE CHANGE",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 0
              }
            }
          },
          {
            "hash": "31ed09ead446abf648e46892e330d770fe27bfbe",
            "messageTitle": "Level-0 implemented",
            "messageBody": "",
            "tags": [
              "level-0"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 17,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-23",
        "commitResults": [
          {
            "hash": "c5e027c6faa8cdc86e254cf2c77df613e3080509",
            "messageTitle": "add dukeGreet function add dukeGoodbye function add duke echo user input functionality add duke exiting if user input is bye",
            "messageBody": "",
            "tags": [
              "level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 31,
                "deletions": 15
              }
            }
          },
          {
            "hash": "c6761dd8b1eb17338b605ce36d4f07824f383990",
            "messageTitle": "add static variables to store user inputs add dukeRepeatInputs funcion which outputs stored user inputs",
            "messageBody": "",
            "tags": [
              "level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 24,
                "deletions": 2
              }
            }
          },
          {
            "hash": "bf292bfc9e3069ee4cd5a194d62975a3f1ba8881",
            "messageTitle": "change duke response to reflect his deillusioned view of the world",
            "messageBody": "add Task class :\na Task class is to model a user task\nit can keep track of if the task is done\nit can set the task to done\n\nchange storedUserInputs variable to store a Task array\nadd dukeSetDone function to enable a Task to be set to done\n",
            "tags": [
              "level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 68,
                "deletions": 11
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-30",
        "commitResults": [
          {
            "hash": "0693b61f4be424e6380809ae43f9c06a6190da22",
            "messageTitle": "Wrote function to abstract store tasks in main function. Add dukeStart and dukeStop function to abstract away setting a boolean variable to true or false Fix a bug where duke cannot set the last added task to done.",
            "messageBody": "",
            "tags": [
              "Week-3-improvement-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 33,
                "deletions": 7
              }
            }
          },
          {
            "hash": "10784905be9776f6b721ae632fe486cc7883885b",
            "messageTitle": "Change task undone icon to cross Change User Input System: User will now first give one of the commands: bye, task, done, list and then give the input",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 14,
                "deletions": 8
              }
            }
          },
          {
            "hash": "aee66e420884d3e4ef901fcc5aed0a3cfdaa497d",
            "messageTitle": "Abstract away all print out messages to duke level functions",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 80,
                "deletions": 28
              }
            }
          },
          {
            "hash": "0b90e551c81f07ac3f8880b605db102769ea8c35",
            "messageTitle": "Add DeadLine ToDo Event subclasses of Task Task constructor no longer public Replac done method in Task with isDone and setDone getter and setter Add new commands: todo, deadline, event Remov command: task Add new methods: dukeAddToDo, dukeAddDeadLine, dukeAddEvent",
            "messageBody": "",
            "tags": [
              "level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 161,
                "deletions": 35
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-02",
        "commitResults": [
          {
            "hash": "44035cc52c9718b2d79fc9d00c21d09536265c53",
            "messageTitle": "slap project even more",
            "messageBody": "",
            "tags": [
              "A-CodeQuality"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 22,
                "deletions": 12
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-09",
        "commitResults": [
          {
            "hash": "3a3c16db634fb9a592154d5fbd2d57757f2f5a60",
            "messageTitle": "add clearer instructions to command prompt add dukeDefaultResponse method to ask if the user wants to see the list of command prompts",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 15,
                "deletions": 21
              }
            }
          },
          {
            "hash": "1e2d21d80d77ae419c85083a17dcc5a9606433c7",
            "messageTitle": "rename task event deadline todo into new task module add duke_exception module Methods dukeAddDeadLine dukeAddEvent dukeAddTodo now throws EmptyInputException if descriptions are not provided add try catch block to handle new exceptions",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 65,
                "deletions": 46
              }
            }
          },
          {
            "hash": "dc99e0c71caa70f65ce0af2c1a133c397c436029",
            "messageTitle": "Add enum class for duke commands Add class dukeCommandManager to convert user input String to command Enum class Method dukeCollectUserInput now throws InvalidCommandException if command is not valid. The checking of the command is done in the dukeCommandManager class.",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 80,
                "deletions": 19
              }
            }
          },
          {
            "hash": "c15de9be96992814544d89b26a1af1d15b773464",
            "messageTitle": "placed all classes under package duke",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 0,
                "deletions": 0
              }
            }
          },
          {
            "hash": "1e4a13fd9d91f4cc95ba011813b891161ca727ac",
            "messageTitle": "fix issue with packaging dukeSetDone now throws BadInputException when no task number is given, the task number is not valid or exceeds the memory space provided to duke",
            "messageBody": "",
            "tags": [
              "A-packages"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 59,
                "deletions": 15
              }
            }
          },
          {
            "hash": "e6380461e26148553a1ffba3b30bf4227bb7f7bb",
            "messageTitle": "add catch NumberFormatException to dukeSetDone Method to handle not user not providing a number after done command",
            "messageBody": "",
            "tags": [
              "level-5",
              "A-exceptions"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 3,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-16",
        "commitResults": [
          {
            "hash": "b1496c3f4b64eacf0f14b20a286f2967cfdc6693",
            "messageTitle": "wrote the user guide",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 1
              },
              "md": {
                "insertions": 73,
                "deletions": 4
              }
            }
          },
          {
            "hash": "a34dc3ea034ae76f02b353fcbed09ff2b0226e51",
            "messageTitle": "update user guide",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 20,
                "deletions": 11
              }
            }
          },
          {
            "hash": "4a99ac74e4a52383f5646e0517163a840bd49561",
            "messageTitle": "rewrite the whole code in OOP style",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 208,
                "deletions": 316
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-18",
        "commitResults": [
          {
            "hash": "d597112e954cf708e755761d5c86d7ff1740f0bc",
            "messageTitle": "caught up to week 4 work",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 156,
                "deletions": 9
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-19",
        "commitResults": [
          {
            "hash": "a015253264396f1e8b884b7b05189f34894cc2b4",
            "messageTitle": "caught up to week 5 work",
            "messageBody": "",
            "tags": [
              "A-OOP"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 317,
                "deletions": 102
              },
              "md": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "5a3c9fa13d1df7c67f040f9d28c03ef3f4587b07",
            "messageTitle": "implement Delete functionality",
            "messageBody": "",
            "tags": [
              "branch-level-6"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 26,
                "deletions": 2
              }
            }
          },
          {
            "hash": "8f2b3f632b7d73500da0bb99903b1eb4eba71b88",
            "messageTitle": "fix bug that case COMMAND_DELETE did not have a break updated the user guide to reflect the new delete functionality",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 0
              },
              "md": {
                "insertions": 20,
                "deletions": 10
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-30",
        "commitResults": [
          {
            "hash": "ade96f1ea41900fee6341556b902e9636f9d9fab",
            "messageTitle": "implement save",
            "messageBody": "",
            "tags": [
              "branch-level-7"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 3,
                "deletions": 0
              },
              "java": {
                "insertions": 109,
                "deletions": 4
              },
              "md": {
                "insertions": 14,
                "deletions": 0
              }
            }
          },
          {
            "hash": "06a9dc0f53497b23ad94a376f3dc8c73debf8f46",
            "messageTitle": "fix messy merge conflicts",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 0,
                "deletions": 1
              }
            }
          },
          {
            "hash": "153dd5e0d1b6888f2258f281d4ef33adcd963b2c",
            "messageTitle": "clean up",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 0,
                "deletions": 3
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "snowbanana12345": {
      "java": 842,
      "md": 106,
      "sh": 0,
      "bat": 0,
      "gradle": 0,
      "txt": 0
    }
  },
  "authorContributionVariance": {
    "snowbanana12345": 17278.246
  },
  "authorDisplayNameMap": {
    "snowbanana12345": "CS2113-T14-4 ZHAN..MING"
  }
}
