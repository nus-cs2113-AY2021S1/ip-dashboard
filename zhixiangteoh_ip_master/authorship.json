[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.InvalidDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String HALF_TAB \u003d \"  \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String BREAK \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String TAB \u003d \"    \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String BORDER \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static TaskManager taskManager;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        showLogo();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        interact();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        sayBye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void interact() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // create input scanner"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String userInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            if (inputIsBye(userInputLine)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            } else if (inputIsList(userInputLine)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                listTasks(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            } else if (inputIsDone(userInputLine)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                Task doneTask \u003d taskManager.taskChecked(userInputLine);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                if (taskIsChecked(doneTask)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    listDoneTask(\"Nice! I\u0027ve marked this task as done:\", doneTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    Task taskAdded \u003d taskManager.addTask(userInputLine);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    showAddTask(taskAdded);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                } catch (InvalidDescriptionException ide) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    showInvalidDescMessage(ide);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                } catch (InvalidCommandException ice) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    showInvalidCommandMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void showInvalidCommandMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String message \u003d TAB + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + BREAK;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(message);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void showInvalidDescMessage(InvalidDescriptionException ide) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String message \u003d TAB + \"☹ OOPS!!! The description of a(n) \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + ide.getTaskType() + \" cannot be empty.\" + BREAK;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(message);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void showAddTask(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String prologue \u003d TAB + \"Got it. I\u0027ve added this task:\" + BREAK;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String content \u003d TAB + HALF_TAB + task.toString() + BREAK;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String epilogue \u003d TAB + \"Now you have \" + taskManager.getTotalTasksNumber() + \" tasks in the list.\" + BREAK;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(prologue + content + epilogue);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static boolean taskIsChecked(Task doneTask) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return doneTask !\u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void listTasks(String s) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String desc \u003d TAB + s;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(desc + BREAK + taskManager.tasksToString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void listDoneTask(String s, Task doneTask) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String desc \u003d TAB + s;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(desc + BREAK"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                        + TAB + HALF_TAB + doneTask + BREAK);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static boolean inputIsDone(String userInputLine) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return userInputLine.matches(\"done ([0-9]+)\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static boolean inputIsList(String userInputLine) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return userInputLine.equalsIgnoreCase(\"list\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static boolean inputIsBye(String userInputLine) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return userInputLine.equalsIgnoreCase(\"bye\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void showLogo() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String logo \u003d \" ____            _\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + \"|  _ \\\\ _   _   _| | ___\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + \"| | | | | | |/ _  |/ _ \\\\\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + \"| |_| | |_| | |_| |  __/\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + \"|____/ \\\\__,_|\\\\____|\\\\___|\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String greeting \u003d TAB + \"Hello! I\u0027m Dude\" + BREAK"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + TAB + \"What can I do for you?\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static void sayBye() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String sayBye \u003d TAB + \"Bye. Hope to see you again soon!\" + BREAK;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(sayBye);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static void printBetwBorders(String lineBlock) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.print(lineBlock);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 124,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.InvalidDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private Task[] tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private final static int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private final static int STARTING_TASK_NUMBER \u003d 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private final static String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private final static String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private final static String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private final static String COMMAND_INVALID \u003d \"blah\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static int totalTasksNumber;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static int currentTaskNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        tasks \u003d new Task[MAX_TASKS];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        totalTasksNumber \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        currentTaskNumber \u003d STARTING_TASK_NUMBER;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task addTask(String userInputLine) throws InvalidDescriptionException, InvalidCommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String taskDesc;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskType \u003d getTypeFromInput(userInputLine);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskDesc \u003d getDescFromInput(userInputLine);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aie) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskType \u003d userInputLine.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new InvalidDescriptionException(taskType);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (InvalidCommandException ice) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (taskDesc.trim().isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new InvalidDescriptionException(taskType);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        Task taskAdded;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (taskType.equals(COMMAND_DEADLINE)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskAdded \u003d new Deadline(taskDesc, currentTaskNumber);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } else if (taskType.equals(COMMAND_EVENT)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskAdded \u003d new Event(taskDesc, currentTaskNumber);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } else if (taskType.equals(COMMAND_TODO)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskAdded \u003d new ToDo(taskDesc, currentTaskNumber);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskAdded \u003d new Task(taskDesc, currentTaskNumber);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        tasks[totalTasksNumber] \u003d taskAdded;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        totalTasksNumber++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        currentTaskNumber++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskAdded;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String getTypeFromInput(String userInputLine) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String taskType \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (taskHasType(userInputLine)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskType \u003d splitInput(userInputLine)[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String getDescFromInput(String userInputLine) throws InvalidDescriptionException, InvalidCommandException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String taskDesc \u003d userInputLine;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (taskHasType(userInputLine)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskDesc \u003d splitInput(userInputLine)[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (isTaskType(taskDesc)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new InvalidDescriptionException(taskDesc);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } else if (taskDesc.equals(COMMAND_INVALID)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskDesc;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String[] splitInput(String userInputLine) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return userInputLine.split(\" \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private boolean taskHasType(String input) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        boolean containsDeadline \u003d input.contains(COMMAND_DEADLINE + \" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        boolean containsEvent    \u003d input.contains(COMMAND_EVENT + \" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        boolean containsToDo     \u003d input.contains(COMMAND_TODO + \" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return containsDeadline || containsEvent || containsToDo;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private boolean isTaskType(String taskDesc) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskDesc.equals(COMMAND_DEADLINE)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                || taskDesc.equals(COMMAND_EVENT)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                || taskDesc.equals(COMMAND_TODO);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static int getTotalTasksNumber() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return totalTasksNumber;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task taskChecked(String userInputLine) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String digitString \u003d userInputLine.substring(\"done \".length());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        int taskDoneNumber \u003d Integer.parseInt(digitString);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (taskDoneNumber \u003e 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            tasks[taskDoneNumber - 1].setDone(true);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            return tasks[taskDoneNumber - 1];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String tasksToString() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        StringBuilder taskList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(\"    \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(task.getTaskNumber() + \".\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(task.toString());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskList.toString();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 130
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public InvalidDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String typeBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Deadline(String taskDesc, int totalTasksNumber) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        super(taskDesc, totalTasksNumber);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        typeBox \u003d \"[D]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getTaskDesc() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String[] splitDesc \u003d super.getTaskDesc().split(\"/by\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String desc \u003d splitDesc[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String time \u003d splitDesc[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return desc + \"(by:\" + time + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // [D][x] eat (by: 10am)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return typeBox + getCheckBox() + \" \" + getTaskDesc();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String typeBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Event(String taskDesc, int totalTasksNumber) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        super(taskDesc, totalTasksNumber);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        typeBox \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getTaskDesc() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String[] splitDesc \u003d super.getTaskDesc().split(\"/at\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String desc \u003d splitDesc[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String time \u003d splitDesc[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return desc + \"(at:\" + time + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // [E][x] eat (at: 10am)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return typeBox + getCheckBox() + \" \" + getTaskDesc();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static final String TICK \u003d \"[✓]\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static final String CROSS \u003d \"[✗]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String taskDesc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String checkBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this(\"\", 0);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task(String taskDesc, int taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.taskDesc \u003d taskDesc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getTaskDesc() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskDesc;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void setTaskDesc(String taskDesc) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.taskDesc \u003d taskDesc;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public int getTaskNumber() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void setTaskNumber(int taskNumber) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getCheckBox() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return (isDone) ? TICK : CROSS;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        checkBox \u003d (isDone) ? TICK : CROSS;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return checkBox + \" \" + taskDesc;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 54
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String typeBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public ToDo(String taskDesc, int totalTasksNumber) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        super(taskDesc, totalTasksNumber);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        typeBox \u003d \"[T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // [T][x] eat"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return typeBox + getCheckBox() + \" \" + getTaskDesc();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eat 20 plates of chicken rice"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "go shopping"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todobuy groceries"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "toDobuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /by Sunday 2pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /by Sunday 2pm ///"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /at Sunday 2pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /at Sunday 2pm ///"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /atSunday 2pm/ /at/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadlinebuy groceries"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deAdLinebuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /by Sunday 2pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /by Sunday 2pm ///"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eventbuy groceries"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eVenTbuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /at Sunday 2pm ///"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /atSunday 2pm/ /at/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "tododjadslkdfjsad"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eventsjlkfjsadfdasdf"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadlinedajldkfjasl;kdffdsa"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "blah"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "bye!"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 42
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eat 20 plates of chicken rice"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "go shopping"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todobuy groceries"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "toDobuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /by Sunday 2pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /by Sunday 2pm ///"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /at Sunday 2pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /at Sunday 2pm ///"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /atSunday 2pm/ /at/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries                      ## ERROR!!!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadlinebuy groceries"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deAdLinebuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /by Sunday 2pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /by Sunday 2pm ///"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /at Sunday 2pm ///   ## ERROR!!!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /atSunday 2pm/ /at/  ## ERROR!!!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries                         ## ERROR!!!"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eventbuy groceries"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eVenTbuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /by Sunday 2pm          ## ERROR!!!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /by Sunday 2pm ///      ## ERROR!!!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /at Sunday 2pm ///"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /atSunday 2pm/ /at/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "tododjadslkdfjsad"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eventsjlkfjsadfdasdf"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadlinedajldkfjasl;kdffdsa"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "blah"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "bye!"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 48
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "if not exist ../bin mkdir ../bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "javac  -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "if ! javac -verbose -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 2,
      "-": 36
    }
  }
]
