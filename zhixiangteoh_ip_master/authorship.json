[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    ____            _"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "   |  _ \\ _   _   _| | ___"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "   | | | | | | |/ _  |/ _ \\"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "   | |_| | |_| | |_| |  __/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "   |____/ \\__,_|\\____|\\___|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "       ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "       Hello! I\u0027m Dude"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "       What can I do for you?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "       ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 10,
      "-": 21
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "E | 0 | eat | 12pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "E | 0 | sleep | now"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "T | 0 | eat"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "E | 0 | do homework | 10pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "T | 0 | do homework"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "D | 0 | sleep | Sep 19 2020 01:00 AM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "D | 0 | sleep | 2020-09-19 1pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "E | 0 | sleep | Sep 19 2020 01:00 AM"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "T | 0 | complete homework"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "T | 0 | complete 2113 homework"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Main class and driver of application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor for main program. Initializes TaskList and UI."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Duke() throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        ui \u003d new Ui(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Main method. Initializes Duke program object and runs it."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param args Command Line arguments"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Main high-level, abstract flow of program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        ui.showLogo();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        ui.interact();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 38,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_BYE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_LIST;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_DONE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_DELETE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_FIND;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_TODO;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_DEADLINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_EVENT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Parser handling most parsing operations, particularly pertaining to parsing the command from user input, reading"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * and writing saved file data, and date-time parsing."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String SYMBOL_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String SYMBOL_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String SYMBOL_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final Set\u003cString\u003e DESC_COMMANDS \u003d Set.of(COMMAND_TODO, COMMAND_EVENT, COMMAND_DEADLINE, COMMAND_FIND);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final Set\u003cString\u003e OTHER_COMMANDS \u003d Set.of(COMMAND_BYE, COMMAND_LIST, COMMAND_DONE, COMMAND_DELETE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns user\u0027s command for the given input line, and handles some erroneous input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param userInputLine full user input line"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return user command as a String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getCommand(String userInputLine) throws InvalidCommandException, EmptyDescriptionException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // these input lines consists only of the commands, so just return them and catch bespoke errors"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (OTHER_COMMANDS.contains(userInputLine)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            return userInputLine;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // these input lines contain the commands which cannot have empty descriptions"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (DESC_COMMANDS.contains(userInputLine.trim())) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new EmptyDescriptionException(userInputLine.trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            int commandEndIndex \u003d userInputLine.indexOf(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String command \u003d userInputLine.substring(0, commandEndIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            // catches all inputs that don\u0027t have at least two words and are not in OTHER_COMMANDS"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns the created Task object from the corresponding saved file raw input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param taskLine saved file Task line"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return created Task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task createTask(String taskLine) throws ParseException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // e.g., taskLine: T | 1 | read book"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String[] components \u003d taskLine.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String typeSymbol \u003d components[0].trim();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(components[1].trim());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String description \u003d components[2].trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        switch (typeSymbol) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        case SYMBOL_TODO:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        case SYMBOL_DEADLINE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String deadlineDesc \u003d description.replace(\"|\", \"/by\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            task \u003d new Deadline(deadlineDesc);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        case SYMBOL_EVENT:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String eventDesc \u003d description.replace(\"|\", \"/at\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            System.out.println(eventDesc);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            task \u003d new Event(eventDesc);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new ParseException(\"Unable to create Task object from file task input string.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        task.setDone(isDone);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns save file input format for the given Task. Essentially the inverse of createTask."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param task Task to be converted to save file format"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return save file String format"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String convertToFileInput(Task task) throws ParseException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String fileTaskLine \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            ToDo todoTask \u003d (ToDo) task;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            fileTaskLine \u003d todoTask.getFileRepresentation();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            Deadline deadlineTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            fileTaskLine \u003d deadlineTask.getFileRepresentation();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            Event eventTask \u003d (Event) task;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            fileTaskLine \u003d eventTask.getFileRepresentation();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new ParseException(\"Unable to convert Task object to file task input string.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return fileTaskLine;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns LocalDateTime object of the date-time."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param dateTimeString"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return date and time in LocalDateTime object"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public LocalDateTime getDateTime(String dateTimeString) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        LocalDateTime datetime \u003d LocalDateTime.parse(dateTimeString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd \" +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                \"HHmm\"));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return datetime;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 138
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Storage containing file and folder contents."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String FILE_PATH \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String FOLDER_PATH \u003d \"./data\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static File folder;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor. Initializes the save file and folder used in the application."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        folder \u003d new File(FOLDER_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns the save file. Creates folder/file if not initially present."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return save write file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public File load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (!folder.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            System.out.println(\"Creating new folder \u0027data\u0027 in root directory:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            return file;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 44
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.TaskIndexNotSpecifiedException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Storage.FILE_PATH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.BREAK;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_TODO;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_EVENT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_DEADLINE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_DONE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Ui.COMMAND_DELETE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * TaskList stores Tasks in an ArrayList of Task objects, and handles any and all bookkeeping of Tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private final static int STARTING_TASK_NUMBER \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor. Initializes a new ArrayList and new Storage. Loads the TaskList from a saved file, if any."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public TaskList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        loadTaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor. Creates a TaskList from an existing List of Tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.tasks \u003d (ArrayList\u003cTask\u003e) tasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Reads saved file data into TaskList. Catches a ParseException for errors encountered while reading data."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void loadTaskList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            readFileIntoTaskList(storage.load());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            System.out.println(pe.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Reads the saved file raw Task data into the ArrayList of Tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param file saved file with raw Task contents"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws ParseException Exception corresponding to errors encountered while reading data"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void readFileIntoTaskList(File file) throws ParseException, FileNotFoundException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        Scanner fileSc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        while (fileSc.hasNextLine()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String taskLine \u003d fileSc.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            Task task \u003d parser.createTask(taskLine);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            addTask(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Writes all Tasks in the TaskList to the saved file. Catches a ParseException pertaining to errors encountered"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * while writing data."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void updateTasksFile() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            File writeFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            if (!writeFile.exists()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                System.out.println(\"Creating new file \u0027duke.txt\u0027:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                writeFile.createNewFile();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            FileWriter writer \u003d new FileWriter(writeFile);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    String writeLine \u003d parser.convertToFileInput(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    writer.write(writeLine + BREAK);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                } catch (ParseException pe) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    System.out.println(pe.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            System.out.println(ioe.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Adds a Task object to the ArrayList of Tasks. Each addition is immediately written to saved file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param task Task to be added to list"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        updateTasksFile();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Creates and returns a specific Task object added to the TaskList. Each additiion is immediately"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * written to saved file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Depending on the task type passed in, a ToDo, Deadline, or Event object is created, then added to the TaskList."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param taskType type of Task, i.e., ToDo, Event, Deadline"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param userInputLine full input line entered by user"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return added Task object"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws InvalidCommandException"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task addTask(String taskType, String userInputLine) throws InvalidCommandException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String taskDesc \u003d getDescFromInput(userInputLine);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        Task taskAdded;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        case COMMAND_TODO:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskAdded \u003d new ToDo(taskDesc);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskAdded \u003d new Deadline(taskDesc);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            taskAdded \u003d new Event(taskDesc);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        tasks.add(taskAdded);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        updateTasksFile();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskAdded;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Finds all tasks that have task descriptions matching the search input for this command."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param userInputLine full user input line, containing the search term(s)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return List of Tasks that match the search"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public List\u003cTask\u003e find(String userInputLine) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String findDesc \u003d getDescFromInput(userInputLine);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        List\u003cTask\u003e tasksFound \u003d tasks.stream()"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                .filter(task -\u003e task.getTaskDesc().contains(findDesc))"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String getDescFromInput(String userInputLine) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String taskDesc \u003d \"\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String[] taskDetails \u003d userInputLine.split(\" \", 2);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        taskDesc \u003d taskDetails[1];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskDesc;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns Task object checked as done, or null if no Task object checked."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Throws a TaskIndexNotSpecifiedException if task index not specified by user, or task index cannot be parsed"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * from the user input."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param userInputLine full user input line"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return Task object, or null"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws TaskIndexNotSpecifiedException"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task taskChecked(String userInputLine) throws TaskIndexNotSpecifiedException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String digitString \u003d getDigitString(userInputLine, COMMAND_DONE);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            int taskDoneNumber \u003d Integer.parseInt(digitString) - STARTING_TASK_NUMBER;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            // handle possibility of invalid index (\u003c 0) entered"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            if (taskDoneNumber \u003e\u003d 0) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                tasks.get(taskDoneNumber).setDone(true);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                updateTasksFile();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                return tasks.get(taskDoneNumber);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new TaskIndexNotSpecifiedException();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns Task object deleted, or null if no Task object deleted."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Throws a TaskIndexNotSpecifiedException if task index not specified by user, or task index cannot be parsed"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * from the user input."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param userInputLine full user input line"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return Task object, or null"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @throws TaskIndexNotSpecifiedException"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task taskDeleted(String userInputLine) throws TaskIndexNotSpecifiedException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String digitString \u003d getDigitString(userInputLine, COMMAND_DELETE);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            int taskDeletedNumber \u003d Integer.parseInt(digitString) - STARTING_TASK_NUMBER;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            // handle possibility of invalid index (\u003c 0) entered"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            if (taskDeletedNumber \u003e\u003d 0) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                Task deletedTask \u003d tasks.get(taskDeletedNumber);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                tasks.remove(taskDeletedNumber);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                updateTasksFile();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                return deletedTask;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            throw new TaskIndexNotSpecifiedException();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String getDigitString(String userInputLine, String command) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return userInputLine.substring((command + \" \").length());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns String representation of TaskList."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return formatted TaskList output"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String tasksToString() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        StringBuilder taskList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        int currentTaskNumber \u003d STARTING_TASK_NUMBER;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(\"    \");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(currentTaskNumber++ + \".\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(task.toString());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskList.toString();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String tasksFoundToString(TaskList mainTasks) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        StringBuilder taskList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(\"    \");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(mainTasks.getTasks().indexOf(task) + \".\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(task.toString());"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                taskList.append(System.lineSeparator());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskList.toString();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns total number of tasks in the TaskList."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return total number of tasks"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public int getTotalTasksNumber() {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 282,
      "-": 5
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.exception.TaskIndexNotSpecifiedException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * User interface of Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Handles all aspects of user input and system output, and executes main logic of application in"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * \u003ckbd\u003einteract\u003c/kbd\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String HALF_TAB \u003d \"  \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String BREAK \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String TAB \u003d \"    \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String BORDER \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor. Initializes Ui object for this TaskList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param tasks TaskList for the current program"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Ui(TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Prints formatted application logo to system output."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void showLogo() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String logo \u003d \" ____            _\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + \"|  _ \\\\ _   _   _| | ___\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + \"| | | | | | |/ _  |/ _ \\\\\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + \"| |_| | |_| | |_| |  __/\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + \"|____/ \\\\__,_|\\\\____|\\\\___|\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Prints formatted greeting to system output."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String greeting \u003d TAB + \"Hello! I\u0027m Dude\" + BREAK"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + TAB + \"What can I do for you?\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Main execution flow of program."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Read in and interpret user command, and outputs relevant information pertaining to specific command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void interact() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // create input scanner"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String userInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            parser \u003d new Parser();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            String command \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                command \u003d parser.getCommand(userInputLine);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            } catch (InvalidCommandException ice) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                showInvalidCommandMessage();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            } catch (EmptyDescriptionException ide) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                showEmptyDescMessage(ide);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            case COMMAND_BYE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            case COMMAND_LIST:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                listTasks(\"Here are the tasks in your list:\", tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            case COMMAND_DONE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    // returns task that is checked if a task is successfully checked, else returns null"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    Task doneTask \u003d tasks.taskChecked(userInputLine);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    listDoneTask(\"Nice! I\u0027ve marked this task as done:\", doneTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                } catch (TaskIndexNotSpecifiedException tinse) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    showTaskIndexNotSpecifiedMessage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            case COMMAND_DELETE:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    Task deletedTask \u003d tasks.taskDeleted(userInputLine);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    listTask(\"Noted. I\u0027ve removed this task:\", deletedTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                } catch (TaskIndexNotSpecifiedException tinse) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    showTaskIndexNotSpecifiedMessage();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            case COMMAND_FIND:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                TaskList tasksFound \u003d new TaskList(tasks.find(userInputLine));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                listTasksFound(\"Here are the matching tasks in your list:\", tasksFound);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    // returns task that is added if a task is successfully added, else returns null"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    Task addedTask \u003d tasks.addTask(command, userInputLine);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    listTask(\"Got it. I\u0027ve added this task:\", addedTask);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                } catch (InvalidCommandException ice) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                    showInvalidCommandMessage();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Prints formatted exit statement to system output."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String sayBye \u003d TAB + \"Bye. Hope to see you again soon!\" + BREAK;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(sayBye);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Prints formatted message corresponding to a TaskIndexNotSpecifiedException."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void showTaskIndexNotSpecifiedMessage() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String message \u003d TAB + \"☹ OOPS!!! I won\u0027t know which task unless you specify an index!\" + BREAK;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(message);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Prints formatted message corresponding to an InvalidCommandException."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void showInvalidCommandMessage() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String message \u003d TAB + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + BREAK;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(message);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Prints formatted message corresponding to a EmptyDescriptionException, curated for the task type."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param ede EmptyDescriptionException object"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void showEmptyDescMessage(EmptyDescriptionException ede) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String message \u003d TAB + \"☹ OOPS!!! The description of a(n) \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + ede.getTaskType() + \" cannot be empty.\" + BREAK;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(message);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Pretty prints a task to system output, prepended with the \u003ckbd\u003emessage\u003c/kbd\u003e, and appended with the remaining"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * number of tasks in the TaskList."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param message prologue message"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param task Task object to be printed"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void listTask(String message, Task task) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String prologue \u003d TAB + message + BREAK;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String content \u003d TAB + HALF_TAB + task.toString() + BREAK;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String epilogue \u003d TAB + \"Now you have \" + tasks.getTotalTasksNumber() + \" tasks in the list.\" + BREAK;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(prologue + content + epilogue);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Prints the list of tasks in the TaskList."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param s prologue message"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void listTasks(String s, TaskList tasks) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String desc \u003d TAB + s;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(desc + BREAK + tasks.tasksToString());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void listTasksFound(String s, TaskList tasks) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String desc \u003d TAB + s;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(desc + BREAK + tasks.tasksFoundToString(this.tasks));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Prints the task that is checked as done."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param s prologue message"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param doneTask Task object checked"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void listDoneTask(String s, Task doneTask) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String desc \u003d TAB + s;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        printBetwBorders(desc + BREAK"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "                + TAB + HALF_TAB + doneTask + BREAK);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Pretty prints the passed String in between horizontal borders."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param lineBlock String block to be formatted"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public static void printBetwBorders(String lineBlock) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.print(lineBlock);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        System.out.println(BORDER);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 216,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public EmptyDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class InvalidCommandException extends ParseException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/ParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class ParseException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public ParseException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public ParseException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskIndexNotSpecifiedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class TaskIndexNotSpecifiedException extends InvalidCommandException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Parser.SYMBOL_DEADLINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Deadline task object. Inherits \u003ckbd\u003eTask\u003c/kbd\u003e class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Deadline task requires the user entered input to also have a \"/by\" delimiter, after which the remaining String of"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * characters are perceived as being a representation of date and time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * @see duke.task.Task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String typeBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String bareDesc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private LocalDateTime datetime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String datetimeString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor. Creates Deadline from given task description. Additionally has a type symbol."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Splits task description into two: text description and date-time object, and saves this information."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param taskDesc"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Deadline(String taskDesc) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        super(taskDesc);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String[] splitDesc \u003d super.getTaskDesc().split(\"/by\", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        bareDesc \u003d splitDesc[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String dateTimeString \u003d splitDesc[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        parseDate(parser, dateTimeString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        typeBox \u003d \"[\" + SYMBOL_DEADLINE + \"]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void parseDate(Parser parser, String dateTimeString) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            datetime \u003d parser.getDateTime(dateTimeString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            datetimeString \u003d toDateTimeString(datetime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            datetimeString \u003d dateTimeString;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String toDateTimeString(LocalDateTime datetime) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns a formatted task description, with both text description and date-time output."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getTaskDesc() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return bareDesc + \" (by: \" + datetimeString + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns string file write-save representation of the ToDo object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return write-save String format"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getFileRepresentation() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // D | 0 | eat | 10am"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        int isDoneBit \u003d isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return SYMBOL_DEADLINE + \" | \" + isDoneBit + \" | \" + bareDesc + \" | \" + datetimeString;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns command line output format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return system output format"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // [D][x] eat (by: 10am)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return typeBox + getCheckBox() + \" \" + getTaskDesc();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 86
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Parser.SYMBOL_EVENT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Event task object. Inherits \u003ckbd\u003eTask\u003c/kbd\u003e class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Event task requires the user entered input to also have a \"/at\" delimiter, after which the remaining String of"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * characters are perceived as being a representation of date and time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * @see duke.task.Task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String typeBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String bareDesc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private LocalDateTime datetime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String datetimeString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor. Creates Event from given task description. Additionally has a type symbol."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Splits task description into two: text description and date-time object, and saves this information."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param taskDesc"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Event(String taskDesc) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        super(taskDesc);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String[] splitDesc \u003d super.getTaskDesc().split(\"/at\", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        bareDesc \u003d splitDesc[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        String dateTimeString \u003d splitDesc[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        parseDate(parser, dateTimeString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        typeBox \u003d \"[\" + SYMBOL_EVENT + \"]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private void parseDate(Parser parser, String dateTimeString) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            datetime \u003d parser.getDateTime(dateTimeString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            datetimeString \u003d toDateTimeString(datetime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "            datetimeString \u003d dateTimeString;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String toDateTimeString(LocalDateTime datetime) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns a formatted task description, with both text description and date-time output."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getTaskDesc() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return bareDesc + \" (at: \" + datetimeString + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns string file write-save representation of the ToDo object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return write-save String format"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getFileRepresentation() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // E | 0 | eat | 10am"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        int isDoneBit \u003d isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return SYMBOL_EVENT + \" | \" + isDoneBit + \" | \" + bareDesc + \" | \" + datetimeString;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns command line output format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return system output format"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // [E][x] eat (at: 10am)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return typeBox + getCheckBox() + \" \" + getTaskDesc();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 86
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * Task object. Parent class of all specific Task objects, namely ToDo, Deadline, and Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static final String TICK \u003d \"[✓]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private static final String CROSS \u003d \"[✗]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String taskDesc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String checkBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor. Builds a Task object from a given task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Task initialized as undone."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param taskDesc"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public Task(String taskDesc) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.taskDesc \u003d taskDesc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getTaskDesc() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return taskDesc;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getCheckBox() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return (isDone) ? TICK : CROSS;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        checkBox \u003d (isDone) ? TICK : CROSS;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return checkBox + \" \" + taskDesc;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 46
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "import static duke.Parser.SYMBOL_TODO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * ToDo task object. Inherits \u003ckbd\u003eTask\u003c/kbd\u003e class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " * @see duke.task.Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    private String typeBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Constructor. Creates ToDo from given task description. Additionally has a type symbol."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @param taskDesc"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public ToDo(String taskDesc) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        super(taskDesc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        typeBox \u003d \"[\" + SYMBOL_TODO + \"]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns string file write-save representation of the ToDo object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return write-save String format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String getFileRepresentation() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // T | 0 | eat"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        int isDoneBit \u003d isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return SYMBOL_TODO + \" | \" + isDoneBit + \" | \" + getTaskDesc();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * Returns command line output format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     * @return system output format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        // [T][x] eat"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "        return typeBox + getCheckBox() + \" \" + getTaskDesc();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 44
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "T | 0 | buy groceries"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "T | 0 | buy groceries /by Sunday 2pm"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eat 20 plates of chicken rice"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "go shopping"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todobuy groceries"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "toDobuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /by Sunday 2pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /by Sunday 2pm ///"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /at Sunday 2pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /at Sunday 2pm ///"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /atSunday 2pm/ /at/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadlinebuy groceries"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deAdLinebuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /by Sunday 2pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /by Sunday 2pm ///"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eventbuy groceries"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eVenTbuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /at Sunday 2pm ///"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /atSunday 2pm/ /at/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "tododjadslkdfjsad"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eventsjlkfjsadfdasdf"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadlinedajldkfjasl;kdffdsa"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "blah"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "bye!"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 42
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eat 20 plates of chicken rice"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "go shopping"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todobuy groceries"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "toDobuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /by Sunday 2pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /by Sunday 2pm ///"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /at Sunday 2pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /at Sunday 2pm ///"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo buy groceries /atSunday 2pm/ /at/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries                      ## ERROR!!!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadlinebuy groceries"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deAdLinebuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /by Sunday 2pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /by Sunday 2pm ///"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /at Sunday 2pm ///   ## ERROR!!!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline buy groceries /atSunday 2pm/ /at/  ## ERROR!!!"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries                         ## ERROR!!!"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eventbuy groceries"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eVenTbuYg; roceries! /by 2pm"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /by Sunday 2pm          ## ERROR!!!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /by Sunday 2pm ///      ## ERROR!!!"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /at Sunday 2pm ///"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event buy groceries /atSunday 2pm/ /at/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "tododjadslkdfjsad"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "eventsjlkfjsadfdasdf"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "deadlinedajldkfjasl;kdffdsa"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "blah"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "bye!"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 48
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "if ! javac -verbose -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhixiangteoh"
        },
        "content": "java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhixiangteoh": 2,
      "-": 36
    }
  }
]
