[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "# User Guide  "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "## Quick Start  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer.  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "2. Download the latest `ip.jar`.  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your Duke.  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "4. Use your terminal or command prompt to go to the working directory of your Duke.  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "5. Type the command `java -jar ip.jar` to start the program.  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "6. Type the command in the command box and press Enter to execute it. e.g. typing `list` and pressing Enter will list all your tasks.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Some example commands you can try:  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `list`: Lists all tasks  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `todo read book`: Adds a `Todo` task with description `read book` to the task list  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `delete 3`: Deletes the 3rd task shown in the current list.  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `clear`: Deletes all tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `bye`: Exits the app.  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "7. Refer to the Features below for details of each command.  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "## Features  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "#### Notes about the command format:  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be suppplied by the user.  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`.  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Parameters must follow the exact order specified in this user guide.  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Adding a Todo Task: `todo`  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Adds a Todo task to the task list. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `todo DESCRIPTION`  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `todo read book`  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `todo join sports club`  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Adding a Deadline Task: `deadline`  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Adds a Deadline task to the task list. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "   "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `deadline DESCRIPTION /by DEADLINE`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `deadline return book /by June 6th`  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `deadline return book /by 2021-06-06 12:00`  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Adding an Event Task: `event`  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Adds an Event task to the task list.  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `event DESCRIPTION /at TIME` "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "   "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `event project meeting /at Aug 6th 2-4pm`  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `event project meeting /at 2021-08-06 14:00`  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Deleting a Task: `delete`  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Deletes the specified task from the task list  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `delete INDEX`  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Deletes the person at the specified `INDEX`.  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The index refers to the index number shown in the displayed task list.  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The index **must be a positive integer** 1, 2, 3, ...    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `list` followed by `delete 2` deletes the 2nd task in the task list.  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Clearing All Entries: `clear`  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Clears all entries from the task list.  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `clear`  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Listing All Tasks: `list`  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Shows a list of all tasks in the task list.  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Locating Tasks by Description: `find`  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Finds tasks whose descriptions contain the given keywords.  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `find KEYWORDS`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The search is case-insensitive. e.g. `Book` will match `book`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The keywords need to match exactly, i.e. the entire keyword string needs to be matched."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Only the description is searched."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* All tasks matching the keyword string will be returned.  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `find book` returns all tasks whose descriptions contain string `book`, e.g.  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Here is a sample return by `find book` command  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    \\____________________________________________________________  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     Here are the matching tasks in your list:  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     1.[T][Y] read book  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     2.[D][Y] return book (by: June 6th)  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     3.[T][N] borrow book  "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    \\____________________________________________________________  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Marking a Task as Done: `done`  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Marks the specified person as done.  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `done INDEX`  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Marks the task at the specified `INDEX` as done.  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The index refers to the index number shown in the task list.  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The index **must be a positive integer** 1, 2, 3, ...  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `list` followed by `done 2` marks the 2nd task in the task list as done.  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Viewing help: `help`  "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Shows program usage instructions.  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `help`    "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Exiting the Program and Saving TaskList to File: `bye`  "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Exits the program. TaskList data are saved into a file automatically.  "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "There is no need to save manually.  "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `bye`  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "## Command Summary  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Action** | **Format, Examples** |  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| ---------- | -------------------- |  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Todo** | `todo DESCRIPTION` \u003cbr\u003e e.g. `todo read book` |  "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Deadline** | `deadline DESCRIPTION /by DEADLINE` \u003cbr\u003e e.g. `deadline return book /by June 6th`, \u003cbr\u003e `deadline return book /by 2021-06-06 12:00` |  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Event** | `event DESCRIPTION /at TIME` \u003cbr\u003e e.g. `event project meeting /at Aug 6th 2-4pm`, \u003cbr\u003e `event project meeting /at 2021-08-06 14:00` |  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Delete** | `delete INDEX` \u003cbr\u003e e.g. `delete 2` |  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Clear** | `clear` |"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **List** | `list` |    "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Find** | `find KEYWORDS` \u003cbr\u003e e.g. `find book` |  "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Done** | `done INDEX` \u003cbr\u003e e.g. `done 2` |  "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Help** | `help` \u003cbr\u003e e.g. `help` |"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Bye** | `bye` |  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      }
    ],
    "authorContributionMap": {
      "GuoAi": 127,
      "-": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide  "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "## Quick Start  "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer.  "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "2. Download the latest `ip.jar`.  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your Duke.  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "4. Use your terminal or command prompt to go to the working directory of your Duke.  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "5. Type the command `java -jar ip.jar` to start the program.  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "6. Type the command in the command box and press Enter to execute it. e.g. typing `list` and pressing Enter will list all your tasks.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Some example commands you can try:  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `list`: Lists all tasks  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `todo read book`: Adds a `Todo` task with description `read book` to the task list  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `delete 3`: Deletes the 3rd task shown in the current list.  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `clear`: Deletes all tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    * `bye`: Exits the app.  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "7. Refer to the Features below for details of each command.  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "## Features  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "#### Notes about the command format:  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be suppplied by the user.  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo read book`.  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Parameters must follow the exact order specified in this user guide.  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Adding a Todo Task: `todo`  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Adds a Todo task to the task list. "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `todo DESCRIPTION`  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `todo read book`  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `todo join sports club`  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Adding a Deadline Task: `deadline`  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Adds a Deadline task to the task list. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "   "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `deadline DESCRIPTION /by DEADLINE`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `deadline return book /by June 6th`  "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `deadline return book /by 2021-06-06 12:00`  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Adding an Event Task: `event`  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Adds an Event task to the task list.  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `event DESCRIPTION /at TIME` "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "   "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `event project meeting /at Aug 6th 2-4pm`  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `event project meeting /at 2021-08-06 14:00`  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Deleting a Task: `delete`  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Deletes the specified task from the task list  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `delete INDEX`  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Deletes the person at the specified `INDEX`.  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The index refers to the index number shown in the displayed task list.  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The index **must be a positive integer** 1, 2, 3, ...    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `list` followed by `delete 2` deletes the 2nd task in the task list.  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Clearing All Entries: `clear`  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Clears all entries from the task list.  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `clear`  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Listing All Tasks: `list`  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Shows a list of all tasks in the task list.  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Locating Tasks by Description: `find`  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Finds tasks whose descriptions contain the given keywords.  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `find KEYWORDS`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The search is case-insensitive. e.g. `Book` will match `book`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The keywords need to match exactly, i.e. the entire keyword string needs to be matched."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Only the description is searched."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* All tasks matching the keyword string will be returned.  "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `find book` returns all tasks whose descriptions contain string `book`, e.g.  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Here is a sample return by `find book` command  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    \\____________________________________________________________  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     Here are the matching tasks in your list:  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     1.[T][Y] read book  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     2.[D][Y] return book (by: June 6th)  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     3.[T][N] borrow book  "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    \\____________________________________________________________  "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Marking a Task as Done: `done`  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Marks the specified person as done.  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `done INDEX`  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* Marks the task at the specified `INDEX` as done.  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The index refers to the index number shown in the task list.  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* The index **must be a positive integer** 1, 2, 3, ...  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Examples:  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "* `list` followed by `done 2` marks the 2nd task in the task list as done.  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Viewing help: `help`  "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Shows program usage instructions.  "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `help`    "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "### Exiting the Program and Saving TaskList to File: `bye`  "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Exits the program. TaskList data are saved into a file automatically.  "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "There is no need to save manually.  "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Format: `bye`  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "## Command Summary  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Action** | **Format, Examples** |  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| ---------- | -------------------- |  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Todo** | `todo DESCRIPTION` \u003cbr\u003e e.g. `todo read book` |  "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Deadline** | `deadline DESCRIPTION /by DEADLINE` \u003cbr\u003e e.g. `deadline return book /by June 6th`, \u003cbr\u003e `deadline return book /by 2021-06-06 12:00` |  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Event** | `event DESCRIPTION /at TIME` \u003cbr\u003e e.g. `event project meeting /at Aug 6th 2-4pm`, \u003cbr\u003e `event project meeting /at 2021-08-06 14:00` |  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Delete** | `delete INDEX` \u003cbr\u003e e.g. `delete 2` |  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Clear** | `clear` |"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **List** | `list` |    "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Find** | `find KEYWORDS` \u003cbr\u003e e.g. `find book` |  "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Done** | `done INDEX` \u003cbr\u003e e.g. `done 2` |  "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Help** | `help` \u003cbr\u003e e.g. `help` |"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "| **Bye** | `bye` |  "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      }
    ],
    "authorContributionMap": {
      "GuoAi": 115,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.showError(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.MESSAGE_NEW_FILE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Reads the user command and executes it, until the user issues the bye command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Ui.showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                c.execute(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                Ui.showError(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        new Duke(Storage.DEFAULT_STORAGE_FILEPATH).run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 51,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Signals an error caused by Duke commands and operations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Ui.exit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Clears all tasks in the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d \"Clears all tasks in the task list.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.clearTask();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return whether to exit Duke application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param tasks a TaskList object containing all tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public abstract void execute(TaskList tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Adds a Deadline to the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a deadline task to the task list. \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Parameters: DESCRIPTION /by DEADLINE\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \" return book /by 2021-06-06 12:00\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public DeadlineCommand(String description, String deadline) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.addDeadline(description, deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Deletes a Task identified by its index in the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \": Deletes the task identified by the index number used in the task listing.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.deleteTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Marks a Task, identified by its index in the task list, as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \": Marks the task indentified by the index number used in the task listing as done.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Parameters: INDEX\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.markAsDone(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Adds an Event to the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event task to the task list.\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Parameters: DESCRIPTION at/ TIME\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \" project meeting /at 2021-08-06 14:00\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public EventCommand(String description, String time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.addEvent(description, time);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Finds and lists all tasks in the task list whose description contains the argument keywords."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Keyword matching is case-insensitive."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose descriptions contain any of \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Parameters: KEYWRODS\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD + \" book\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.findTask(keyword);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 32
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Shows help instructions"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        String message \u003d TodoCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                + \"\\n\\n     \" + DeadlineCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                + \"\\n\\n     \" + EventCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                + \"\\n\\n     \" + DeleteCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                + \"\\n\\n     \" + ListCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                + \"\\n\\n     \" + FindCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                + \"\\n\\n     \" + DoneCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                + \"\\n\\n     \" + HelpCommand.MESSAGE_USAGE"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                + \"\\n\\n     \" + ByeCommand.MESSAGE_USAGE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Ui.dukePrint(message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 33
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Lists all tasks in the task list to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \": Displays all tasks in the task list as a list with index numbers.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.listTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 24
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Adds a Todo to the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a todo task to the task list.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Parameters: DESCRIPTION\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"     Example: \" + COMMAND_WORD"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \" read book\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.addTodo(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 34
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String DIVIDER \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String LOGO \u003d \"    ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_ADDTASK \u003d \"Got it. I\u0027ve added this task:\\n       \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_STATUS_FIRST \u003d \"\\n     Now you have \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_STATUS_LAST \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_LIST \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task:\\n       \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_CLEAR \u003d \"Noted. I\u0027ve cleared all your tasks.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String WARNING_NO_TASK \u003d \"You do not have this task in the list.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n       [Y] \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_INVALID_COMMAND \u003d \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means. Please enter valid commands :-(\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DESCRIPTION \u003d \":( OOPS!!! The description of a task cannot be empty.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DEADLINE \u003d \":( OOPS!!! The deadline of a task cannot be empty.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_EMPTY_TIME \u003d \":( OOPS!!! The time of an event task cannot be empty.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_INVALID_DEADLINE \u003d \"Please enter your deadline in the correct format.\\n     Example: deadline return book /by Sunday\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_INVALID_EVENT \u003d \"Please enter your event in the correct format.\\n     Example: event project meeting /at Mon 2-4pm\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_INVALID_INDEX \u003d \"Please input a valid task index.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_LOAD_FILE \u003d \"The file cannot be loaded. Maybe this is your first time using Duke?\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_SAVE_FILE \u003d \":( OOPS!!! Cannot save to file.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_NEW_FILE \u003d \"I have created a new tasks.txt file for you. :) Type some commands and see it.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String WARNING_DATETIME \u003d \"If you want your DateTime to be formatted, you can input in this format: yyyy-MM-dd HH:mm\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_FIND \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_NOT_FOUND \u003d \"There are no matching tasks in your list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String EXCEPTION_FIND \u003d \":( OOPS!!! The keyword of a find command cannot be empty.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String MESSAGE_EMPTY_LIST \u003d \"There are no tasks in your list. Your task list is empty.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 38
    }
  },
  {
    "path": "src/main/java/duke/common/Utils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Utility methods"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Utils {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Convert strings (either \"0\" or \"1\") to booleans (false or true respectively)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param str input string (either \"0\" or \"1\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return false if input string is \"0\", true otherwise"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static boolean stringToBoolean(String str) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (str.equals(\"0\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 21
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.ClearCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Parses use input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param fullCommand full user input string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @throws DukeException if user input commands are not in the standard format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        String[] words \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        String wordparts[];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        switch (words[0].toLowerCase()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                if (words[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(Messages.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                return new TodoCommand(words[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                wordparts \u003d words[1].split(\" /by \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            if (wordparts[0].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                if (wordparts[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(Messages.EXCEPTION_EMPTY_DEADLINE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                return new DeadlineCommand(wordparts[0], wordparts[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_INVALID_DEADLINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                wordparts \u003d words[1].split(\" /at \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            if (wordparts[0].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                if (wordparts[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(Messages.EXCEPTION_EMPTY_TIME);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                return new EventCommand(wordparts[0], wordparts[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_INVALID_EVENT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(words[1]));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_INVALID_INDEX);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.WARNING_NO_TASK);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                return new DoneCommand(Integer.parseInt(words[1]));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_INVALID_INDEX);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.WARNING_NO_TASK);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                return new FindCommand(words[1].trim());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throw new DukeException(Messages.EXCEPTION_FIND);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            throw new DukeException(Messages.EXCEPTION_INVALID_COMMAND);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 110
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Utils;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Used to load and save task list data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /** Default file path used. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Loads the task list data from the storage, and then returns it."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return ArrayList of {@code Task} from the storage file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @throws DukeException if the storage file does not exist, or is not a regular file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            throw new DukeException(Messages.EXCEPTION_LOAD_FILE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            String[] taskParts \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            switch (taskParts[0].trim()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                tasks.add(new Todo(taskParts[2].trim(), Utils.stringToBoolean(taskParts[1].trim())));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                tasks.add(new Event(taskParts[2].trim(), Utils.stringToBoolean(taskParts[1].trim()), taskParts[3].trim()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                tasks.add(new Deadline(taskParts[2].trim(), Utils.stringToBoolean(taskParts[1].trim()), taskParts[3].trim()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Saves the {@code TaskList} data to the storage file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param tasks the {@code TaskList} to be saved to the storage file"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @throws DukeException if there were errors storing data to file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            throw new DukeException(Messages.EXCEPTION_SAVE_FILE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            taskString \u003d taskString + tasks.get(i).toFile() + \"\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            fw.write(taskString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            throw new DukeException(Messages.EXCEPTION_SAVE_FILE);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 89
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Represents a deadline task in the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Constructor used when adding a new deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * By default, the deadline task is not done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the deadline task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param deadline the deadline of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            this.deadline \u003d Ui.formatDateTime(deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.WARNING_DATETIME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Convenience constructor used when loading from the storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the deadline task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param isDone true if the deadline task is done already, false otherwise"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param deadline the deadline of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Deadline(String description, boolean isDone, String deadline) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"D | 1 | \" + description + \" | \" + deadline;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"D | 0 | \" + description + \" | \" + deadline;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[D][Y] \" + description + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[D][N] \" + description + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Represents an Event task in the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Constructor used when adding a new event task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * By default, the event task is not done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the event task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param time the time of the event task to be done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            this.time \u003d Ui.formatDateTime(time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.WARNING_DATETIME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Convenience constructor used when loading from the storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the event task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param isDone true if the event task is done already, false otherwise"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param time the time of the event task to be done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Event(String description, boolean isDone, String time) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"E | 1 | \" + description + \" | \" + time;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"E | 0 | \" + description + \" | \" + time;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[E][Y] \" + this.description + \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[E][N] \" + this.description + \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 62
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Represents a task in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Constructor used when adding a new task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * By default, the deadline task is not done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Convenience constructor used when loading from the storage file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param isDone true if the task is done already, false otherwise"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Retrieves the description of a task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return the description string of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return true if the task is done already, false otherwise"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Converts the attributes of the task into a formatted string to be saved into the storage file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return the formatted string to be saved into the storage file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public abstract String toFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Converts the attributes of the task into a formatted string to be displayed to the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return the formatted string to be displayed to the user"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 68
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Constructs a task list with the given tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Constructs an empty task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Retrieves the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return an ArrayList of {@code Task}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Adds a todo task to the task list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the todo task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void addTodo(String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Todo newTodo \u003d new Todo(description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.add(newTodo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Ui.dukePrint(Messages.MESSAGE_ADDTASK + newTodo.toString() + Messages.MESSAGE_STATUS_FIRST + tasks.size() + Messages.MESSAGE_STATUS_LAST);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Adds a deadline task to the task list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the deadline task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param deadline the deadline of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void addDeadline(String description, String deadline) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Ui.dukePrint(Messages.MESSAGE_ADDTASK + newDeadline.toString() + Messages.MESSAGE_STATUS_FIRST + tasks.size() + Messages.MESSAGE_STATUS_LAST);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Adds an event task to the task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the event task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param time the time of the task to be done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void addEvent(String description, String time) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Event newEvent \u003d new Event(description, time);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Ui.dukePrint(Messages.MESSAGE_ADDTASK + newEvent.toString() + Messages.MESSAGE_STATUS_FIRST + tasks.size() + Messages.MESSAGE_STATUS_LAST);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Deletes a task from the list, identified by the index of the task in the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param index the index of the task in the task list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.WARNING_NO_TASK);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Task taskRemoved \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.MESSAGE_DELETE + taskRemoved.toString() + Messages.MESSAGE_STATUS_FIRST + (tasks.size() - 1) + Messages.MESSAGE_STATUS_LAST);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            tasks.remove(index - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Lists all the tasks in the task list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void listTask() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.MESSAGE_EMPTY_LIST);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            message \u003d message + \"\\n     \" + (i + 1) + \".\" + tasks.get(i).toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Ui.dukePrint(Messages.MESSAGE_LIST + message);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Clears all the tasks in the task list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void clearTask() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Ui.dukePrint(Messages.MESSAGE_CLEAR);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Marks the task, identified by the index of the task in the task list, as done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param index the index of the task in the task list"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.WARNING_NO_TASK);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.MESSAGE_DONE + tasks.get(index - 1).getDescription());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Finds and lists all tasks in the task list whose description contains the argument keywords."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Keyword matching is case-insensitive."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param keyword the keyword to be searched in the task list"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void findTask(String keyword) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            if (tasks.get(i).description.toLowerCase().contains(keyword.toLowerCase())) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                matchingTasks.add(tasks.get(i));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                message \u003d message + \"\\n     \" + count + \".\" + tasks.get(i).toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (!message.equals(\"\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.MESSAGE_FIND + message);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            Ui.dukePrint(Messages.MESSAGE_NOT_FOUND);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return the size of the task list"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Retrieves a task using the given index."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param index the index of the task to be retrieved"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return the task in the task list at the given index"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 166
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Represents a todo task in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Constructor used when adding a new todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * By default, the todo task is not done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the todo task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Convenience constructor used when loading from the storage file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param description the description of the todo task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param isDone true if the todo task is done already, false otherwise"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"T | 1 | \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"T | 0 | \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[T][Y] \" + this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[T][N] \" + this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 45
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Shows the divider line."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(Messages.DIVIDER);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Prints messages to the user in a structured format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param message the messaged to be printed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void dukePrint(String message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"     \" + message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(Messages.LOGO);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        dukePrint(\"Hello! I\u0027m Duke.\\n     What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Prints the goodbye message after the termination of the application."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        dukePrint(Messages.MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Reads user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Prints the error message to the user if an error occurs."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param e the {@code DukeException} representing the error occurred"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void showError(DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        dukePrint(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * Formats the date time from user input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @param time the date time from user input"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @return the formatted date time string"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     * @throws DateTimeParseException if the user input date time is not in the specified format"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static String formatDateTime(String time) throws DateTimeParseException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyy HH:mm\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        LocalDateTime formattedDateTime \u003d LocalDateTime.parse(time, inputFormatter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        String returnString \u003d formattedDateTime.format(outputFormatter);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return returnString;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 81
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "D | 0 | return book | Jun 06 2021 12:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "E | 0 | project meeting | Aug 06 2021 14:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "D | 0 | return book | Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "E | 0 | project meeting | Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "D | 0 | do homework | no idea :-p"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "deadline return book /by 2021-06-06 12:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "event project meeting /at 2021-08-06 14:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "find book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "Revengers Assemble!"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 20
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "REM javac  -cp ..\\out\\artifacts\\duke_jar\\ip.jar -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "REM java -classpath ..\\bin Duke input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 3,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 1,
      "-": 37
    }
  }
]
