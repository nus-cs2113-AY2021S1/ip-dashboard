[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": " class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static String logo \u003d \"    ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private static String[] commands \u003d {\"todo\", \"event\", \"deadline\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void echo(String command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"     \" + command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void list() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        String yesOrNo;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            System.out.println(\"     \" + (i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void add(String command) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                String todoString \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    todoString \u003d command.substring(5);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                task \u003d new Todo(todoString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                String deadlineString \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    deadlineString \u003d command.substring(9);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                String[] deadlineStrings \u003d deadlineString.split(\" /by \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    task \u003d new Deadline(deadlineStrings[0], deadlineStrings[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(\"     Please enter your deadline in the correct format.\\n     Example: deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                String eventString \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    eventString \u003d command.substring(6);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(\"     ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                String[] eventStrings \u003d eventString.split(\" /at \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    task \u003d new Event(eventStrings[0], eventStrings[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(\"     Please enter your deadline in the correct format.\\n     Example: event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                System.out.println(\"     Please enter valid commands\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            System.out.println(\"       \" + task.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            throwDukeException(e);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void execCommand() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    list();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    String[] words \u003d command.split(\" \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    int taskNum \u003d Integer.valueOf(words[1]) - 1;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    if (taskNum \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                        throw new DukeException(\"     ☹ OOPS!!! There is no such task in your list\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    tasks.get(taskNum).markAsDone();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    System.out.println(\"       [✓] \" + tasks.get(taskNum).getDescription());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } else if (Arrays.asList(commands).contains(command.split(\" \")[0])) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    add(command);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                    throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "                throwDukeException(e);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void throwDukeException(DukeException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(e.toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        execCommand();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 152,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 12
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[D][✓] \" + this.description + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[D][✗] \" + this.description + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[E][✓] \" + this.description + \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[E][✗] \" + this.description + \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[T][✓] \" + this.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "            return \"[T][✗] \" + this.description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "GuoAi"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "GuoAi": 13
    }
  }
]
