[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaojingle": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        Task[] list \u003d new Task[100];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        int listcounter \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            String[] action \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            if(action[0].equals(\"bye\")){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            } else if(action[0].equals(\"list\")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                for(int i\u003d0;i\u003clistcounter;i++){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println((i + 1) + \".\" + list[i].toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            } else if(action[0].equals(\"done\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    int a \u003d Integer.parseInt(action[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    list[a - 1].markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + list[a - 1].toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                } catch(ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println(\"Oops! The description of a done cannot be empty!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            } else if(action[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    Todo td \u003d new Todo(action[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    list[listcounter] \u003d td;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + list[listcounter].toString()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                            + System.lineSeparator() + \"Now you have \" + (listcounter + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    listcounter++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                } catch(ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println(\"Oops! The description of a todo cannot be empty!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            } else if(action[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    int slashIndex \u003d action[1].indexOf(\"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    String deadlineBy \u003d action[1].substring(slashIndex+1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    Deadline dl \u003d new Deadline(action[1].substring(0,slashIndex-1), deadlineBy);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    list[listcounter] \u003d dl;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + list[listcounter].toString()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                            + System.lineSeparator() + \"Now you have \" + (listcounter + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    listcounter++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                } catch(ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println(\"Oops! The description of a deadline cannot be empty!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            } else if (action[0].equals(\"event\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    int slashIndex \u003d action[1].indexOf(\"/\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    String eventBy \u003d action[1].substring(slashIndex+1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    Event e \u003d new Event(action[1].substring(0, slashIndex-1), eventBy);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    list[listcounter] \u003d e;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\" + System.lineSeparator() + list[listcounter].toString()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                            + System.lineSeparator() + \"Now you have \" + (listcounter + 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    listcounter++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    System.out.println(\"Oops! The description of an event cannot be empty!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            } else if (action[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                int indexToDelete \u003d Integer.parseInt(action[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                System.out.println(list[indexToDelete-1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                listcounter--;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                for(int j\u003d(indexToDelete-1); j\u003clistcounter; j++){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                    list[j] \u003d list[j+1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                System.out.println(\"Now you have \" + listcounter + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                System.out.println(\"Oops! I\u0027m sorry I have no idea what that means!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaojingle": 81,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaojingle": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public Event(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaojingle": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            if(description\u003d\u003d\"\") {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "                this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "            System.out.println(\"Description cannot be empty!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaojingle": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaojingle"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaojingle"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaojingle": 10
    }
  }
]
