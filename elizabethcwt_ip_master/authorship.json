[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "# friendlyBot project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/friendlyBot.java` file, right-click it, and choose `Run friendlyBot.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "elizabethcwt": 2
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBot {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Hello, I\u0027m FriendlyBot, your Friendly To Do List! :)\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"Enter a To Do:\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        // Create array to store Tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        FriendlyBotTask[] tasks \u003d new FriendlyBotTask[100];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        int taskCount \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            // Create new array to check for \u0027done (no.)\u0027 input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            String[] checkDone \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            if (checkDone[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    Integer.parseInt(checkDone[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    int d \u003d Integer.parseInt(checkDone[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    tasks[d - 1].markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    System.out.println(\"Good job! :) I\u0027ve marked this task as complete:\\n\\n\\t\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            tasks[d - 1].toString() + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    System.out.println(\"Oops! Please indicate in NUMERALS, which task you\u0027ve done! 😅\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } catch (NullPointerException npe) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    System.out.println(\"Oops! It seems like the task you\u0027re trying to set as done is invalid! 🤨\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        System.out.println((i + 1) + \".\" + tasks[i].toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } else if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    System.out.println(\"\\nHope you found this app useful! \\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            \"See you again! :)\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    String lineWords[] \u003d line.split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    switch (lineWords[0]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                checkForTodoDescription(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                tasks[taskCount] \u003d new FriendlyBotTodo(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                tasks[taskCount].description \u003d line.substring(5);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                taskCount \u003d displayNewTask(taskCount, tasks[taskCount]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            } catch (NoTodoDescriptionException ntde) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                System.out.println(\"Oops! You can\u0027t leave the description of your Todo empty. 😞\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            };"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                checkForDescriptionAndDeadline(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                int deadlineBy \u003d line.indexOf(\"/by\") + 4;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                String by \u003d line.substring(deadlineBy);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                checkForDeadlineDescription(line, deadlineBy);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                tasks[taskCount] \u003d new FriendlyBotDeadline(line, by);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                tasks[taskCount].description \u003d line.substring(9, deadlineBy - 4);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                taskCount \u003d displayNewTask(taskCount, tasks[taskCount]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            } catch (NoDescriptionAndDeadlineException ndde) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                System.out.println(\"Oops! Are you missing a description AND a deadline?? 😱\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                System.out.println(\"Oops! Are you missing a deadline? 🧐 (use \u0027/by\u0027!)\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            } catch (NoDeadlineDescriptionException nde) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                System.out.println(\"Oops! Are you missing a description for your deadline? 🧐\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                checkForDescriptionAndEventAt(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                int eventAt \u003d line.indexOf(\"/at\") + 4;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                String at \u003d line.substring(eventAt);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                checkForEventDescription(line, eventAt);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                tasks[taskCount] \u003d new FriendlyBotEvent(line, at);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                tasks[taskCount].description \u003d line.substring(6, eventAt - 4);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                taskCount \u003d displayNewTask(taskCount, tasks[taskCount]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            } catch (NoDescriptionAndEventAtException ndaea) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                System.out.println(\"Oops! Are you missing a description AND a time/place for your \" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                        \"event? 😱\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                System.out.println(\"Oops! Are you missing a time/place for your event? 🧐 (use \u0027/at\u0027!)\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            } catch (NoEventDescriptionException nde) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                                System.out.println(\"Oops! Are you missing a description for your event? 🧐\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            invalidCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static void checkForDescriptionAndEventAt(String line) throws NoDescriptionAndEventAtException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String lineWithoutSpaces \u003d line.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (lineWithoutSpaces.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoDescriptionAndEventAtException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static void checkForDescriptionAndDeadline(String line) throws NoDescriptionAndDeadlineException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String lineWithoutSpaces \u003d line.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (lineWithoutSpaces.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoDescriptionAndDeadlineException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static void checkForTodoDescription(String line) throws NoTodoDescriptionException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String lineWithoutSpaces \u003d line.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (lineWithoutSpaces.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoTodoDescriptionException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static void checkForDeadlineDescription(String line, int deadlineBy) throws NoDeadlineDescriptionException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        boolean containsLetter \u003d line.substring(8, deadlineBy-4).matches(\".*[a-zA-Z]+.*\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (!containsLetter) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoDeadlineDescriptionException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static void checkForEventDescription(String line, int eventAt) throws NoEventDescriptionException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        boolean containsLetter \u003d line.substring(5, eventAt-4).matches(\".*[a-zA-Z]+.*\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (!containsLetter) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoEventDescriptionException();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    // Refactored from main"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static void invalidCommand() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! I don\u0027t think I know what you mean. ☹\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    // Refactored from main"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static int displayNewTask(int taskCount, FriendlyBotTask task) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Great! I\u0027ve added this task:\\n\\t\" + task.toString() +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"\\nNow you have \" + (taskCount + 1) + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 166
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotDeadline extends FriendlyBotTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotDeadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 15
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotEvent extends FriendlyBotTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotEvent(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 15
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotTask(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    // Return tick or x symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String getTypeLetter() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 41
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotTodo extends FriendlyBotTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotTodo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 13
    }
  },
  {
    "path": "src/main/java/bots/NoDeadlineDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoDeadlineDescriptionException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/bots/NoDescriptionAndDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoDescriptionAndDeadlineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/bots/NoDescriptionAndEventAtException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoDescriptionAndEventAtException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/bots/NoEventDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoEventDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/bots/NoTodoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoTodoDescriptionException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\friendlyBot.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "java -classpath ..\\bin friendlyBot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "elizabethcwt": 2
    }
  }
]
