[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "# friendlyBot project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/friendlyBot.java` file, right-click it, and choose `Run friendlyBot.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "elizabethcwt": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "*  [Introduction and Flowchart](#introduction-and-flowchart)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "*  [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "*  [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "   *  [Adding a new task](#adding-a-new-task): `todo` `deadline` `event`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "   *  [Check/Update an existing task](#check/update-an-existing-task): `list` `done` `delete` `find`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "   *  [Exiting the program](#exiting-the-program): `bye`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "   *  [Saving Data](#saving-data)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "*  [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003ca id\u003d\"introduction-and-flowchart\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "## Introduction and Flowchart"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "FriendlyBot is your friendly todo list, that helps you to **manage three types of tasks**:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* Todos,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* Deadlines, and"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* Events"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "FriendlyBot provides several user commands, for more functionality when managing your tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "These commands are shown more clearly in the flowchart below."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cbr\u003e\u003cimg src\u003d\"FriendlyBot%20Basic%20Flowchart.png\" style \u003d \"width\u003d300\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003ca id\u003d\"quick-start\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "1. Download the latest `ip.jar` from [here](https://github.com/elizabethcwt/ip/releases/tag/A-Release)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "1. Copy and place the file into a folder on your computer."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "1. Open your computer\u0027s terminal, navigate to the `ip.jar` file and run the app."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "1. Refer to the features below for details of the commands available in FriendlyBot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003ca id\u003d\"features\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003ca id\u003d\"adding-a-new-task\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "### Adding a new task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "#### Adding a todo task: `todo`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Adds a todo task in your task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eFormat: `todo [todo task description]`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExamples:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `todo read book`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"todo.png\" width\u003d\"350\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* `[T]` - Task is of **todo** type."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* `[✘]` - Task is **not done**."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "   "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "#### Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Adds a deadline task in your task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eFormat: `deadline [deadline task description] /by [deadline date]`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eEntering a date in `YYYY-MM-DD` format converts the date to `MONTH DD YEAR` format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExamples:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `deadline return book /by Sunday, 2pm`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"deadline1.png\" width\u003d\"425\"/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `deadline return book /by 2pm, 2020-09-25`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"deadline2.png\" width\u003d\"475\"/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* `[D]` - Task is of **deadline** type."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* `[✘]` - Task is **not done**."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "#### Adding an event task: `event`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Adds an event task in your task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eFormat: `event [event task description] /at [event location]`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExamples:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `event project meeting /at school`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"event.png\" width\u003d\"425\"/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* `[E]` - Task is of **event** type."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* `[✘]` - Task is **not done**."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "   "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003ca id\u003d\"check/update-an-existing-task\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "### Check/Update an existing task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "#### Listing all tasks: `list`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Lists all the tasks (todo, deadline and event) in your current task list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eFormat: `list`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExamples:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `list`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"list.png\" width\u003d\"425\"/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "#### Marking tasks as done: `done`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Marks specific task in your task list as done."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eFormat: `done [task number in task list]`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExamples:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `done 1`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"done1.png\" width\u003d\"450\"/\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Note:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "* `[✓]` - Task is **done**."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "#### Deleting a task: `delete`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Deletes a specific task in your current task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eFormat: `done [task number in task list]`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExamples:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `delete 2`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"delete2.png\" width\u003d\"550\"/\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "#### Finding a task: `find`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Finds relevant tasks in your current task list based on keywords you provide."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eFormat: `find [keyword(s)]`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExamples:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `find book`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"find.png\" width\u003d\"450\"/\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003ca id\u003d\"exiting-the-program\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Exits FriendlyBot."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExamples:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "Input: `bye`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eExpected output:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003e\u003cimg src\u003d\"bye.png\" width\u003d\"290\"/\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003ca id\u003d\"saving-data\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "### Saving Data"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "The tasks that you have added, deleted, or edited in any way will be saved externally in a file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eIf this file doesn\u0027t already exist in your computer, a new file will be created."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003cbr\u003eWhen you re-run FriendlyBot, the data (i.e. tasks in your friendly task list) will be loaded, and entering the `list` command will trigger the display of your updated task list, where you left off previously."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "\u003ca id\u003d\"command-summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|Action|Format|Examples|"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|--------------|----------------|----------------|"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|Add todo|`todo [todo task description]`|`todo read book`|"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|Add deadline|`deadline [deadline task description] /by [deadline date]`|`deadline return book /by 2pm, 2020-09-25`|"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|Add event|`deadline [event task description] /at [event location]`|`event project meeting /at school`|"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|List|`list`|"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|Done|`done [task number in task list]`|`done 2`|"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|Delete|`delete [task number in task list]`|`delete 2`|"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|Find|`find [keyword(s)]`|`find book`|"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "|Bye|`bye`|"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "elizabethcwt": 136
    }
  },
  {
    "path": "friendlyBot.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "[E]|true|project meeting |school"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "[T]|false|read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "[D]|false|return book |2pm, Sep 28 2020"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 3
    }
  },
  {
    "path": "src/main/java/bots/DeadlineDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Contains checkForDateFormat and convertDate methods."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see DeadlineDate#checkForDateFormat"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see DeadlineDate#convertDate"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class DeadlineDate {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Checks if user\u0027s deadline date input contains date in the form: \u0027yyyy-mm-dd\u0027. If present, calls the convertDate"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks arraylist containing all of the user\u0027s tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount number of tasks in the updated list after the user has entered a new task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param by string containing the deadline date details entered by user (string after \u0027/by\u0027)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return by - be it updated into new format or kept as the same format if date in \u0027yyyy-mm-dd\u0027 format was not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * found."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see DeadlineDate#convertDate"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static String checkForDateFormat(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String by) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String[] checkForDate \u003d by.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String dateString \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String newDateFormat \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            // Looks for format yyyy-mm-dd in /by string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            for (String item : checkForDate) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                if ((item.matches(\".*\\\\d.*\")) \u0026\u0026 (item.contains(\"-\"))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    dateString \u003d item;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    newDateFormat \u003d convertDate(dateString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    // Replacing original date format (yyyy-mm-dd) to new one in original task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    by \u003d by.replace(dateString, newDateFormat);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    return by;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            return by;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            return by;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Converts deadline date in \u0027yyyy-mm-dd\u0027 format to \u0027[month in letters] [date] [year]\u0027 format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param dateString part of user\u0027s deadline date input in \u0027yyyy-mm-dd\u0027 format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return newDateFormat - the new date in \u0027[month in letters] [date] [year]\u0027 format."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * found."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static String convertDate(String dateString) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        // Creates dates from strings"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        // Print reformat dates"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String newDateFormat \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return newDateFormat;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 67
    }
  },
  {
    "path": "src/main/java/bots/ExceptionAndCheckForMethods.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoDeadlineDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoDescriptionAndDeadlineException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoDescriptionAndEventAtException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoEventDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoTodoDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class ExceptionAndCheckForMethods {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static final int lengthOfDeadline \u003d 8;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static final int lengthOfEvent \u003d 5;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Checks for BOTH presence of description and event location for an event task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @throws NoDescriptionAndEventAtException if no description AND event location is found in user\u0027s event input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see NoDescriptionAndEventAtException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void checkForDescriptionAndEventAt(String line) throws NoDescriptionAndEventAtException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String lineWithoutSpaces \u003d line.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (lineWithoutSpaces.length() \u003d\u003d lengthOfEvent) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoDescriptionAndEventAtException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Checks for BOTH presence of description and deadline date for a deadline task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @throws NoDescriptionAndDeadlineException if no description AND deadline date is found in user\u0027s deadline input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see NoDescriptionAndDeadlineException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void checkForDescriptionAndDeadline(String line) throws NoDescriptionAndDeadlineException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String lineWithoutSpaces \u003d line.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (lineWithoutSpaces.length() \u003d\u003d lengthOfDeadline) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoDescriptionAndDeadlineException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Checks for presence of description for a todo task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @throws NoTodoDescriptionException if no description is found in user\u0027s todo input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see NoTodoDescriptionException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void checkForTodoDescription(String line) throws NoTodoDescriptionException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String lineWithoutSpaces \u003d line.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        int lengthOfTodo \u003d 4;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (lineWithoutSpaces.length() \u003d\u003d lengthOfTodo) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoTodoDescriptionException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Checks for presence of description for a deadline task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param deadlineBy end of description string of deadline"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @throws NoDeadlineDescriptionException if no description is found in user\u0027s deadline input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see NoDeadlineDescriptionException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void checkForDeadlineDescription(String line, int deadlineBy) throws NoDeadlineDescriptionException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        boolean containsLetter \u003d line.substring(lengthOfDeadline, deadlineBy - 4).matches(\".*[a-zA-Z]+.*\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (!containsLetter) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoDeadlineDescriptionException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Checks for presence of description for a event task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line user\u0027s input"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param eventAt end of description string of event"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @throws NoEventDescriptionException if no description is found in user\u0027s event input."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see NoEventDescriptionException"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void checkForEventDescription(String line, int eventAt) throws NoEventDescriptionException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        boolean containsLetter \u003d line.substring(lengthOfEvent, eventAt - 4).matches(\".*[a-zA-Z]+.*\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if (!containsLetter) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            throw new NoEventDescriptionException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 91
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * \u003ch1\u003eWelcome to FriendlyBot!\u003c/h1\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * \u003ch2\u003eFriendlyBot is a program that helps manage users\u0027 task lists.\u003c/h2\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * \u003ch3\u003eHere are FriendlyBot\u0027s Features:\u003c/h3\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * \u003cul\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *     \u003cli\u003eStores todos\u003c/li\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *     \u003cli\u003eStores deadlines with deadline date (Can read yyyy-mm-dd format)\u003c/li\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *     \u003cli\u003eStores events with event location\u003c/li\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * \u003c/ul\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @author ElizabethChan"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @since 2020-08-24"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBot {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    // Creating a new text file to store task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static String PATH \u003d new File(\"\").getAbsolutePath();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    static File f \u003d new File(PATH + \"/friendlyBot.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Creates a new text file to store users\u0027 tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * \u003cbr\u003e\u003cbr\u003eCalls the the methods to read and write to the text file, and handles the UI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @throws IOException happens when there is a failure during reading, writing and searching file or directory"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *                     operations."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Storage"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        ArrayList\u003cFriendlyBotTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        // Storage deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskCount \u003d Storage.readFile(tasks, taskCount, f);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        greetUser();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        // Calls Ui class to handle user inputs"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        Ui.handleUi(tasks, taskCount);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        Storage.writeFile(tasks, taskCount, f);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void greetUser() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Hello, I\u0027m FriendlyBot, your Friendly To Do List! :)\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"Enter a To Do:\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void invalidCommand() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! I don\u0027t think I know what you mean. ☹\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Displays the user\u0027s new task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount number of tasks in the updated list after the user has entered a new task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param task      the arraylist containing all the user\u0027s tasks thus far."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - after incrementing it by 1, from adding a new todo to the arraylist."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int displayNewTask(int taskCount, FriendlyBotTask task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Great! 😊 I\u0027ve added this task:\\n\\t\" + task.toString() +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"\\nNow you have \" + (taskCount + 1) + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 77
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoDeadlineDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Subclass of FriendlyBot that contains deadline tasks.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Contains constructor and overridden {@code toString()} method in FriendlyBot.java."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see FriendlyBotDeadline#toString()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotDeadline extends FriendlyBotTask {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotDeadline(String description, String by){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotDeadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    String taskType \u003d \"[D]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskType + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 31
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Subclass of FriendlyBot that contains event tasks.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Contains constructor and overridden {@code toString()} method in FriendlyBot.java."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see FriendlyBotEvent#toString()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotEvent extends FriendlyBotTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotEvent(String description, String at){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotEvent(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    String taskType \u003d \"[E]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskType + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 29
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Superclass of FriendlyBotTodo, FriendlyBotDeadline and FriendlyBotEvent.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Contains constructor, getter, setter, {@code getStatusIcon()}, {@code markAsDone()} and original {@code toString()} methods."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see FriendlyBotTask#getStatusIcon()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see FriendlyBotTask#markAsDone()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see FriendlyBotTask#toString()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotTask implements Serializable {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotTask(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return tick or cross icon - based on boolean variable {@code isDone}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTask#markAsDone()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    // Return tick or x symbols"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Sets {@code isDone} to true once method is called."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return status icon by calling {@code getStatusIcon()}and task description.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTask#getStatusIcon()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 50
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotTaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Subclass of FriendlyBot.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Contains {@code readFile()} and {@code writeToFile()} methods, as well as other sub-methods."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see FriendlyBotTaskManager#readFile(ArrayList, int, File)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see FriendlyBotTaskManager#writeToFile(ArrayList, int, File)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotTaskManager extends FriendlyBot {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Scans data in text file, and adds new tasks to corresponding task list.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to update user\u0027s new task list when they first run/re-run the program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param f user\u0027s text file to scan/read off of."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @throws FileNotFoundException if no file is found/created."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTaskManager#readFileTodo(ArrayList, int, String[])"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTaskManager#readFileDeadline(ArrayList, int, String[])"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTaskManager#readFileEvent(ArrayList, int, String[])"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int readFile(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            // Using scanner object that uses text file object as source of data to READ (SCAN) from the text file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                final String[] taskListData \u003d line.trim().split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                boolean isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                String taskDescription;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                switch (taskListData[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    case \"[T]\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        taskCount \u003d readFileTodo(tasks, taskCount, taskListData);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    case \"[D]\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        taskCount \u003d readFileDeadline(tasks, taskCount, taskListData);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    case \"[E]\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        taskCount \u003d readFileEvent(tasks, taskCount, taskListData);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleFileNotFound();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleFileNotFound() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Looks like that file couldn\u0027t be found! 🙃\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Writes new data into text file for storage."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to update user\u0027s new task list in the text file once they\u0027ve edited it."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param f user\u0027s text file to write to."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @throws IOException Signals that an I/O exception of some sort has occurred. This class is the general class of"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * exceptions produced by failed or interrupted I/O operations."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTaskManager#writeToFileTodo(StringBuilder, FriendlyBotTodo)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTaskManager#writeToFileDeadline(StringBuilder, FriendlyBotDeadline) FileDeadline(ArrayList, int,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * String[])"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTaskManager#writeToFileEvent(StringBuilder, FriendlyBotEvent) FileEvent(ArrayList, int, String[])"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void writeToFile(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, File f) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        StringBuilder dataString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        for (FriendlyBotTask task : tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            if (task instanceof FriendlyBotTodo) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                writeToFileTodo(dataString, (FriendlyBotTodo) task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            } else if (task instanceof FriendlyBotDeadline) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                writeToFileDeadline(dataString, (FriendlyBotDeadline) task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            } else if (task instanceof FriendlyBotEvent) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                writeToFileEvent(dataString, (FriendlyBotEvent) task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        fw.write(String.valueOf(dataString));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int readFileEvent(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String[] taskListData) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        isDone \u003d Boolean.parseBoolean(taskListData[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String[] eventInfo \u003d taskListData[2].trim().split(\"\\\\|\", 2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskDescription \u003d eventInfo[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String at \u003d eventInfo[1];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        tasks.add(new FriendlyBotEvent(taskDescription, at, isDone));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int readFileDeadline(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String[] taskListData) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        isDone \u003d Boolean.parseBoolean(taskListData[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String[] deadlineInfo \u003d taskListData[2].trim().split(\"\\\\|\", 2);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskDescription \u003d deadlineInfo[0];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String by \u003d deadlineInfo[1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        tasks.add(new FriendlyBotDeadline(taskDescription, by, isDone));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int readFileTodo(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String[] taskListData) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        isDone \u003d Boolean.parseBoolean(taskListData[1]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskDescription \u003d taskListData[2];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        tasks.add(new FriendlyBotTodo(taskDescription, isDone));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void writeToFileEvent(StringBuilder dataString, FriendlyBotEvent task) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        FriendlyBotEvent event \u003d task;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String eventString \u003d event.taskType + \"|\" + event.getDone() + \"|\" + event.description + \"|\" +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                event.at + System.lineSeparator();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        dataString.append(eventString);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void writeToFileDeadline(StringBuilder dataString, FriendlyBotDeadline task) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        FriendlyBotDeadline deadline \u003d task;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String deadlineString \u003d deadline.taskType + \"|\" + deadline.getDone() + \"|\" + deadline.description"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                + \"|\" + deadline.by + System.lineSeparator();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        dataString.append(deadlineString);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void writeToFileTodo(StringBuilder dataString, FriendlyBotTodo task) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        FriendlyBotTodo todo \u003d task;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String todoString \u003d todo.taskType + \"|\" + todo.getDone() + \"|\" + todo.description +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                System.lineSeparator();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        dataString.append(todoString);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 155
    }
  },
  {
    "path": "src/main/java/bots/FriendlyBotTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Subclass of FriendlyBot that contains todo tasks.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Contains constructor and overridden {@code toString()} method in FriendlyBot.java."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see FriendlyBotTodo#toString()"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class FriendlyBotTodo extends FriendlyBotTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotTodo(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public FriendlyBotTodo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    String taskType \u003d \"[T]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskType + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 26
    }
  },
  {
    "path": "src/main/java/bots/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package bots;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoDeadlineDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoDescriptionAndDeadlineException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoDescriptionAndEventAtException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoEventDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import exception_initialisations.NoTodoDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Class that contains method to sort out different types of user inputs, and calls their corresponding methods.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see Ui#handleUi(ArrayList, int)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class Ui extends FriendlyBot {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that scans user\u0027s inputs, then sorts out different types of user inputs.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * It then calls their corresponding methods."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to track how many tasks there are in the user\u0027s task list thus far."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - to be used in other methods so the full task list can be accessed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Ui#uiHandleDone(ArrayList, String) (ArrayList, String, String) (ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Ui#uiHandleFind(ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Ui#uiHandleList(ArrayList, int) (ArrayList, int, String)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Ui#uiHandleTask(ArrayList, int, String)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int handleUi(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            // Create new array to check for \u0027done (no.)\u0027 input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            String[] checkDone \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            if (checkDone[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    uiHandleDone(tasks, checkDone[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    noDoneIndex();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            } else if (checkDone[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    taskCount \u003d uiHandleDelete(tasks, taskCount, checkDone[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    noDeleteIndex();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            } else if (checkDone[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    uiHandleFind(tasks, line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    noFindKeyword();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    uiHandleList(tasks, taskCount);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } else if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    handleBye();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    taskCount \u003d uiHandleTask(tasks, taskCount, line);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleBye() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"\\nHope you found this app useful! \\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"See you again! :)\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void noFindKeyword() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Please include some keyword(s) you\u0027re trying to find in your task list!\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \" 😊\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void noDeleteIndex() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Please indicate which task, in your task list, you\u0027d like to delete! 😊\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void noDoneIndex() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Please indicate which task, in your task list, you\u0027d like to mark as\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \" done! 😊\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that handle\u0027s user\u0027s tasks by sorting them into todos, deadline and events.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * It then calls the corresponding methods."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to track how many tasks there are in the user\u0027s task list thus far."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line to check the first word of the user\u0027s input to determine task type."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - to be used in other methods so the full task list can be accessed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Ui#uiHandleTodo(ArrayList, int, String) (ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Ui#uiHandleDeadline(ArrayList, int, String) (ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see Ui#uiHandleEvent(ArrayList, int, String) (ArrayList, int) (ArrayList, int, String)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int uiHandleTask(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String line) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String lineWords[] \u003d line.split(\" \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        switch (lineWords[0]) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                taskCount \u003d uiHandleTodo(tasks, taskCount, line);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                taskCount \u003d uiHandleDeadline(tasks, taskCount, line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                taskCount \u003d uiHandleEvent(tasks, taskCount, line);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                invalidCommand();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that marks user\u0027s task as done."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param s task information (as a string) to be marked as done."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void uiHandleDone(ArrayList\u003cFriendlyBotTask\u003e tasks, String s) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            Integer.parseInt(s);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            int d \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            tasks.get(d - 1).markAsDone();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            System.out.println(\"Good job! :) I\u0027ve marked this task as complete:\\n\\n\\t\" +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    tasks.get(d - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleDoneNotInNumerals();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleInvalidDoneIndex();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleInvalidDoneIndex() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! It seems like the number of the task you\u0027re trying to set as done is \" +"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"invalid! 🤨\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleDoneNotInNumerals() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Please indicate in NUMERALS, which task you\u0027ve done! 😅\\n\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that removes user\u0027s task from the user\u0027s task list."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to update the new task list by decrementing the task count."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param s task information (as a string) to be marked as deleted."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - to be used in other methods so the full task list can be accessed."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int uiHandleDelete(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String s) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            Integer.parseInt(s);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            int d \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            System.out.println(\"Alrighttt, I\u0027ve successfully removed this task:\\n\\t\" +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    tasks.get(d - 1).toString() + \"\\n\" + \"Now you have a grand total of... \" + (taskCount - 1) +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                    \" task(s) in your list! 👍🏼\\n\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            taskCount--;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            tasks.remove(d - 1);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleDeleteNotInNumerals();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleInvalidDeleteIndex();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleInvalidDeleteIndex() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! It seems like the number of the task you\u0027re trying to delete is \" +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"invalid! 🤨\\n\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleDeleteNotInNumerals() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Please indicate in NUMERALS, which task you want to delete! 😅\\n\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that looks for, and displays, user\u0027s relevant task(s) in user\u0027s task list, based on user\u0027s input"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * (keywords)."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line keyword user wants to look for in tasks."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void uiHandleFind(ArrayList\u003cFriendlyBotTask\u003e tasks, String line) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        ArrayList\u003cFriendlyBotTask\u003e findArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        String lookFor \u003d line.substring(5);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        for (FriendlyBotTask item : tasks) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            if (item.description.contains(lookFor)) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                findArray.add(item);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        printFindTasks(findArray);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void printFindTasks(ArrayList\u003cFriendlyBotTask\u003e findArray) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Here is/are the relevant task(s) in your list:\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        int findArrayCount \u003d 1;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        for (FriendlyBotTask findArrayItem : findArray) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            System.out.println(findArrayCount + \". \" + findArrayItem);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            findArrayCount++;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that displays all the tasks in the user\u0027s task list."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to track how many tasks there are in the user\u0027s task list thus far."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void uiHandleList(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        if(taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleEmptyTaskList();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            printTaskList(tasks, taskCount);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleEmptyTaskList() {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Hmm, looks like your task list is currently still empty 😮. Try adding a todo, deadline \" +"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"or event!\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void printTaskList(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Here is/are the task(s) in your list:\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that handles user\u0027s event tasks by checking if user\u0027s event input is valid.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * If it is, then method adds new event to the user\u0027s task list, along with the event description and location."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to track how many tasks there are in the user\u0027s task list thus far."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line to determine event details (description, location)."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - to update the user\u0027s task count."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see ExceptionAndCheckForMethods#checkForDescriptionAndEventAt(String) (String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * (ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see ExceptionAndCheckForMethods#checkForEventDescription(String, int) (String) (String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *      * (ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBot#displayNewTask(int, FriendlyBotTask)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int uiHandleEvent(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String line) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            ExceptionAndCheckForMethods.checkForDescriptionAndEventAt(line);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            int eventAt \u003d line.indexOf(\"/at\") + 4;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            String at \u003d line.substring(eventAt);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            ExceptionAndCheckForMethods.checkForEventDescription(line, eventAt);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            tasks.add(new FriendlyBotEvent(line, at));"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            tasks.get(taskCount).description \u003d line.substring(6, eventAt - 4);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            taskCount \u003d displayNewTask(taskCount, tasks.get(taskCount));"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (NoDescriptionAndEventAtException e) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleMissingDescAndAt();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleMissingAt();"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (NoEventDescriptionException e) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleMissingEventDesc();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleMissingEventDesc() {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Are you missing a description for your event? 🧐\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleMissingAt() {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Are you missing a time/place for your event? 🧐 (use \u0027/at\u0027!)\");"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleMissingDescAndAt() {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Are you missing a description AND a time/place for your \" +"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "                \"event? 😱\");"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that handles user\u0027s deadline tasks by checking if user\u0027s deadline input is valid.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * If it is, then method adds new deadline to the user\u0027s task list, along with the event description and deadline"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * date."
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to track how many tasks there are in the user\u0027s task list thus far."
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line to determine deadline details (description, deadline date)."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - to update the user\u0027s task count."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see ExceptionAndCheckForMethods#checkForDescriptionAndDeadline(String) (String) (String) (ArrayList, int,"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * String)"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * (ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see ExceptionAndCheckForMethods#checkForDeadlineDescription(String, int) Description(String, int) (String)"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * (String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *      * (ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see DeadlineDate#checkForDateFormat(ArrayList, int, String)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBot#displayNewTask(int, FriendlyBotTask)"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int uiHandleDeadline(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String line) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            ExceptionAndCheckForMethods.checkForDescriptionAndDeadline(line);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            int deadlineBy \u003d line.indexOf(\"/by\") + 4;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            String by \u003d line.substring(deadlineBy);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            ExceptionAndCheckForMethods.checkForDeadlineDescription(line, deadlineBy);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            by \u003d DeadlineDate.checkForDateFormat(tasks, taskCount, by);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            tasks.add(new FriendlyBotDeadline(line, by));"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            tasks.get(taskCount).description \u003d line.substring(9, deadlineBy - 4);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            taskCount \u003d displayNewTask(taskCount, tasks.get(taskCount));"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (NoDescriptionAndDeadlineException e) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleMissingDescAndBy();"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleMissingBy();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (NoDeadlineDescriptionException e) {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleMissingDeadlineBy();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleMissingDeadlineBy() {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Are you missing a description for your deadline? 🧐\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleMissingBy() {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Are you missing a deadline? 🧐 (use \u0027/by\u0027!)\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleMissingDescAndBy() {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Are you missing a description AND a deadline?? 😱\");"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Method that handles user\u0027s todo tasks by checking if user\u0027s todo input is valid.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * If it is, then method adds new todo to the user\u0027s task list, along with the todo description."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks array list containing all tasks thus far."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to track how many tasks there are in the user\u0027s task list thus far."
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param line to determine todo details (description)."
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - to update the user\u0027s task count."
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see ExceptionAndCheckForMethods#checkForTodoDescription(String) (String) (String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * (ArrayList, String) (ArrayList, int, String)"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBot#displayNewTask(int, FriendlyBotTask)"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int uiHandleTodo(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, String line) {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            ExceptionAndCheckForMethods.checkForTodoDescription(line);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            tasks.add(new FriendlyBotTodo(line));"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            tasks.get(taskCount).description \u003d line.substring(5);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            taskCount \u003d displayNewTask(taskCount, tasks.get(taskCount));"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (NoTodoDescriptionException e) {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleMissingTodoDesc();"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleMissingTodoDesc() {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! You can\u0027t leave the description of your Todo empty. 😞\");"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 379
    }
  },
  {
    "path": "src/main/java/exception_initialisations/NoDeadlineDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package exception_initialisations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoDeadlineDescriptionException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/exception_initialisations/NoDescriptionAndDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package exception_initialisations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoDescriptionAndDeadlineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/exception_initialisations/NoDescriptionAndEventAtException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package exception_initialisations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoDescriptionAndEventAtException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/exception_initialisations/NoEventDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package exception_initialisations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoEventDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/exception_initialisations/NoTodoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package exception_initialisations;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class NoTodoDescriptionException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 4
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import bots.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Stores user\u0027s tasks into text file.\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * Specifically, contains readFile and writeFile methods to handle reading from and writing into text file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see Storage#readFile"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " * @see Storage#writeFile(ArrayList, int, File)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "public class Storage extends FriendlyBot {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Contains readFile method from FriendlyBotTaskManager."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks arraylist containing all of the user\u0027s tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to be updated after reading in the tasks in the text file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param f text file to read from."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - to update the number of tasks in the user\u0027s task list after reading from text file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTaskManager#readFile(ArrayList, int, File)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    // Scanning/Reading info. into text file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int readFile(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, File f) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            taskCount \u003d FriendlyBotTaskManager.readFile(tasks, taskCount, f);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleReadFileError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleReadFileError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Looks like we were unable to read the task info. in the text file! 😭\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * Contains writeFile method from FriendlyBotTaskManager."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param tasks arraylist containing all of the user\u0027s tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param taskCount to keep the task list updated on the current number of tasks before writing into it."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @param f text file to write into."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @return taskCount - to update the number of tasks in the user\u0027s task list after writing into the text file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     * @see FriendlyBotTaskManager#writeToFileEvent(StringBuilder, FriendlyBotEvent)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    // Writing updated info. into text file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static int writeFile(ArrayList\u003cFriendlyBotTask\u003e tasks, int taskCount, File f) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            FriendlyBotTaskManager.writeToFile(tasks, taskCount, f);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "            handleWriteFileError();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    public static void handleWriteFileError() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "        System.out.println(\"Oops! Looks like we were unable to write the new task info. to the text file! 😭\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "elizabethcwt": 65
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\friendlyBot.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "elizabethcwt"
        },
        "content": "java -classpath ..\\bin friendlyBot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "elizabethcwt": 2
    }
  }
]
