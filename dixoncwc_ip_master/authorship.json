[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "# Duke Program User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "* 1.[Introduction](https://github.com/dixoncwc/ip/tree/master/docs#1-introduction)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "* 2.[Starting the Program](https://github.com/dixoncwc/ip/tree/master/docs#2-staring-the-program)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "* 3.[Features](https://github.com/dixoncwc/ip/tree/master/docs#3-features)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    * 3.1 [Add Task](https://github.com/dixoncwc/ip/tree/master/docs#31-add-task)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    * 3.2 [Display Task](https://github.com/dixoncwc/ip/tree/master/docs#32-display-task)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    * 3.3 [Mark Task as Done](https://github.com/dixoncwc/ip/tree/master/docs#33-mark-task-as-done)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    * 3.4 [Delete Task](https://github.com/dixoncwc/ip/tree/master/docs#34-delete-task)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    * 3.5 [Search Task](https://github.com/dixoncwc/ip/tree/master/docs#35-search-task)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    * 3.6 [Show Help](https://github.com/dixoncwc/ip/tree/master/docs#36-show-help)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "* 4.[Exiting the Program](https://github.com/dixoncwc/ip/tree/master/docs#4-exiting-the-program)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Duke program is a CLi-based program that allows user to manage their task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "## 2. Starting the Program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Before starting the program, ensure that Java 11 is install in your computer."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "1. Download the jar file from [here](https://github.com/dixoncwc/ip/releases/tag/A-Jar)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "2. Extract the jar file to a root folder you prefer."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "3. Open command prompt and cd to the root folder of the jar file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "4. Run this command chcp 65001 to enable it "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "5. Change the font type to nSimSun"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "6. Run this command java -Dfile.encoding\u003dUTF-8 -jar iP.jar"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "7. Command prompt should display this Duke Intro Interface "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/Duke%20start%20up.png)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "### 3.1 `Add task`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Duke program allows you to do 3 different categories of task: ToDo, Deadline \u0026 Event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "##### 3.1.1 `Add a ToDo Task`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "This feature will allow user to add a ToDo type of task to the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `todo \u003cdetails\u003e`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `todo read book`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/todo.png) "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "##### 3.1.2 `Add a Deadline task`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "This feature will allow user to add a Deadline type of task to the list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `deadline \u003cdetails\u003e /by \u003cDate in the format of YYYY-MM-DD`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `deadline return book /by 2020-09-22`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/deadline.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "##### 3.1.3 `Add a Event task`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "This feature will allow user to add a Event type of task to the list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `event \u003cdetails\u003e /at \u003cDate in the format of YYYY-MM-DD`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `event party /at 2020-09-25`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/event.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "### 3.2 `Display Task`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "This feature will display the full list of task with the command `list`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `list`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/list.png)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "### 3.3 `Mark Task as Done`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "This feature will allow user to mark their task as done"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `done \u003cArrayIndex\u003e`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `done 1`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/done.png)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "### 3.4 `Delete Task`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "This feature will allow user to delete redundant task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `delete \u003cArrayIndex\u003e`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `delete 2`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output: "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/delete.png)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "### 3.5 `Search Task`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "This feature will allow user to search a task based on a keyword"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `find book`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/search.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "### 3.6 `Show Help`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "This feature will display a help list for user to know the usage and command"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `help`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/help.png)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "## 4. Exiting the Program"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "In order to exit the program and save the task list use command `bye`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Example: `bye`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "![](photo/bye.png)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 112,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This class handles all the deadline details and deadlineDate"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public LocalDate deadlineDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            deadlineDate \u003d LocalDate.parse(by.trim());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            this.by \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void setBy(String by){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String[] getTaskDetails(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        String[] taskTime \u003d new String[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        taskTime[0] \u003d this.getBy();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return taskTime;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 42
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": " * This is the main class that runs the Duke program"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public static void main(String[] args) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        Duke duke \u003d new Duke(\"Duke/DukeTaskList.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        duke.dukeStart();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            this.taskList \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }catch(FileNotFoundException | DukeException e){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method will call the UI class and starts the intro of the program"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void dukeStart() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        ui.showIntro();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 33,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 3
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This class handles all the event details and meetingTime"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    protected String meetingTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public LocalDate meetingDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Events(String description, String meetingTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            meetingDate \u003d LocalDate.parse(meetingTime.trim());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            this.meetingTime \u003d meetingDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            this.meetingTime \u003d meetingTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void setMeetingTime(String meetingTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.meetingTime \u003d meetingTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String getMeetingTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return meetingTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + meetingTime + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String[] getTaskDetails(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        String[] taskTime \u003d new String[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        taskTime[0] \u003d this.getMeetingTime();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return taskTime;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 45
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": " * This class is use to parse the userCommand into split command and return to the main program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This three method will split the command according to the regex and return into a new Command array"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @param userCommand"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String[] parseCommand(String userCommand){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        String[] newCommand \u003d userCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return newCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String[] parseDeadlineCommand(String userCommand){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            String[] newDeadlineCommand \u003d userCommand.split(\"/by\", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            return newDeadlineCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String[] parseEventCommand(String userCommand){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        String[] newEventCommand \u003d userCommand.split(\"/at\" ,2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return newEventCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 24
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static boolean existLoadedFile \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static int loadIndex \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method will save the tasklist to a text file stored inside a directory when the user exit the program"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void saveFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            //throw new IOException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Error\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        String newTaskList \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        for(int i\u003d0; i \u003c taskList.getTaskSize(); i++){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            Task newTaskItem \u003d taskList.getTask().get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if(newTaskItem instanceof ToDo){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                newTaskList \u003d (\"T \" + \"| \" + taskList.getTask().get(i).getStatusIcon() + \" | \" + taskList.getTask().get(i).description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            } else if(newTaskItem instanceof Deadline){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                newTaskList \u003d (\"D \" + \"| \" + taskList.getTask().get(i).getStatusIcon() + \" | \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        + taskList.getTask().get(i).description + \" | \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        + newTaskItem.getTaskDetails()[0] + System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                newTaskList \u003d (\"E \" +  \"| \" + taskList.getTask().get(i).getStatusIcon() + \" | \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        + taskList.getTask().get(i).description + \" | \" + newTaskItem.getTaskDetails()[0]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            fw.write(newTaskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        ui.endConvo \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * When the user runs the program, it will check for existing file and load all task into the array"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException, DukeException{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        File loadFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        if(!loadFile.exists()){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            existLoadedFile \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            File newFilePath \u003d new File(\"Duke\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            boolean isNewDirectoryCreated \u003d newFilePath.mkdir();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if (isNewDirectoryCreated) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                File newFile \u003d new File(\"Duke/DukeTaskList.txt\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    newFile.createNewFile();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                } catch (IOException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    System.out.println(\"Failed to create file in new directory\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                System.out.println(\"Failed to create directory\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        ArrayList\u003cTask\u003e loadTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        Scanner file \u003d new Scanner(loadFile);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        while(file.hasNext()){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            String taskDetails \u003d file.nextLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            String[] splitTaskDetails \u003d taskDetails.trim().split(\" \\\\| \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            Task loadTask;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            // System.out.println(splitTaskDetails[3]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if(splitTaskDetails[0].equals(\"T\")){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                loadTask \u003d new ToDo(splitTaskDetails[2]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            } else if(splitTaskDetails[0].equals(\"D\")){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                //System.out.println(\"Hi\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                loadTask \u003d new Deadline(splitTaskDetails[2], splitTaskDetails[3]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }else if(splitTaskDetails[0].equals(\"E\")){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                loadTask \u003d new Events(splitTaskDetails[2], splitTaskDetails[3]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if(splitTaskDetails[1].equals(\"\\u2713\")){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                loadTask.markAsDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            loadTaskList.add(loadTask);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        if(existLoadedFile \u003d\u003d true \u0026\u0026 loadIndex \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"File Successfully Loaded\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            loadIndex++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }else if(existLoadedFile \u003d\u003d false \u0026\u0026 loadIndex \u003d\u003d 0){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Created directory\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return loadTaskList;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 115
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This abstract method is use in event and deadline to get individual task details such as time and description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public abstract String[] getTaskDetails();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 31
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": " * This class is a taskList of the class Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private ArrayList\u003cTask\u003e task \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method will return the arraylist size"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public int getTaskSize(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return this.task.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method will add new task into the arraylist"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @param newTask"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void addTask(Task newTask){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.task.add(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method will delete the task based on the taskIndex from the arraylist"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @param taskIndex"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Task removeTask(int taskIndex){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return this.task.remove(taskIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method will return the full task details from the arraylist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @param taskIndex"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Task getFullTask(int taskIndex){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return this.task.get(taskIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method will return the arraylist of class Task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * User can use this method to access class Task and get individual details of the task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public ArrayList\u003cTask\u003e getTask() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method is to load all the task from the saved file to the arraylist"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * @param loadedTaskList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedTaskList){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.task \u003d loadedTaskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 63
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String[] getTaskDetails() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        return new String[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 27
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    private static final String boundary \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String commandTxt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String[] Message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String searchKeyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public String newMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Task newTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public int taskNo \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public int index \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public int searchIndex \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public static boolean endConvo \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void showIntro() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.storage \u003d new Storage(\"Duke/DukeTaskList.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        this.taskList \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        for(int i\u003d0; i \u003c taskList.getTaskSize(); i++){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            taskNo++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"\\nHello from\\n\" + logo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(boundary+\"\\nHello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" +boundary);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        while(!endConvo){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if(!scan.hasNextLine()){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    commandTxt \u003d scan.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    Message \u003d parser.parseCommand(commandTxt);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    if (Message[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                       storage.saveFile(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    } else if (Message[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        displayList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    } else if (Message[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        done();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    } else if (Message[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        addTodo();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    } else if (Message[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        addDeadline();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    } else if (Message[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        addEvent();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    } else if (Message[0].equals(\"help\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        showHelp();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    } else if(Message[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        deleteTask();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    } else if(Message[0].equals(\"find\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        findTask();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    }else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                }catch(DukeException | IOException e){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    System.out.println(\"Oops!!! Sorry but I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(boundary+ \"\\nBye. Hope to see you again soon\\n\" +boundary);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method is use to search for task based on a keyword given by the user"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void findTask(){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        searchKeyword \u003d Message[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        ArrayList\u003cTask\u003e keywordTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        for(int i\u003d0; i \u003c taskList.getTaskSize(); i++){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            if(taskList.getTask().get(i).description.contains(searchKeyword)){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                task \u003d taskList.getFullTask(i);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                keywordTask.add(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(boundary + \"\\nHere are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        for(int i\u003d0; i \u003c keywordTask.size(); i++){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(String.format(\"%d\", searchIndex) + \".\" + keywordTask.get(i));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            searchIndex++;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        searchIndex \u003d 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method is use to display the whole list of task stored inside the ArrayList when the user"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * input command \"list\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void displayList(){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskSize(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(String.format(\"%d\", index) + \".\" + taskList.getFullTask(i));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        index \u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method is use to mark a task as done according to the index user has input"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void done(){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        int doneTaskNo \u003d Integer.parseInt(Message[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        task \u003d taskList.getFullTask(doneTaskNo - 1);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method is use to delete a task according to the index user has input"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void deleteTask() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        int deleteTaskNo \u003d (Integer.parseInt(Message[1])) - 1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        task \u003d taskList.getFullTask(deleteTaskNo);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        taskList.removeTask(deleteTaskNo);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getTaskSize() + \" task in the list\\n\" + boundary);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        taskNo--;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method is use to add a To-Do into the arraylist"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * User have to enter command todo with the task details"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void addTodo(){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            newTask \u003d new ToDo(Message[1]);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(boundary + \"\\nGot it. I\u0027ve added this task: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                   + \"  \" + taskList.getFullTask(taskNo));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.getTaskSize() + \" task in the list\\n\" + boundary);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            taskNo++;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Oops!!! The description of todo cannot be empty\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method is use to enter a task that has a deadline."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * User will have to input command deadline + details and datetime by using /by"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void addDeadline(){"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            newMessage \u003d Message[1];"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            String[] DeadlineMessage \u003d parser.parseDeadlineCommand(newMessage);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            newTask \u003d new Deadline(DeadlineMessage[0], DeadlineMessage[1]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(boundary + \"\\nGot it. I\u0027ve added this task: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    + \"  \" + taskList.getFullTask(taskNo));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.getTaskSize() + \" task in the list\\n\" + boundary);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            taskNo++;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Oops!!! Please enter a description and deadline\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * This method is use to enter an event that is happening some other days."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * User will have to input command event + details and datetime by using /at"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public void addEvent(){"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            newMessage \u003d Message[1];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            String[] EventMessage \u003d parser.parseEventCommand(newMessage);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            newTask \u003d new Events(EventMessage[0], EventMessage[1]);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(boundary + \"\\nGot it. I\u0027ve added this task: \" + System.lineSeparator()"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "                    + \"  \" + taskList.getFullTask(taskNo));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.getTaskSize() + \" task in the list\\n\" + boundary);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            taskNo++;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "            System.out.println(\"Oops!!! Please enter a description and event date\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     * User can input command help to display a help list that shows the individual command and usage"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    public static void showHelp(){"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Format for Done: done \u003ctaskno\u003e\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Format for List of task: list\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Format for EndConvo: bye\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Format for ToDo: todo \u003ctask\u003e\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Format for Deadline: deadline \u003ctask\u003e + /by \u003cdate\u003e\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Format for Event: event \u003ctask\u003e + /at \u003cdatetime\u003e\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Format for Delete: delete \u003ctaskno\u003e\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "        System.out.println(\"Format for Search: find \u003ckeyword\u003e\"  + \"\\n\" + boundary);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 213
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "event project meeting /at Monday 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "if ! javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dixoncwc"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dixoncwc": 2,
      "-": 36
    }
  }
]
