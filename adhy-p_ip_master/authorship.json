[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * Duke, the personal task manager."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private static final String FILEPATH \u003d \"data/saveData.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Load save data if the save file exists."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Create a new folder and save data otherwise"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param filePath the path for the save data"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            UI.fileNotFoundMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Reads the input from user, parse it as command, and execute the command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Repeats the process until \"bye\" command is executed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        UI.greet();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                String input \u003d UI.prompt();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                Command c \u003d Parser.parse(tasks, input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                c.execute(tasks, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                UI.invalidArgumentMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        new Duke(FILEPATH).run();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "adhy-p": 53
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public abstract void execute(TaskList tasks, Storage storage) throws DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 11
    }
  },
  {
    "path": "src/main/java/command/byeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class byeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            storage.saveData(tasks.getTasks());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            UI.bye();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            UI.failToWriteMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 26
    }
  },
  {
    "path": "src/main/java/command/deleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class deleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public deleteCommand(int index) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        // index - 1 will be done at task.TaskList.deleteFromList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        tasks.deleteFromList(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 23
    }
  },
  {
    "path": "src/main/java/command/doneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class doneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public doneCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            tasks.markAsDone(index); // index - 1 will be done at task.TaskList.markAsDone"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 27
    }
  },
  {
    "path": "src/main/java/command/eventDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class eventDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private String timeOfEvent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public eventDeadlineCommand(String type, String description, String timeOfEvent) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.timeOfEvent \u003d timeOfEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                Event event \u003d new Event(description, timeOfEvent);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                tasks.addToList(event);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                UI.invalidDateMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, timeOfEvent);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                tasks.addToList(deadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (DukeInvalidArgumentException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                UI.invalidDateMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "adhy-p": 46
    }
  },
  {
    "path": "src/main/java/command/findCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class findCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private String filter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public findCommand(String filter) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.filter \u003d filter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.findTasks(filter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        UI.printFilteredList(filteredTasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 27
    }
  },
  {
    "path": "src/main/java/command/listCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class listCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        UI.printList(tasks.getTasks());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 18
    }
  },
  {
    "path": "src/main/java/command/todoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class todoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public todoCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        tasks.addToList(new Todo(description));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 23
    }
  },
  {
    "path": "src/main/java/command/unknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class unknownCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public unknownCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        UI.handleUnknownCommandMessage(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 23
    }
  },
  {
    "path": "src/main/java/exception/DukeInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class DukeInvalidArgumentException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 4
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.byeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.deleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.doneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.eventDeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.findCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.listCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.todoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import command.unknownCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * Parses the command given by the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * List of available commands:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * bye"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * deadline DESCRIPTION /by YYYY-MM-DD HHmm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * delete INDEX"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * done INDEX"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * event DESCRIPTION /at YYYY-MM-DD HHmm"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * find KEYWORD"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * todo DESCRIPTION"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Returns a Command object based on the input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * If the command is not defined, return unknownCommand object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param tasks the current list of Task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param input the input given by the user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @return Command object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @throws DukeInvalidArgumentException If the argument given is in the wrong format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static Command parse(TaskList tasks, String input) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (input.trim().equals(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            return new byeCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (input.trim().equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            return new listCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                index \u003d Integer.parseInt(input.split(\"done\")[1].trim());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            if (index \u003c 1 || index \u003e tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            return new doneCommand(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                index \u003d Integer.parseInt(input.split(\"delete\")[1].trim());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            if (index \u003c 1 || index \u003e tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            return new deleteCommand(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                description \u003d input.trim().split(\"todo\")[1].trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            return new todoCommand(description);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            final String TYPE \u003d \"deadline\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            String deadlineDetails;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                deadlineDetails \u003d input.trim().split(\"deadline\")[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            String description, timeOfEvent;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                description \u003d deadlineDetails.split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                timeOfEvent \u003d deadlineDetails.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            return new eventDeadlineCommand(TYPE, description, timeOfEvent);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            final String TYPE \u003d \"event\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            String eventDetails;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                eventDetails \u003d input.trim().split(\"event\")[1];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            String description, timeOfEvent;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                description \u003d eventDetails.split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                timeOfEvent \u003d eventDetails.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            return new eventDeadlineCommand(TYPE, description, timeOfEvent);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            String filter;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                filter \u003d input.split(\"find\")[1].trim();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                UI.findWithoutArgumentMessage();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                return new listCommand();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            return new findCommand(filter);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return new unknownCommand(input);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 124
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private final String SAVEDIR \u003d \"data\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        StringBuilder line \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            line.append(serializeTask(task));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        fw.write(line.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        File directory \u003d new File(SAVEDIR);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            if (directory.mkdir()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                System.out.println(\"Successfully created a new directory for save file\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            Scanner s \u003d new Scanner(f); // create a scanner using the file as the source"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                tasks.add(deserializeTask(s.nextLine()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private Task deserializeTask(String serializedTask) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        String[] splitTask \u003d serializedTask.split(\"\\\\|\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        String taskType \u003d splitTask[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        boolean isDone \u003d splitTask[1].equals(\"1\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        String description \u003d splitTask[2].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            task \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            String by \u003d splitTask[3].trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            task \u003d new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            String at \u003d splitTask[3].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            task \u003d new Event(description, at, isDone);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    // T|1/0|Description"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    // D|1/0|Description|by"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    // E|1/0|Description|at"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private String serializeTask(Task task) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        result +\u003d task.getTaskType() + \"|\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        result +\u003d (task.getDoneStatus() ? 1 : 0) + \"|\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        result +\u003d task.getDescription();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            result +\u003d \"|\" + ((Deadline) task).getBy();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            result +\u003d \"|\" + ((Event) task).getAt();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return result + \"\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 94
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static final String type \u003d \"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public Deadline(String description, String by) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return \"[\" + type + \"]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 41
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static final String type \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public Event(String description, String at) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            this.at \u003d LocalDate.parse(at, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public LocalDate getAt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return \"[\" + type + \"]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 40
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return \"To be overridden by subclass\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void setDoneStatus() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 41
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import exception.DukeInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import ui.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void addToList(Task t) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        UI.addToListMessage(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void deleteFromList(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        String deletedTask \u003d tasks.get(index - 1).toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        UI.deleteTaskMessage(deletedTask, size);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public void markAsDone(int index) throws DukeInvalidArgumentException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            tasks.get(index - 1).setDoneStatus();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            throw new DukeInvalidArgumentException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        String description \u003d tasks.get(index - 1).toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        UI.markAsDoneMessage(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String filter){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return tasks.stream()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                .filter(task -\u003e task.getDescription().contains(filter))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 51
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static final String type \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return \"[\" + type + \"]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 23
    }
  },
  {
    "path": "src/main/java/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " * Represents the user interface of the application"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    private static void printLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"----------------------------------------------\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints welcome message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Closes the scanner and prints exit message"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Bye. Hope to see you soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the prompt and read user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @return the input given by the user"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static String prompt() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.print(\"root@PC:~# \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the message after successfully added a task to the list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param tasks the current list of tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void addToListMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the message for unknown command"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param input the command given by the user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void handleUnknownCommandMessage(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Huh? \" + input + \"?\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Invalid command. Please try again.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints all tasks in the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param tasks the list of current tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            for (Task item : tasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                System.out.println((i++) + \". \" + item);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            System.out.println(\"You have nothing to do! Yeay!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the message for done command"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param description the description of the task marked as done"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void markAsDoneMessage(String description) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"[\\u2713] \" + description);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the message for delete command"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param description the description of the deleted task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param size        the size of TaskList after deletion"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void deleteTaskMessage(String description, int size) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(description);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the error message for IO exception"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void failToWriteMessage() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Failed to write data\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the error message for FileNotFound exception"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void fileNotFoundMessage() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Error: save file not found\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the error message for invalid argument for certain commands"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * List of commands that requires one or more arguments:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * deadline"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * delete"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * done"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * event"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * todo"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void invalidArgumentMessage() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Invalid argument. Please try again.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the message for executing find command without a keyword"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void findWithoutArgumentMessage() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Missing argument. Executing list command.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints the error message for invalid date format"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void invalidDateMessage() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        System.out.println(\"Date should be in the format of YYYY-MM-DD HHmm\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "adhy-p"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * Prints list of tasks matching the keyword"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * If the list is empty, prints \"Found no matching tasks!\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     * @param tasks the list of filtered tasks"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    public static void printFilteredList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            for (Task item : tasks) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "                System.out.println((i++) + \". \" + item);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "            System.out.println(\"Found no matching tasks!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 185
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "deadline task2 /by tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "event task2 /at Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "deadline task3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "adhy-p": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java ../src/main/java/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adhy-p"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "adhy-p": 2
    }
  }
]
