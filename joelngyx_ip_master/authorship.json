[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Hello there! "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "This guide will show you how to use Duke. Duke is a task management program"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "that helps the User keep track of his/her tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Just ensure that the ip.jar file is in a folder."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Use the Folder location to execute the ip.jar program in Powershell."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* For example, a typical command could look like this:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "cd C:\\Users\\anon\\Desktop\\java_jar\u003e java - jar ip.jar"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "## Duke\u0027s Functions"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "### A. Adding a Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### Simply key in a command containing the following keywords:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````todo````, ````deadline````,````event````"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* A Todo Task should preferably be inputted in the following format:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````todo something````"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* This will result in Duke recording your Task. Duke will respond with a message like this:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "      [T][✘] homework"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### For Event and Deadline Tasks, the format is a little bit more specific"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* These Task types should be inputted in the following manner:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````deadline CS2113T finals /by dd/MM/yyyy additional text````"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Duke will also record down this Task and provide a message to show that the Task has been added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "      [D][✘] cs2113t finals (by 30/11/2020  additional text)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* There are no strict rules as to what you can include in place of"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "_\"by\"_ and _\"additional text\"_."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### The List and Find Functions"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Type ````list```` in your input to get a list of all the tasks stored in Duke"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* The command should show something like this:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "1.[T][✘] homework"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "2.[D][✘] cs2113t finals (by 2020/30/11   additional text)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Note that the date format is different in the list!"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* If you wish to find a particular Task, type in ````find stuff````, something like this:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Enter an input!"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "find finals"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "1.[D][✘] cs2113t finals (by 30/11/2020   additional text)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### Marking Tasks as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* If you have completed a Task, you might wish to indicate as such in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Simply evoke the list function and type in ````done index_of_Task_completed````, like this:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Enter an input!"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  [D][✓] cs2113t finals (by 30/11/2020   additional text)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### Deleting Tasks"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* You might wish to remove Tasks from your list. Just as with"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````done````, simply type in ````delete```` followed by the index "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "of the Task you want to delete"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Like this:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  [T][✘] homework"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Enter an input!"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "1.[D][✓] cs2113t finals (by 2020/30/11     additional text)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Enter an input!"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### Exiting Duke"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Type in ````bye```` to leave the program!"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 99,
      "-": 8
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Hello there! "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "```"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "This guide will show you how to use Duke. Duke is a task management program"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "that helps the User keep track of his/her tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "## Setting up"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Just ensure that the ip.jar file is in a folder."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Use the Folder location to execute the ip.jar program in Powershell."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* For example, a typical command could look like this:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "cd C:\\Users\\anon\\Desktop\\java_jar\u003e java - jar ip.jar"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "## Duke\u0027s Functions"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "### A. Adding a Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### Simply key in a command containing the following keywords:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````todo````, ````deadline````,````event````"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* A Todo Task should preferably be inputted in the following format:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````todo something````"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* This will result in Duke recording your Task. Duke will respond with a message like this:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "      [T][✘] homework"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### For Event and Deadline Tasks, the format is a little bit more specific"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* These Task types should be inputted in the following manner:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````deadline CS2113T finals /by dd/MM/yyyy additional text````"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Duke will also record down this Task and provide a message to show that the Task has been added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "      [D][✘] cs2113t finals (by 30/11/2020  additional text)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* There are no strict rules as to what you can include in place of"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "_\"by\"_ and _\"additional text\"_."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### The List and Find Functions"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Type ````list```` in your input to get a list of all the tasks stored in Duke"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* The command should show something like this:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "1.[T][✘] homework"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "2.[D][✘] cs2113t finals (by 2020/30/11   additional text)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Note that the date format is different in the list!"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* If you wish to find a particular Task, type in ````find stuff````, something like this:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Enter an input!"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "find finals"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "1.[D][✘] cs2113t finals (by 30/11/2020   additional text)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### Marking Tasks as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* If you have completed a Task, you might wish to indicate as such in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Simply evoke the list function and type in ````done index_of_Task_completed````, like this:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Enter an input!"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  [D][✓] cs2113t finals (by 30/11/2020   additional text)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### Deleting Tasks"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* You might wish to remove Tasks from your list. Just as with"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````done````, simply type in ````delete```` followed by the index "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "of the Task you want to delete"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Like this:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "  [T][✘] homework"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Enter an input!"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "1.[D][✓] cs2113t finals (by 2020/30/11     additional text)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "Enter an input!"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "````"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "##### Exiting Duke"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "* Type in ````bye```` to leave the program!"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 97,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Commands/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Data.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Ui.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Adds new Todo Task to a TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param description String containing the Task description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void addTodoTask(String description, TaskList list) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        list.addToList(new Todo(description));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        list.addToFile(new Todo(description));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Messages.printAddedTask(list.get(list.size() - 1), list.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Adds new Event or Deadline Task to a TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param description String containing the Task description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param type String containing the Type of Task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The askList being used by the User"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param date LocalDate containing the Date included in the Task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void addEventOrDeadlineTask (String description,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            String type, TaskList list, LocalDate date) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.addToList(new Event(description, date));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.addToFile(new Event(description, date));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.addToList(new Deadline(description, date));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.addToFile(new Deadline(description, date));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Messages.printAddedTask(list.get(list.size() - 1), list.size());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Updates the Task Status when the User evokes the DONE Command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param sizeOfList An integer containing how large the TaskList is at that instance"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void updateTaskStatus (String input, int sizeOfList, TaskList list) throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String providedIndexInStr \u003d input.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int providedIndexInInt \u003d Integer.parseInt(providedIndexInStr);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean isIndexValid \u003d ((providedIndexInInt \u003c sizeOfList) || (providedIndexInInt \u003e 0));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if (isIndexValid) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.get(providedIndexInInt - 1).markDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Storage.overWriteFile(list);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printTaskMarkedDone(list, providedIndexInInt);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Deletes Task indicated by the User"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param index Integer index of the Task that is to be deleted"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void deleteTask (TaskList list, String input, int index) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String checkedStrIndex \u003d input.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int checkedIntIndex \u003d Integer.parseInt(checkedStrIndex);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if (checkedIntIndex \u003c\u003d index + 1 \u0026\u0026 checkedIntIndex \u003e 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printRemovedTask(list, checkedIntIndex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.remove(checkedIntIndex - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Storage.overWriteFile(list);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Prints out Tasks that contain the description provided by the User"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param s String containing the User\u0027s input"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void findTask(String s, TaskList list) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        s \u003d s.replace(\"find\", \"\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.print(Messages.MARGINS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i ++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            boolean isTaskFound \u003d list.get(i).getDescription().contains(s);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(isTaskFound) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                System.out.println(count + \".\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                        Messages.printTask(list.get(i))"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                );"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                count ++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printNoTasksFound();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.print(Messages.MARGINS);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 119
    }
  },
  {
    "path": "src/main/java/Data/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * The Storage class is responsible for reading from and writing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * onto the file duke.txt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Creates a new file or opens an existing duke.txt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void getFile() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        File duke \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        duke.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Appends Tasks from the User\u0027s inputs to the existing"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * text in duke.txt"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing Task information to be added"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *              into the file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void appendToFile(Task input) throws IOException{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"duke.txt\" ,true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        fw.write(Messages.printTo(input));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Updates the contents of duke.txt by overwriting the entire"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * text file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void overWriteFile(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"duke.txt\", false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        while (i \u003c list.size()){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            fw.write(Messages.printTo(list.get(i)));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Loads the contents of duke.txt into a TaskList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList to be used by the User"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void load (TaskList list) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        //This function populates the list with saved data on duke.txt"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Scanner sc \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            char type \u003d task.charAt(1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            char status \u003d task.charAt(4);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            String description \u003d task.substring(6);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            scanInEachTask(list, type, description);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            updateTaskStatus(list, status, index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            index ++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * A void method that aids in reading duke.txt into"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * a TaskList"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList to be used by the User"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param type A Char that represents each Task type"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param description String containing Task description"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void scanInEachTask (TaskList list, char type, String description) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (\u0027T\u0027):"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.addToList(new Todo(description));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (\u0027E\u0027):"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.addToList(new Event(Parser.Parser.getDescription(\"event\", description),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    Parser.Parser.getDate(description)));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (\u0027D\u0027):"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.addToList(new Deadline(Parser.Parser.getDescription(\"deadline\", description),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    Parser.Parser.getDate(description)));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Updates Task status based on data in duke.txt"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list TaskList to be used by the User"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param status String representing the status of each Task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param index Index of the Task to be updated"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void updateTaskStatus (TaskList list, char status, int index) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        switch (status) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (\u0027\\u2713\u0027):"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.get(index).markDone();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        case (\u0027\\u2718\u0027):"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            list.get(index).markNotDone();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 137
    }
  },
  {
    "path": "src/main/java/Data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * A modified ArrayList which stores the User\u0027s Tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    // Used to instantiates an ArrayList of Tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    // Contains methods to be called by commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    // Namely,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    // 1) Adding tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    // 2) Listing tasks in the Data.TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    // 3) Updating isDone for tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    // 4) Removing tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void addToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        Storage.appendToFile(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String contentsOfTaskList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        sb.append(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        while(count \u003c taskList.size()){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            sb.append(\"\\n\").append(count + 1).append(\".\")."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    append(taskList.get(count).getTaskIcon()).append(\u0027[\u0027)."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    append(taskList.get(count).getStatusIcon())."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    append(\"]\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(taskList.get(count).getDate() !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                sb.append(taskList.get(count).getDescription().replace("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                        taskList.get(count).getDate().format(DateTimeFormatter"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                        .ofPattern(\"dd/MM/yyyy\")), taskList.get(count)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                        getDate().format(DateTimeFormatter.ofPattern(\"yyyy/dd/MM\"))"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                sb.append(taskList.get(count).getDescription());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        sb.append(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void remove(int i) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 76
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Data.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * This class initialises the application"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ui \u003d new TextUi();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        list \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            storage.load(list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            ui.showToUser(e.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.ui \u003d new TextUi();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        storage.getFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        do{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            input \u003d ui.getInput();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Parser.parseCommand(input, list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        while (!input.contains(\"bye\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void main (String[] args) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 54,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Commands.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Ui.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * The Parser consists of multiple methods that aid in the selection"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * of commands to execute based on the user\u0027s inputs"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String REGEX \u003d \"\\\\d+\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String ERROR \u003d \"Error\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Parses User input into a command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s inputs"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list TaskList being used by the User"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void parseCommand(String input, TaskList list) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        input \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(input.equals(\"list\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            showList(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if(input.contains(DONE)){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            prepareDoneCommand(list, input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if(input.contains(\"delete\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            prepareDeleteCommand(input, list);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if (input.contains(TODO)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            prepareToAddTodo(input, list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if (input.contains(EVENT) || input.contains(DEADLINE)){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            prepareToAddDeadlineOrEvent(input, list);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Commands.findTask(input, list);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if (input.contains(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printPreparingToExit();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printErrorInvalidInput();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Extracts the index from the User\u0027s input. Evoked when"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * the command specifically targets a particular task, such"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * the DELETE and DONE commands"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param type String containing the Task type"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return Integer representing the Task\u0027s index"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static int getIndex(String input, String type) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String description \u003d input.replace(type, \"\").replace(\" \", \"\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean hasDigits \u003d description.replaceAll(REGEX, \"\").isEmpty();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(hasDigits) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return Integer.parseInt(description);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return (-1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Shows all the Tasks in the User\u0027s TaskList"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void showList (TaskList list) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(list.contentsOfTaskList());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Checks for erros before proceeding with the DONE command"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void prepareDoneCommand (TaskList list, String input)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int index \u003d getIndex(input, DONE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean isIndexValid \u003d (index \u003e 0 \u0026\u0026 index \u003c list.size() + 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(isIndexValid) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Commands.updateTaskStatus(input, index, list);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printErrorInvalidInput();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Checks for error before proceeding with the DONE command"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void prepareDeleteCommand(String input, TaskList list) throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int index \u003d getIndex(input, \"delete\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean isIndexValid \u003d (index \u003e 0 \u0026\u0026 index \u003c list.size() + 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(isIndexValid) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Commands.deleteTask(list, input, index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printErrorInvalidInput();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Checks for errors before evoking the addTodoTask method in the Commands class"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void prepareToAddTodo(String input, TaskList list) throws IOException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String taskType \u003d getTaskType(input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean hasNoErrors \u003d (!taskType.equals(ERROR));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(hasNoErrors) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            String description \u003d getDescription(taskType, input);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Commands.addTodoTask(description, list);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Checks for errors before evoking the adEventOrDeadlineTask method in the"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Commands class"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param list The TaskList being used by the User"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void prepareToAddDeadlineOrEvent(String input, TaskList list) throws IOException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String taskType \u003d getTaskType(input);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean hasNoErrors \u003d (!taskType.equals(ERROR));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(hasNoErrors) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            date \u003d getDate(input);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            boolean isAValidDate \u003d (date !\u003d null);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(isAValidDate) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                String description \u003d getDescription(getTaskType(input), input);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Commands.addEventOrDeadlineTask(description, taskType, list, date);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Messages.printDateInputError();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Extracts the Task description"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param type String containing the type of Task"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return String containing the Task Description"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String getDescription(String type, String input) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String inputWithoutType \u003d input.replace(type, \"\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(type.equals(DEADLINE) || type.equals(EVENT)){"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            int positionOfFirstSlash \u003d getFirstPos(inputWithoutType);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            int positionOfSecondSlash \u003d inputWithoutType.indexOf(\"/\","
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    positionOfFirstSlash + 1);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            int positionOfThirdSlash \u003d inputWithoutType.indexOf(\"/\","
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    positionOfSecondSlash + 1);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            String ch1 \u003d String.valueOf(inputWithoutType.charAt(positionOfSecondSlash - 2));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            String ch2 \u003d String.valueOf(inputWithoutType.charAt(positionOfSecondSlash - 1));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(ch1.matches(REGEX) \u0026\u0026 ch2.matches(REGEX)){"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return getDescriptionWithTime(inputWithoutType, positionOfSecondSlash,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    positionOfThirdSlash, 2);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else if(ch2.matches(REGEX)){"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return getDescriptionWithTime(inputWithoutType, positionOfSecondSlash,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    positionOfThirdSlash, 1);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int index \u003d input.lastIndexOf(type);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return input.substring(index).replace(type, \"\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Extracts the position of the first instance of either \u0027/\u0027 or \u0027(\u0027. Used"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * for reading User inputs and data from duke.txt"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param inputWithoutType String containing the User\u0027s input, but with the"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *                         Task type removed"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return An integer representing the first instance of the characters"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * \u0027/\u0027 and \u0027(\u0027"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static int getFirstPos(String inputWithoutType) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(inputWithoutType.contains(\"(\")){"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return inputWithoutType.indexOf(\"(\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return inputWithoutType.indexOf(\"/\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Extracts Task Descriptions with their dates included"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param inputWithoutType String of User\u0027s input with the Task typre"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *                         removed"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param positionOfSecondSlash Integer representing the position of the"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *                              second instance of \u0027/\u0027"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param positionOfThirdSlash Integer representing the position of the"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *                             third instance of \u0027/\u0027"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param x Integer that helps with extracting the day component of the"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *          date"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return A string that contains both the description and the date of"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * the Task"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String getDescriptionWithTime(String inputWithoutType,"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            int positionOfSecondSlash, int positionOfThirdSlash, int x) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        LocalDate date \u003d getDate(inputWithoutType);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String dateToString \u003d date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String description_a \u003d inputWithoutType.substring(0, positionOfSecondSlash - x)"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                .replace(\"/\", \"(\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String description_b \u003d inputWithoutType.substring(positionOfThirdSlash + 5);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(inputWithoutType.contains(\")\")) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return (description_a + dateToString + \" \" + description_b);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(description_b.replace(\" \", \"\").isEmpty()) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return (description_a + dateToString + \")\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return (description_a + dateToString + \" \" + description_b + \")\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Extracts the type of Task- it could be TODO, EVENT, DEADLINE"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param s String containing the User\u0027s input"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return A string containing this potential Task\u0027s type"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String getTaskType(String s){"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean hasTodo \u003d s.contains(TODO);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean hasEvent \u003d s.contains(EVENT);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean hasDeadline \u003d s.contains(DEADLINE);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        boolean hasSlash \u003d s.contains(\"/\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(hasTodo) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(s.replace(TODO, \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Messages.printErrorEmptyInput(TODO);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return ERROR;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return TODO;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if(hasDeadline) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(!hasSlash) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Messages.printDateInputError();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return ERROR;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else if(s.replace(DEADLINE, \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Messages.printErrorEmptyInput(DEADLINE);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return ERROR;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else if(s.replace(DEADLINE, \"\").replace("
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    \" \", \"\").replace("
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                            \"/\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Messages.printErrorEmptyInput(DEADLINE);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return ERROR;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return DEADLINE;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if(hasEvent) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(!hasSlash) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Messages.printDateInputError();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return ERROR;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else if(s.replace(EVENT, \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Messages.printErrorEmptyInput(EVENT);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return ERROR;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else if(s.replace(EVENT, \"\").replace("
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    \" \", \"\").replace("
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                    \"/\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                Messages.printErrorEmptyInput(EVENT);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return ERROR;"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                return EVENT;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return ERROR;"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Extracts the date mentioned in the User\u0027s inputs when the Task"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * types DEADLINE and EVENT are intended to be added to the TaskList"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param s String containing the User\u0027s input"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return A LocalDate, containing the date mentioned in the User\u0027s"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * input"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static LocalDate getDate(String s) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int day;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int month;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int year;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int[] indexArray;"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        indexArray \u003d indexOfDividers(s);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(indexOfDividers(s) \u003d\u003d null){"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(!(((indexArray[1] - indexArray[0]) \u003e\u003d 1) \u0026\u0026 ((indexArray[2] - indexArray[1]) \u003e 1)"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                \u0026\u0026 ((s.length() - indexArray[2]) \u003e\u003d 4))){"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        day \u003d getPartOfDate(indexArray[1] - 2, indexArray[1], s);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(hasDateError(day, 31)){"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printDateComponentError(\"day\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        month \u003d getPartOfDate(indexArray[2] -2, indexArray[2], s);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(hasDateError(month, 12)){"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printDateComponentError(\"month\");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        year \u003d getPartOfDate(indexArray[2] + 1, indexArray[2] + 5, s);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(hasDateError(year, 9999)){"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            Messages.printDateComponentError(\"year\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        date \u003d LocalDate.of(year, month, day);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Helps with extracting the date in the User\u0027s input by extracting"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * out the day, month and year components of the date"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param start Integer containing the start index"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param end Integer containing the end index"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param input String containing the User\u0027s input"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return An integer containing either the day, month or year of the"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * date in the User\u0027s input"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static int getPartOfDate(int start, int end, String input) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(input.substring(start, end).matches(REGEX)){"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return Integer.parseInt(input.substring(start, end));"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if (input.substring(start + 1, end).matches(REGEX)){"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return Integer.parseInt(input.substring(start + 1, end));"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Checks if there is an error in how the User inputted the date"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param dateComponent Integer which could contain the day, month"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *                      or year of the date"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param i Integer containing the value that we use to determine"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *          if the day, month or year are valid"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return A boolean value which indicates if there are errors or"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * not"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static boolean hasDateError(int dateComponent, int i) {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(dateComponent \u003e i) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if (dateComponent \u003d\u003d 0) {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else if (dateComponent \u003d\u003d -1) {"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * Helps with the extracting of dates in User inputs by"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * recording the positions of the \u0027/\u0027 character. Also used"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * to see if there are sufficient \u0027/\u0027 characters in the input"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     *"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @param s String containing the User\u0027s input"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     * @return An integer array of positions of \u0027/\u0027 characters"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static int[] indexOfDividers(String s) {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String temp \u003d s.replace(\" \", \"\");"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        temp +\u003d \" \";"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        char[] ch \u003d s.toCharArray();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        int[] indexArray \u003d new int[3];"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for(int i \u003d 0; i \u003c s.length(); i ++){"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(ch[i] \u003d\u003d \u0027/\u0027 || ch[i] \u003d\u003d \u0027(\u0027){"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                indexArray[count] \u003d i;"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                count ++;"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            if(count \u003e 3){"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(count \u003c 2){"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return indexArray;"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 454
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * The Deadline class, which is a type of Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getTaskIcon(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 17
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * The Event class, which is a type of Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getTaskIcon(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 17
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * Constructs a generic Task object, which has the attributes"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * date (applies only for Event and Deadline type Tasks), Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * description, and the Task status"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Task(String description, LocalDate date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void markNotDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getTaskIcon(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 50
    }
  },
  {
    "path": "src/main/java/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * The Todo class, which is a type of Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getTaskIcon(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 15
    }
  },
  {
    "path": "src/main/java/Ui/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * The class Messages comprises of methods that produce"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * appropriate hints and notifications to the user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static final String MARGINS \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + MARGINS + \"Bye. Hope to see you again soon!\\n\" + MARGINS;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static final String WELCOME_MESSAGE \u003d \"\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \"Hello there!\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + MARGINS"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + MARGINS"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \"Welcome to Duke!\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + \"Otherwise known as Joel\u0027s CS2113T iP\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            + MARGINS;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printRemovedTask (TaskList list, int taskIndex){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(\"\" + MARGINS"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + \"  \" + list.get(taskIndex - 1).getTaskIcon() + \"[\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + list.get(taskIndex - 1).getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + list.get(taskIndex - 1).getDescription() + \"\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + \"Now you have \" + (list.size() - 1) + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + MARGINS"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printTaskMarkedDone (TaskList list, int checkedIntIndex){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(\"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + MARGINS"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + \"  \" + list.get(checkedIntIndex - 1).getTaskIcon() + \"[\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + list.get(checkedIntIndex - 1).getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + list.get(checkedIntIndex - 1).getDescription() + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + MARGINS"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printAddedTask(Tasks.Task input, int index){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        String task \u003d \"tasks\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        if(index \u003d\u003d 0){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            task \u003d \"task\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(\"\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + MARGINS"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + \"Got it. I\u0027ve added this task: \\n\" + \"  \" + input.getTaskIcon() + \"[\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + input.getStatusIcon() + \"]\" + input.getDescription()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + \"\\nNow you have \" + (index) + \" \" + task + \" in the list.\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + MARGINS"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String printTo(Task input){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return ( input.getTaskIcon() + \"[\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + input.getStatusIcon() + \"]\" + input.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static String printTask(Task input){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return ( input.getTaskIcon() + \"[\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + input.getStatusIcon() + \"]\" + input.getDescription());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printErrorEmptyInput(String s){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(MARGINS + \"Tasks of type \" + s"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                + \" cannot be empty\\n\" + MARGINS);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printErrorInvalidInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(MARGINS + \"Please enter a valid input\\n\" + MARGINS);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printDateInputError() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(MARGINS + \"Please enter dates in the form \u0027dd/MM/yyyy\u0027\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "                +  \"e.g. deadline return book /by 2/12/2019\\n\" + MARGINS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printDateComponentError(String s) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(\"Please enter a valid \" + s + \"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printNoTasksFound() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(\"Sorry, no tasks found!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public static void printPreparingToExit() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        System.out.println(\"Preparing to leave...\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 102
    }
  },
  {
    "path": "src/main/java/Ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "package Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " * The Text UI of Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joelngyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        out.print(\"Enter an input!\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void showToUser(String... message) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "            out.println(Messages.MARGINS + message + Messages.MARGINS);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        out.print(Messages.WELCOME_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "        out.print(Messages.BYE_MESSAGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joelngyx"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joelngyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joelngyx": 43
    }
  }
]
