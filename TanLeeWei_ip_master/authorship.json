[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 3,
      "-": 26
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "[D][✓] sleep (by: Dec 12 2020 11:59 PM)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "[T][✘] homework"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Duke Project is an application that allows the user to record, manage and keep track the tasks they have. If you can type fast, Duke can help to make their tasks management more effectively and efficiently."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "## Contents"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. [Quick Start](#Quick-Start)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "2. [Features](#Features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "3. [Command Summary](#Command-Summary)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. Ensure that you have Java 11 or above version installed on your computer."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. Download the latest duke.jar file from github."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. Copy the file to a folder that you want run on as the home folder."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. Run the duke program on cmd or terminal and the enter the directory holding the duke.jar."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. Run the command java -jar duke.jar to start the program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "1. Refer to the Features below for details of each command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "```"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "- Items in square brackets are optional e.g: deadline borrow book /by 2020-12-12 [23:59]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "- Commands can be entered in both upper and lower cases by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "- Parameters have to be in order e.g. event project meeting /at Sunday 12:00"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "  ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Adding Todo Tasks: `todo`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Adds a todo task to the task list. \u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Format: `todo description...`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Adding Deadline Tasks: `deadline`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Adds a deadline task to the task list. \u003cbr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Format: `deadline description /date in YYYY-MM-DD format [time in 24hr format ]` \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Example Input: `deadline homework /by 2020-10-20 23:59` \u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Example Output:  homework (by: Oct 20 2020 11:59 PM) \u003cbr\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Adding Event Tasks: `event`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Adds an event task to the task list. \u003cbr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Format: `event description /date and time` \u003cbr\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Example Input: `event project meeting /at Sunday 2-4` \u003cbr\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Example Output: project meeting (at: Sunday 2-4) \u003cbr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Deleting a task or all the task at once: `delete`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Delete a specific task from the task list or all the task at once. \u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Format: `delete INDEX` or `delete all` \u003cbr\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Tip: Check the list for the index before using the delete function. \u003cbr\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Example Input: `delete 1`  \u003cbr\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Marking a task as done: `done`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Marks a task as done. \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Format: `done INDEX` \u003cbr\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Tip: Check the list first for the index before using the done function. \u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Example Input: `done 2` \u003cbr\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Find a task: `find`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Find tasks by searching for a keyword and return all the tasks related to the keyword. \u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Format: `find KEYWORD` \u003cbr\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Tip: Check the list first for the index before using the find function. \u003cbr\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Example Input: `find book` \u003cbr\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Exits the program. \u003cbr\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Format: `bye` \u003cbr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "Duke data will be automatically saved after each command input given by the user. There is no need to save manually. \u003cbr\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "## Command Summary "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| Function  | Format | Example Input |"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| --------- | ------ | ------- |"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| Todo | `todo description` | `todo homework` |"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| Deadline | `deadline description /date in YYYY-MM-DD format [time in 24hr format in HH:mm]` | `deadline homework /by 2020-10-20 23:59` |"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| Event | `event description /at date and time` | `event project meeting /at Monday` | "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| List | `list` | `list` |"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| Done | `done INDEX`| `done 2` |"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| Delete | `delete INDEX` | `delete 1` |"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| Find | `find KEYWORD` | `find homework` |"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "| Bye | `bye` | `bye` |"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 72,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.storage.StorageFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Start up the application and starts the interaction with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static TaskList tasksList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private StorageFile storage \u003d new StorageFile(LINE, tasksList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private Ui userInput \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Runs the program until termination is called"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        runUntilByeIsCalled();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Print welcome message and set the previous save file to load."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                + \"|____/ \\\\____|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.tasksList \u003d storage.readFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Read in user commands and execute it until bye command is received."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private void runUntilByeIsCalled() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        Commands command;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String userCommand;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String[] firstWord;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            userCommand \u003d userInput.getUserCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            firstWord \u003d userCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            command \u003d Parser.parseCommand(userCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            command.setData(tasksList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            storage.writeToFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } while (!firstWord[0].trim().equals(\"bye\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Exit the program."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 72
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.Commands;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.EmptyDescriptionCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Parses user inputs."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Parses user inputs into different commands and allow the program to execute different commands"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param input user input command string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @return command to execute base on user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static Commands parseCommand(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String[] splitString \u003d input.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        splitString[0] \u003d splitString[0].trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        splitString[0] \u003d splitString[0].toLowerCase();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            switch (splitString[0]) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new ListCommand(LINE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new TodoCommand(splitString[1].trim(), LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new DeadlineCommand(splitString[1].trim(), LINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new EventCommand(splitString[1].trim(), LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new DoneCommand(splitString[1].trim(), LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new DeleteCommand(splitString[1].trim(), LINE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new FindCommand(splitString[1].trim(), LINE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new ByeCommand(LINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    return new InvalidCommand(LINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            return new EmptyDescriptionCommand(LINE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 64
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Print goodbye message when the user input is bye"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class ByeCommand extends Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public ByeCommand(String LINE) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 20
    }
  },
  {
    "path": "src/main/java/duke/command/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent valid commands given by the user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected TaskList tasksList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected Commands() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void setData(TaskList tasksList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.tasksList \u003d tasksList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Add deadline into Tasks List."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * The accepted format of deadline is eg: deadline return book /by 2020-12-12 23:59, the time is optional"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class DeadlineCommand extends Commands {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public DeadlineCommand(String input, String LINE) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            Deadline deadline \u003d new Deadline(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            deadline.setBy(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            tasksList.addTask(deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(deadline);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Now you have \" + tasksList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Incorrect date and time format. Please enter in (yyyy-mm-dd HH:mm) format\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Incorrect format for deadline. Please use the following format eg:\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    \"deadline borrow book /by 2020-12-12 \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Description cannot be empty!!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Delete a task from the Task List"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class DeleteCommand extends Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public DeleteCommand(String input, String LINE) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (input.equals(\"all\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                tasksList.getAllTasks().clear();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"All tasks have been removed\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                index \u003d Integer.parseInt(input) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + tasksList.getTask(index));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"Now you have \" + (tasksList.getTaskListSize() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                tasksList.removeTask(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"The index cannot be found. Please check the list and try again\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"The input has to be an integer or all\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Delete a task from the Task List"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class DoneCommand extends Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public int textNumber;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public DoneCommand(String input, String LINE) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            textNumber \u003d Integer.parseInt(input) - 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (tasksList.getTask(textNumber).getDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"The task has already been marked as done!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                tasksList.getTask(textNumber).markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(tasksList.getTask(textNumber));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"The index cannot be found. Please check the list and try again\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 37
    }
  },
  {
    "path": "src/main/java/duke/command/EmptyDescriptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Return a error message when the user input\u0027s description is empty"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class EmptyDescriptionCommand extends Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public EmptyDescriptionCommand(String LINE) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(\"The description or index cannot be empty!!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 21
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Add event into Task List"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class EventCommand extends Commands {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public EventCommand(String input, String LINE) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            Event event \u003d new Event(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            event.setWhen(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            tasksList.addTask(event);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Now you have \" + tasksList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Incorrect format for event input. Please follow the following format: e.g \" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    \" event project meeting /at Sunday\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Description cannot be empty!!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Find a task according to keyword given by user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class FindCommand extends Commands {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public ArrayList\u003cTask\u003e matchingTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public FindCommand(String input, String LINE) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        for (Task t : tasksList.getAllTasks()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (t.toString().toLowerCase().contains(input)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                matchingTask.add(t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        if (matchingTask.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"There are not matching tasks in your list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            for (Task t : matchingTask) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 42
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Return a error message when the user input is invalid"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class InvalidCommand extends Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public InvalidCommand(String LINE) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(\"This command is invalid. Please try again\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 21
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Display all the tasks in the Task List"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class ListCommand extends Commands {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public ListCommand(String LINE) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        if (tasksList.getAllTasks().isEmpty()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"There is no task in your list. Please add some tasks\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            for (Task t : tasksList.getAllTasks()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 32
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Add todo Task into the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class TodoCommand extends Commands {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public final String LINE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public TodoCommand(String input, String LINE) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            Todo todo \u003d new Todo(this.input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            tasksList.addTask(todo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(todo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"Now you have \" + tasksList.getTaskListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"An error occurred\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"\\n\" + LINE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 34
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 4
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent the file to store the Task data"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class StorageFile {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Default file name if the user did not provide file name."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static String LINE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static TaskList tasksList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public StorageFile(String LINE, TaskList tasksList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.LINE \u003d LINE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.tasksList \u003d tasksList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Load the file when the user start the program"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @return all the task from the previous usage"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static TaskList readFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            File myFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            Scanner myReader \u003d new Scanner(myFile);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String file \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                String[] splitString \u003d file.split(\" \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                if (file.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    Todo todo \u003d new Todo(splitString[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    if (file.contains(\"[✓]\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        todo.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    tasksList.addTask(todo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                } else if (file.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    int start \u003d splitString[1].indexOf(\"(\") + 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    int end \u003d splitString[1].indexOf(\")\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    String by \u003d splitString[1].substring(start, end);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    String text \u003d splitString[1].substring(0, start - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    Deadline deadline \u003d new Deadline(text);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    deadline.assignBy(by);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    if (file.contains(\"[✓]\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        deadline.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    tasksList.addTask(deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                } else if (file.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    int start \u003d splitString[1].indexOf(\"(\") + 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    int end \u003d splitString[1].indexOf(\")\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    String when \u003d splitString[1].substring(start, end);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    String text \u003d splitString[1].substring(0, start - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    Event event \u003d new Event(text);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    event.assignWhen(when);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    if (file.contains(\"[✓]\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                        event.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    tasksList.addTask(event);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"File Does not Exist. Nothing will be loaded\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Create the file to store all the tasks"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void CreateFile() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            File myObj \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (!myObj.getParentFile().exists()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myObj.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            if (myObj.exists()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                myObj.createNewFile();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"An error occurred while creating file\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Empty the file for saving purposes"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void ClearFile() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(FILE_PATH);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            writer.print(\"\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"An error occurred while clearing file\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Save all the task into the file after each user input"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public static void writeToFile() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            CreateFile();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            ClearFile();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            for (int i \u003d 0; i \u003c tasksList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                if (tasksList.getTask(i).getDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    myWriter.write(tasksList.getTask(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                    myWriter.write(tasksList.getTask(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            System.out.println(\"An error occur. Unable to save to file.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 137
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent a deadline task in the Task List"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        super.typeOfTask \u003d \"[D]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Set the date and time of the deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void setBy(String description) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String[] descriptionString \u003d description.split(\"/\", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        if (descriptionString[0].isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        by \u003d descriptionString[1].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.description \u003d descriptionString[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        descriptionString \u003d by.split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        date \u003d convertDateAndTime(descriptionString[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        by \u003d descriptionString[0] + \": \" + date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Convert the date into Month in words , day , year format and the time into 12 hour clock format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @param dateAndTime the date and time given by the user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * @return the converted date and time"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String convertDateAndTime(String dateAndTime) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String[] splitString \u003d dateAndTime.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            LocalDate d1 \u003d LocalDate.parse(splitString[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            date \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            LocalDate d1 \u003d LocalDate.parse(splitString[0]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            date \u003d d1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                SimpleDateFormat _24HourTime \u003d new SimpleDateFormat(\"HH:mm\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                SimpleDateFormat _12HourTime \u003d new SimpleDateFormat(\"hh:mm a\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                Date t1 \u003d _24HourTime.parse(splitString[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                time \u003d (_12HourTime.format(t1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            } catch (final ParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "                return date + \" \" + splitString[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            String dateTime \u003d date + \" \" + time;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            return dateTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void assignBy(String newBy) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        by \u003d newBy;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return super.typeOfTask + \"[\" + super.getStatusIcon() + \"] \" + this.description + \" (\" + this.by + \")\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 77
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent a event task in the Task List"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected String when;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        super.typeOfTask \u003d \"[E]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     * Set the time and date of the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void setWhen(String description) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String[] descriptionString \u003d description.split(\"/\", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        if (descriptionString[0].isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        when \u003d descriptionString[1].trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.description \u003d descriptionString[0].trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        descriptionString \u003d when.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        when \u003d descriptionString[0].trim() + \": \" + descriptionString[1].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void assignWhen(String newWhen) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        when \u003d newWhen;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return super.getTypeOfTask() + \"[\" + super.getStatusIcon() + \"] \" + this.description + \" (\" + this.when + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent a task in the TaskList"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    protected String typeOfTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String getTypeOfTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return typeOfTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 36
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        tasksList.remove(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return tasksList.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " * Represent a todo task in the Task List."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        super.typeOfTask \u003d \"[T]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return super.getTypeOfTask() + \"[\" + super.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 18
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        out.print(\"Enter Command: \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        String userCommands \u003d in.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "        return userCommands;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TanLeeWei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TanLeeWei": 26
    }
  }
]
