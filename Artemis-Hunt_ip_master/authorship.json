[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "## Introduction "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Task tracker. Supports simple todo (no date),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "deadline (date and time) and event (date and time)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Loads task list from `/data/duke.txt` on startup, creating"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "the file if not already present."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Task list is saved to `/data/duke.txt` on every modification of task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `list` - Display task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Prints the current task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Task types:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "* T - Todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "* D - Deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "* E - Event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Status:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "* y - Done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "* n - Not done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "1. [E][y] Birthday (at: 15/05/2019 11:00)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "2. [D][n] Homework (by: 08/04/2020 22:00)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `todo` - Add todo"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Adds a Todo item to the last list. Does not support entering of due date"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `todo \u003ctask name\u003e`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Example: `todo Cook dinner`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `deadline` - Add deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Adds a Deadline item to the task list. Compulsory to enter due date, in `string` format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `deadline \u003ctask name\u003e /by \u003cdate\u003e \u003ctime\u003e`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Date format `yyyy-mm-dd`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Time format: `hh:ss` in 24-hour format"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Example: `deadline learn Java /by 2020-09-25 16:59`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `event` - Add event"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Adds an Event item to the task list. Compulsory to enter event date, in `string` format"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `event \u003ctask name\u003e /at \u003cdate\u003e \u003ctime\u003e`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Date format `yyyy-mm-dd`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Time format: `hh:ss` in 24-hour format"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Example: `event meal with Yanny /at 2020-12-18 01:00`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `find` - Finds matching tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Searches through task list and displays a list of matching tasks. Searches based on exact string matching"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `find \u003csearch string\u003e`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Example: `find meal`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `done` - Mark as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Changes the status of a task to \"done\". "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `done \u003ctask index\u003e`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Example: `done 2`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `delete` - Delete task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Deletes a task from the task list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `delete \u003ctask index\u003e`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Example: `delete 3`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `clear` - Clears task list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Clears the entire task list. Will require confirmation"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "### `bye` - Exits program"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Quits the program. No side effects."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "Format: `bye`"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "Artemis-Hunt": 84
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.definitions.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.EmptyContentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.InvalidIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.InvalidParamArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.handlers.CommandHandler;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.parsers.InputParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.printers.Cliui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.tasktypes.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.handlers.SaveFileHandler;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        SaveFileHandler saveFileHandler \u003d new SaveFileHandler(\"./data\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            tasks \u003d saveFileHandler.openFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Cliui.printError(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        Cliui.printGreeting();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        input \u003d in.nextLine().strip();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        while(!(input.equals(\"bye\"))) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            boolean isTasksModified \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                CommandPacket packet \u003d new InputParser(input).parseInput();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                isTasksModified \u003d CommandHandler.handleCommand(packet, tasks, false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                if(isTasksModified) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                    saveFileHandler.writeFile(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            } catch (IllegalStateException | InvalidParamArgument | EmptyContentException |"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                        InvalidIndexException | NumberFormatException | IOException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                Cliui.printError(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            input \u003d in.nextLine().strip();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        Cliui.printGoodbye();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Artemis-Hunt": 52
    }
  },
  {
    "path": "src/main/java/duke/definitions/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.definitions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public enum Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    PRINT_LIST,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    ADD_TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    ADD_DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    ADD_EVENT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    MARK_AS_DONE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    DELETE_TASK,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    CLEAR_TASKS,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    FIND_TASK,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    INVALID"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 14
    }
  },
  {
    "path": "src/main/java/duke/definitions/CommandPacket.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.definitions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Defines a CommandPacket. Must be initialized with all 3 properties, though they can be empty."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class CommandPacket {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public Command commandType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String commandContent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public HashMap\u003cString, String\u003e params;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public CommandPacket(Command commandType, String commandContent, HashMap\u003cString, String\u003e params) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.commandContent \u003d commandContent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.params \u003d params;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String stringToPrint \u003d String.format(\"Definitions.Command: %s, command title: %s%nParams:%n\", commandType, commandContent);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        for(String key: params.keySet()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            stringToPrint \u003d stringToPrint + String.format(\"%s: %s%n\", key, params.get(key));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return stringToPrint;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 27
    }
  },
  {
    "path": "src/main/java/duke/definitions/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.definitions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public final class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private Constants() {}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    //General"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static final int LENGTH_OF_SPACE \u003d 1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    //Params parser"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static final String PARAM_SEPARATOR \u003d \" /\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static final int LENGTH_OF_PARAM_SEPARATOR \u003d 2;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static final int INDEX_IF_PARAM_NOT_FOUND \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyContentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class EmptyContentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public EmptyContentException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(command + \" cannot have an empty name/index!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class InvalidDateException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public InvalidDateException(String dateString) { super(\"Invalid date \" + dateString + \" entered!\"); }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 6
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class InvalidIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public InvalidIndexException(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(\"Invalid index \" + index + \" provided!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public InvalidIndexException(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(\"\\\"\" + input + \"\\\" is not a number!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidParamArgument.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class InvalidParamArgument extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public InvalidParamArgument(String paramType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(\"No param argument provided for param /\" + paramType);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public InvalidParamArgument(String paramType, boolean exist) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(\"Param /\" + paramType + \" specified more than once!\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public InvalidParamArgument(String paramType, String paramArgument) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(\"Invalid param argument \" + paramArgument + \" for param /\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                + paramType);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidParamType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class InvalidParamType extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public InvalidParamType(String paramType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(\"Invalid param /\" + paramType);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 8
    }
  },
  {
    "path": "src/main/java/duke/handlers/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.handlers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.definitions.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.InvalidParamArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.tasktypes.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.printers.Cliui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Helper class to handle a commandPacket"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public final class CommandHandler {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static boolean handleCommand(CommandPacket command, ArrayList\u003cTask\u003e tasks, boolean isReadFromFile)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            throws InvalidParamArgument, InvalidIndexException, NumberFormatException, DateTimeParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Handles the given commandPacket - takes action based on the commandType."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @param command the provided commandPacket"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @param tasks over task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @param isReadFromFile"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @return boolean to indicate whether the task list has been modified"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws InvalidParamArgument if a compulsory command param is not provided e.g. \"/by\" for deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws InvalidIndexException if an invalid task index is given for op[erations on a specific task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws NumberFormatException if task index given is not in an integer form or is not-a-number"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws DateTimeParseException if date and time provided are in an invalid format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        Task item;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        Object[] dateAndTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        LocalTime time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        switch (command.commandType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //No changes to items, return false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case PRINT_LIST:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Cliui.printTaskList(tasks, tasks.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case INVALID:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Cliui.printInvalid();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case FIND_TASK:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            ArrayList\u003cTask\u003e filteredArray \u003d filterTasks(tasks, command.commandContent);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Cliui.printFindTask(filteredArray, filteredArray.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Changes to items, return true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case MARK_AS_DONE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            int indexOfTask \u003d extractIndex(command.commandContent, tasks.size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            item \u003d tasks.get(indexOfTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            item.setDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(!isReadFromFile) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                Cliui.printTaskDone(item);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case DELETE_TASK:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            indexOfTask \u003d extractIndex(command.commandContent, tasks.size());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            item \u003d tasks.get(indexOfTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            tasks.remove(indexOfTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Cliui.printTaskDeleted(item, tasks.size());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case CLEAR_TASKS:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //Requires user to confirm clear operation by typing \"y\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //Aborts if \"n\" or other input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Cliui.printClearListConfirmation();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String confirmationInput \u003d in.nextLine().toLowerCase();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(confirmationInput.equals(\"y\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                Cliui.printListCleared();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                tasks.clear();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            else if(confirmationInput.equals(\"n\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                Cliui.printListNotCleared();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Cliui.printInvalid();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "         * New items added"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "         * Params are processed on a case-by-case basis"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "         * E.g. deadline looks for param \u0027by\" only, and ignores any other params"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "         * Only return at end of code as the task has to be added to task list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "         * and task has to be printed before returning true"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case ADD_TODO:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            item \u003d new ToDo(command.commandContent);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //\"by\" will be null if it wasn\u0027t provided as a param in the command"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String by \u003d command.params.get(\"by\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(by \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                throw new InvalidParamArgument(\"by\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            dateAndTime \u003d parseDateAndTime(by);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            date \u003d (LocalDate) dateAndTime[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            time \u003d (LocalTime) dateAndTime[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            item \u003d new Deadline(command.commandContent, date, time);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //\"at\" will be null if it wasn\u0027t provided as a param in the command"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String at \u003d command.params.get(\"at\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(at \u003d\u003d null) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                throw new InvalidParamArgument(\"at\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            dateAndTime \u003d parseDateAndTime(at);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            date \u003d (LocalDate) dateAndTime[0];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            time \u003d (LocalTime) dateAndTime[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            item \u003d new Event(command.commandContent, date, time);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            throw new IllegalStateException(\"Unexpected commandType: \" + command.commandType);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        tasks.add(item);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Only print task added message if it\u0027s not originating from the save file"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Prevents mass printing of messages when reading from save file"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if(!isReadFromFile) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Cliui.printTaskAdded(item, tasks.size());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Extracts the array index of the task to select, from the input argument."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @param inputString"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @param numOfTasks"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @return array index"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws InvalidIndexException if task index given is not in an integer form or is not-a-number"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static int extractIndex(String inputString, int numOfTasks) throws InvalidIndexException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            int indexOfTask \u003d Integer.parseInt(inputString) - 1;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if (indexOfTask \u003c 0 || indexOfTask \u003e numOfTasks - 1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                throw new InvalidIndexException(indexOfTask + 1);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return indexOfTask;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            throw new InvalidIndexException(inputString);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static Object[] parseDateAndTime(String rawDateString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String[] splitString \u003d rawDateString.split(\" \");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if(splitString.length \u003e 2) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            throw new DateTimeParseException(\"Invalid date entered!\", rawDateString, 0);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String dateString \u003d splitString[0];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String timeString \u003d splitString[1];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        LocalTime time \u003d LocalTime.parse(timeString);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        Object[] dateAndTime \u003d {date, time};"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return dateAndTime;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "      "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Returns filtered tasks based on search string"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @param tasks overall task list"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @param searchString raw search string"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @return ArrayList of matching tasks"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static ArrayList\u003cTask\u003e filterTasks(ArrayList\u003cTask\u003e tasks, String searchString) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        ArrayList\u003cTask\u003e filteredArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        for(Task task: tasks) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String taskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            boolean containsSearchString \u003d taskName.contains(searchString);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(containsSearchString) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                filteredArray.add(task);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return filteredArray;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 187
    }
  },
  {
    "path": "src/main/java/duke/handlers/SaveFileHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.handlers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.definitions.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.EmptyContentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.InvalidIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.InvalidParamArgument;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.parsers.InputParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.printers.Cliui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.tasktypes.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Helper class to read from or write to the save file, given a save directory"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Save file is configured as duke.txt in the save directory"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class SaveFileHandler {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private String pathString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private String fullPathString;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private Path fullPath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public SaveFileHandler(String pathString) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.pathString \u003d pathString;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        fullPathString \u003d pathString + \"/duke.txt\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        path \u003d Paths.get(pathString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        fullPath \u003d Paths.get(fullPathString);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Attempts to read a save file, creating one if not already existing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Then parses the save file line by line and generates a task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @return saved task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws IOException if there is an error with opening or creating the save file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public ArrayList\u003cTask\u003e openFile() throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean pathExists \u003d Files.exists(path);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean fileExists \u003d Files.exists(fullPath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if(!pathExists) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Files.createDirectories(path);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if(!fileExists) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Files.createFile(fullPath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        Scanner in \u003d new Scanner(fullPath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Reuses the parsing logic in main() of Duke"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        while(in.hasNextLine()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                CommandPacket packet \u003d new InputParser(in.nextLine()).parseInput();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                CommandHandler.handleCommand(packet, tasks, true);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            } catch (IllegalStateException | InvalidParamArgument | EmptyContentException |"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                    InvalidIndexException | NumberFormatException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                Cliui.printFileError(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Iterate through tasks and write to file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Each task is written as the corresponding cli input that would have"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * added the task and set it at its corresponding status (done or not done)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Example:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Task list: [[D][y] homework (by: 25/07/2019 17:50), [T][n] read book]"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * is written as \"deadline homework /by 2019-07-25 17:50\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * followed by \"done 1\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * followed by \"todo read book\"."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * This allows reuse of the parsers when reading from the save file, instead"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * of having to separately parse the save format"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @param tasks overall task list"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws IOException when there is an error with writing the file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public void writeFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Delete existing file, if it exists"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        Files.deleteIfExists(fullPath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        BufferedWriter writer \u003d Files.newBufferedWriter(fullPath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String contentToWrite \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String taskName \u003d task.getTaskName();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //Writes the corresponding command for the task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(task instanceof ToDo) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                contentToWrite +\u003d \"todo \" + taskName;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                contentToWrite +\u003d \"deadline \" + taskName + \" /by \" + ((Deadline) task).getDateAndTime();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                contentToWrite +\u003d \"event \" + taskName + \" /at \" + ((Event) task).getDateAndTime();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            writer.write(contentToWrite);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //Insert command to mark task as done"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(task.getDone()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                writer.write(\"done \" + (i + 1));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 118
    }
  },
  {
    "path": "src/main/java/duke/parsers/InputParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.definitions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.EmptyContentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.InvalidParamArgument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Helper class to parse raw inputs into a commandPacket."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public final class InputParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public InputParser(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Returns a command packet with the parsed input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Example input: deadline do homework /by tomorrow /note skip page 70"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * commandString: \"deadline\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * CommandPacket created:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *  commandType: ADD_DEADLINE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *  commandContent: \"do homework\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *  params: HashMap\u003cString, String\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *  {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *   \"by\": \"tomorrow\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *   \"note\": \"skip page 70\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @return commandPacket"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws InvalidParamArgument if any \"/\" params are invalid e.g. provided with a blank string as argument or provided twice"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws EmptyContentException if the command expects some content (e.g. task name or task index) but none is provided"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public CommandPacket parseInput() throws InvalidParamArgument, EmptyContentException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String commandContent \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String restOfCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        CommandPacket packet;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean paramsExist \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean commandContentExist \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Split into [command, rest of input]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String[] buffer \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String commandString \u003d buffer[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Check for existence of command title"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        commandContentExist \u003d buffer.length \u003e 1 \u0026\u0026 !buffer[1].startsWith(\"/\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        * Start of input parsing:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        * parse input into command, commandContent, and params, if any"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if(commandContentExist) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            restOfCommand \u003d buffer[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            buffer \u003d restOfCommand.split(Constants.PARAM_SEPARATOR, 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            commandContent \u003d buffer[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            paramsExist \u003d buffer.length \u003e 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if(paramsExist) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String paramSubstring \u003d buffer[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            params \u003d new ParamsParser(paramSubstring).parseParams();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        switch(commandString) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Commands that do not modify specific entries"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //These commands should not have any commandContent"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Early return ensures that EmptyContentException is not thrown"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            Command commandType \u003d commandContentExist ? Command.INVALID : Command.PRINT_LIST;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(commandType, commandContent, params);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return packet;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(Command.CLEAR_TASKS, commandContent, params);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return packet;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Commands that add an entry"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(Command.ADD_TODO, commandContent, params);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(Command.ADD_DEADLINE, commandContent, params);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(Command.ADD_EVENT, commandContent, params);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Commands that operate on a specific entry"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(Command.MARK_AS_DONE, commandContent, params);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(Command.DELETE_TASK, commandContent, params);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(Command.FIND_TASK, commandContent, params);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            packet \u003d new CommandPacket(Command.INVALID, commandContent, params);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            return packet;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if(commandContent.equals(\"\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            throw new EmptyContentException(commandString);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return packet;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 115
    }
  },
  {
    "path": "src/main/java/duke/parsers/ParamsParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.parsers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.definitions.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.exceptions.InvalidParamArgument;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Helper class to parse the params in a command i.e. everything term that starts with \"/\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class ParamsParser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    protected String paramSubstring;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public ParamsParser(String paramSubstring) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.paramSubstring \u003d paramSubstring;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Parses a string of one or more params into a HashMap"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * Example input: deadline do homework /by tomorrow /note skip page 70"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * --First iteration--"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * paramSubstring: \"by tomorrow /note skip page 70\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * paramType: \"by\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * paramArgument: \"tomorrow\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * --Next iteration--"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * paramSubstring: \"note skip page 70\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * paramType: \"note\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * paramArgument: \"skip page 70\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @return a HashMap of all command params"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     * @throws InvalidParamArgument if any command param has an empty argument, or the command param is provided twice"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public HashMap\u003cString, String\u003e parseParams() throws InvalidParamArgument {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        //Temporary array to store split strings"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        String[] buffer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        HashMap\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean shouldContinueParsing \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //Separate into [paramType, rest of string]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            buffer \u003d paramSubstring.split(\" \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String paramType \u003d buffer[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            boolean paramArgumentExist \u003d buffer.length \u003e 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(!paramArgumentExist) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                throw new InvalidParamArgument(paramType);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            paramSubstring \u003d buffer[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //Separate into [paramArgument, rest of string]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            buffer \u003d paramSubstring.split(Constants.PARAM_SEPARATOR, 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            String paramArgument \u003d buffer[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            boolean nextParamExist \u003d buffer.length \u003e 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(nextParamExist) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                paramSubstring \u003d buffer[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                shouldContinueParsing \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            //If param already exists"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            if(params.containsKey(paramType)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                throw new InvalidParamArgument(paramType, true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            params.put(paramType, paramArgument);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        } while(shouldContinueParsing);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return params;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 74
    }
  },
  {
    "path": "src/main/java/duke/printers/Cliui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.printers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.definitions.CommandPacket;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import duke.tasktypes.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Helper class to handle all printing matters, including error messages."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class Cliui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String separator \u003d \"------------------------------------------\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String indent \u003d \" \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String greet \u003d \" Hello! I\u0027m duke.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String prompt \u003d \" What can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String taskAdded \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String taskDeleted \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String taskDone \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String goodbye \u003d \" Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String emptyTaskList \u003d \"Task list is empty!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String noTasksFound \u003d \"No matching tasks!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String showTaskList \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static String showMatchingTasks \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printSeparator() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(separator);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(prompt);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(goodbye);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printTaskAdded(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(taskAdded);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(indent + task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Now you have \" + numOfTasks + \" tasks in the list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printTaskDeleted(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(taskDeleted);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(indent + task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Now you have \" + numOfTasks + \" tasks in the list\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(taskDone);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(indent + task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printTaskList(ArrayList\u003cTask\u003e tasks, int length) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printList(tasks, length, emptyTaskList, showTaskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printClearListConfirmation() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Clearing entire task list. Are you sure? (y/n)\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printListCleared() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Task list has been cleared\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printListNotCleared() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Task list has not been modified\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printInvalid() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Invalid command!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printFindTask(ArrayList\u003cTask\u003e tasks, int length) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printList(tasks, length, noTasksFound, showMatchingTasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printError(Exception error) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Error: \" + error.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printFileError(Exception error) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Error: \" + error.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"File has been corrupted\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Task list has been initialized as empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Duke.txt will be overwritten upon adding any new item To prevent this, type \\\"bye\\\"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        printSeparator();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printPacket(CommandPacket packet) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"--- Command packet ---\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(packet);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"-----------------------\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public static void printInput(String input) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        System.out.println(\"Raw input is:__\" + input + \"__\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    static void printList(ArrayList\u003cTask\u003e tasks, int length, String emptyMessage, String listMessage) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        boolean isListEmpty \u003d length \u003d\u003d 0;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        if(isListEmpty) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            System.out.println(emptyMessage);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            System.out.println(listMessage);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d length; i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                Task item \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "                System.out.println(i + \".\" + item);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 139
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Deadline task. Requires a date and time to be provided"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class Deadline extends TaskWithDate{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public Deadline(String taskName, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(taskName, date, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 19
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Event task. Requires a date and time to be provided"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class Event extends TaskWithDate{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public Event(String taskName, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(taskName, date, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 20
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * General task type - not allowed to initialize"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public boolean getDone() { return isDone; }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String getDoneStatusSymbol() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return (\"[\" + (isDone ? \"y\" : \"n\") + \"]\" + \" \" + taskName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 33
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/TaskWithDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * General task type with date and time - not allowed to initialize"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public abstract class TaskWithDate extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    protected String dateString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public TaskWithDate(String taskName, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.dateString \u003d date.getDayOfMonth() + \"/\" + date.getMonthValue() + \"/\" + date.getYear();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String getDateAndTime() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return date + \" \" + time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return super.toString() + \" (by: \" + dateString + \" \" + time + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 28
    }
  },
  {
    "path": "src/main/java/duke/tasktypes/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "package duke.tasktypes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " * Todo task. No date or any other params required"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 16
    }
  },
  {
    "path": "test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Artemis-Hunt"
        },
        "content": "event CS2113 lecture /at Friday 18 September 2020 from 4 pm to 6 pm"
      }
    ],
    "authorContributionMap": {
      "Artemis-Hunt": 1
    }
  }
]
