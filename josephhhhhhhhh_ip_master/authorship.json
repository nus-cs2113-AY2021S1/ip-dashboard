[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | âœ“ | hi"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 1
    }
  },
  {
    "path": "src/main/java/duke/command/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String LINE_DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String HELLO_MESSAGE \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final int TASK_ARRAY_SIZE \u003d 100;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Parser commandParser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        printHelloMessage(); //message to welcome users"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        while (commandParser.notBye) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String commandEntered \u003d readUserInput();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            commandParser.parseCommand(commandEntered.toLowerCase(), Parser.orderAdded);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static String readUserInput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static void printHelloMessage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(HELLO_MESSAGE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "josephhhhhhhhh": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    //no code needed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 5
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    } //constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String LINE_DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String UNRECOGNISED_COMMAND \u003d \"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String LIST_TASKS_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String MARKED_TASKS_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static int orderAdded \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected boolean notBye \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static ArrayList\u003cTask\u003e recordedTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected void parseCommand(String commandEntered, int orderAdded) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String[] commandArr \u003d commandEntered.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (commandArr[0].toLowerCase()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            specificTaskAdder(orderAdded, recordedTask, commandEntered);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String lineToSave \u003d recordedTask.get(orderAdded-1).getCurrentTaskType()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + \" | \" + recordedTask.get(orderAdded-1).taskStatus() + \" | \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + recordedTask.get(orderAdded-1).getTaskName() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                Save.appendToFile(\"data/duke.txt\", lineToSave);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            catch (IOException ioe){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                System.out.println(\"IOException error kiddo\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            listOfTasksPrinter(orderAdded, recordedTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            setTaskAsDone(commandEntered, recordedTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String lineToSave1 \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            for(int i \u003d 0; i \u003c orderAdded - 1; i++){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                lineToSave1 \u003d lineToSave1.concat(recordedTask.get(i).getCurrentTaskType()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        + \" | \" + recordedTask.get(i).taskStatus() + \" | \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        + recordedTask.get(i).getTaskName() + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                Save.writeToFile(\"data/duke.txt\", lineToSave1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            catch (IOException ioe){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                System.out.println(\"IOException error kiddo\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            deleteTask(commandEntered, recordedTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            printByeMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            notBye \u003d false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            printUnrecognisedCommandErrorMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static void specificTaskAdder(int orderAdded, ArrayList\u003cTask\u003e recordedTask, String commandEntered) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String[] taskCommandArr \u003d commandEntered.split(\" \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String exactDueDate \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if (taskCommandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            } else if (taskCommandArr[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                String taskDueDateString \u003d taskCommandArr[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                String[] taskDueDateArr \u003d taskDueDateString.split(\"/by\", 2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                exactDueDate \u003d \"(by:\" + taskDueDateArr[1] + \")\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                taskCommandArr[1] \u003d taskDueDateArr[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            } else if (taskCommandArr[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                String taskDueDateString \u003d taskCommandArr[1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                String[] taskDueDateArr \u003d taskDueDateString.split(\"/at\", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                exactDueDate \u003d \"(at:\" + taskDueDateArr[1] + \")\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                taskCommandArr[1] \u003d taskDueDateArr[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            printEmptyTaskErrorMessage(taskCommandArr[0]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (taskCommandArr[0]) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            recordedTask.add(new ToDos(orderAdded, taskCommandArr[1], false, \"T\"));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            recordedTask.add(new Deadlines(orderAdded, taskCommandArr[1], false, \"D\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            recordedTask.add(new Events(orderAdded, taskCommandArr[1], false, \"E\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.get(orderAdded-1).setTaskName(taskCommandArr[1] + exactDueDate); //formats the output statement as desired"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.get(orderAdded-1).printTaskListing();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (orderAdded \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(\"Now you have \" + orderAdded + \" task in the list.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(\"Now you have \" + orderAdded + \" tasks in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        orderAdder();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static void printEmptyTaskErrorMessage(String task) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String statementPartOne \u003d task.equals(\"event\") ? \"â˜¹ OOPS!!! The description of an \" : \"â˜¹ OOPS!!! The description of a \";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(statementPartOne + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static void printUnrecognisedCommandErrorMessage() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(UNRECOGNISED_COMMAND);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static void listOfTasksPrinter(int orderAdded, ArrayList\u003cTask\u003e recordedTask) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LIST_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (int i \u003d 0; i \u003c orderAdded - 1; i++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            recordedTask.get(i).printEntireTaskList();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static void setTaskAsDone(String commandEntered, ArrayList\u003cTask\u003e recordedTask) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if(!commandEntered.substring(6).equals(\"\")){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        catch(DukeException de) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            printUnrecognisedCommandErrorMessage();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        char taskNumToCheck \u003d commandEntered.charAt(5);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        int taskNumToChange \u003d Character.getNumericValue(taskNumToCheck);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.get(taskNumToChange-1).setTaskStatus(true);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(MARKED_TASKS_DONE_MESSAGE);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.get(taskNumToChange-1).markedAsDone();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private static void printByeMessage() {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(BYE_MESSAGE);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void deleteTask(String commandEntered, ArrayList\u003cTask\u003e recordedTask){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if(!commandEntered.substring(8).equals(\"\")){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        catch(DukeException de) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            printUnrecognisedCommandErrorMessage();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        char taskNumToCheck \u003d commandEntered.charAt(7);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        int taskNumToChange \u003d Character.getNumericValue(taskNumToCheck);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER + \"\\nNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.get(taskNumToChange-1).printTaskListing();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for(int i\u003dtaskNumToChange; i\u003corderAdded-1; i++){"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            recordedTask.get(i-1).setTaskNum(i);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        orderSubtractor();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String lastPartOfStatement \u003d (orderAdded\u003d\u003d1)?\" task in the list.\":\" tasks in the list.\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(\"Now you have \" + (orderAdded-1) + lastPartOfStatement);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.remove(recordedTask.get(taskNumToChange-1));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void orderAdder() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        orderAdded++;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void orderSubtractor() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        orderAdded--;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void addNewTask(Task newTask){"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.add(newTask);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 201
    }
  },
  {
    "path": "src/main/java/duke/command/Save.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Save {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Deadlines() {}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Deadlines(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        super(taskNumber,nameOfTask,isTaskDone,type);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Events() {}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Events(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        super(taskNumber,nameOfTask,isTaskDone,type);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected boolean taskDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected enum taskType {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        D, E, T //T is todos, d is deadlines, e is events"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected taskType currentTaskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Task() {}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Task(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskName \u003d nameOfTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskNum \u003d taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        setTaskType(type);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void setTaskType(String typeOfTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch(typeOfTask) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"T\": currentTaskType \u003d taskType.T;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"D\": currentTaskType \u003d taskType.D;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"E\": currentTaskType \u003d taskType.E;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String getCurrentTaskType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String currTaskType \u003d \"Unknown\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch(currentTaskType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case T: currTaskType \u003d \"T\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case D: currTaskType \u003d \"D\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case E: currTaskType \u003d \"E\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default: break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "         return currTaskType;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void setTaskStatus(boolean isItDone){ //setter"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        taskDone \u003d isItDone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public boolean isTaskDone(){                //getter"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return taskDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void setTaskName(String name) {      //setter"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        taskName \u003d name;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String getTaskName() {               //getter"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void setTaskNum(int num) {           //setter"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        taskNum \u003d num;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public int getTaskNum() {  //getter"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String taskStatus() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (isTaskDone()) {   //determines whether a duke.task is done and sets a tick or cross"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return \"\\u2717\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printTaskListing(){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(\" [\" + getCurrentTaskType() + \"][\" + taskStatus() + \"] \" + getTaskName());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void markedAsDone(){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(\"  [\\u2713] \" + getTaskName());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printEntireTaskList() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        System.out.println(getTaskNum() + \".[\" + getCurrentTaskType() + \"]\" + \"[\" + taskStatus() + \"] \" + getTaskName());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 94
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ToDos() {}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ToDos(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        super(taskNumber,nameOfTask,isTaskDone, type);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 8
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "say hi bro"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "todo get work done"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "deadline look for someone /by tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "event kick ball /at tembu"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "events testing events vs event command /at tembu"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "@pause"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "josephhhhhhhhh": 3
    }
  }
]
