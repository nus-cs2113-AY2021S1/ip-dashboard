[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | ✓ | hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | ✗ | book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | ✗ | say hi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | ✗ | say hi"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | ✓ | hihihi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | ✗ | something (at: 2019-01-01)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | ✗ | smth "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "T | ✗ | smth "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "D | ✗ | smth (by: Jan 01 2019)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "D | ✗ | kick butt (by: Jan 01 2019)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "D | ✗ | look for smth (by: Jul 05 2018)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e master"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 14
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Adds a new task into the Task List."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private Task toAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * The constructor to add new tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Creates the right task type according to the command entered."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param taskNumber the index number of the task as seen in the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param nameOfTask the task name"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param isTaskDone a boolean that indicates task completion"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param type       the task type"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public AddCommand(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            this.toAdd \u003d new ToDos(taskNumber, nameOfTask, isTaskDone, type);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            this.toAdd \u003d new Events(taskNumber, nameOfTask, isTaskDone, type);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            this.toAdd \u003d new Deadlines(taskNumber, nameOfTask, isTaskDone, type);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public AddCommand(int taskNumber, String nameOfTask, boolean isTaskDone, String type, LocalDate deadlineDate) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.toAdd \u003d new Deadlines(taskNumber, nameOfTask, isTaskDone, type, deadlineDate);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        taskList.addTask(toAdd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String lineToSave \u003d toAdd.getCurrentTaskType()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                + \" | \" + toAdd.taskStatus() + \" | \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                + toAdd.getTaskName() + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Storage.appendToFile(Messages.SAVE_FILE_PATH, lineToSave);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(Messages.IOEXCEPTION_ERROR);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String finalMessage \u003d Messages.TASK_ADDER_AFFIRMATION + \"\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                + toAdd.returnTaskListing() + \"\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                + ((Parser.getOrderAdded() \u003d\u003d 1) ? Messages.TASK_ADDER_SINGULAR : Messages.TASK_ADDER_PLURAL);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Parser.orderAdder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return new ResponseToCommand(finalMessage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 64
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Carries out the command and returns the outcome of the execution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        throw new UnsupportedOperationException(\"This method should be implemented by child classes.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Sets the Task List to be used to add all the tasks into."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param taskList the Task List chosen"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void chooseArrayList(TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Searches for deadlines due on a queried date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    LocalDate dateQuery;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public DateCommand (LocalDate dateQuery) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "       this.dateQuery \u003d dateQuery;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return new ResponseToCommand(taskList.matchingDeadlines(dateQuery));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 19
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Deletes a task listing from the Task List according to the index number of the task passed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    int taskNumToChange;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public DeleteCommand(String commandEntered) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String taskNumToCheck \u003d commandEntered.substring(7);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            taskNumToChange \u003d Integer.parseInt(taskNumToCheck);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(Messages.DELETE_COMMAND_ERROR);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String messageOutput \u003d Messages.DELETE_TASK_STATEMENT + \"\\n\" + taskList.removeTask(taskNumToChange) + \"\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                + Messages.DELETE_TASK_DECLARATION + (Parser.getOrderAdded() - 1) + Messages.DELETE_TASK_STATEMENT_END;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String updatedText \u003d taskList.updateTaskToFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Storage.writeToFile(Messages.SAVE_FILE_PATH, updatedText);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(Messages.IOEXCEPTION_ERROR);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return new ResponseToCommand(messageOutput, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Marks a task listing as completed, according to the index number of the task passed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    int taskNumToChange;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public DoneCommand(String commandEntered) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String taskNumToCheck \u003d commandEntered.substring(5);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            taskNumToChange \u003d Integer.parseInt(taskNumToCheck);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(Messages.DONE_COMMAND_ERROR);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String messageOutput \u003d Messages.MARKED_TASKS_DONE_MESSAGE + \"\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                + taskList.markTaskAsDone(taskNumToChange);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String updatedText \u003d taskList.updateTaskToFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Storage.writeToFile(Messages.SAVE_FILE_PATH, updatedText);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(Messages.IOEXCEPTION_ERROR);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return new ResponseToCommand(messageOutput, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 34
    }
  },
  {
    "path": "src/main/java/duke/command/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Start point of the Duke-bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Initialises the application and initiates interaction with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Runs the program until it is terminated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Parser commandParser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ui.printHelloMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (Parser.firstTimeEntry) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            int imported \u003d Storage.readFromFile(Messages.SAVE_FILE_PATH, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Parser.orderAdded +\u003d imported;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Parser.firstTimeEntry \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        while (commandParser.notBye) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String commandEntered \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            command \u003d commandParser.parseCommand(commandEntered.toLowerCase());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ResponseToCommand response \u003d carryOutCommand(command, taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ui.showOutcomeToUser(response);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Carries out the commad and returns the result."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param command the user\u0027s command"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param taskList  the task list being used"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return the outcome of the execution of the command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private ResponseToCommand carryOutCommand(Command command, TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            command.chooseArrayList(taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            ResponseToCommand response \u003d command.execute();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new ResponseToCommand(Messages.CARRY_OUT_COMMAND_ERROR);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "josephhhhhhhhh": 61
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Terminates the Duke program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return new ResponseToCommand(Messages.BYE_MESSAGE);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 14
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Searches for commands by using a queried keyword."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    String searchResult;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public FindCommand(String commandEntered) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            this.keyword \u003d commandEntered.substring(5);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(Messages.FIND_COMMAND_ERROR);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        searchResult \u003d taskList.findKeywords(keyword);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String messageOutput \u003d \"Here are the matching tasks in your list: \\n\" + searchResult;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return new ResponseToCommand(messageOutput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 27
    }
  },
  {
    "path": "src/main/java/duke/command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Prints an error statement as a command was mistyped, or because the command was left incomplete."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    String typeOfIncorrectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    String commandType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public IncorrectCommand(String typeOfIncorrectCommand, String commandType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.typeOfIncorrectCommand \u003d typeOfIncorrectCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public IncorrectCommand(String typeOfIncorrectCommand) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.typeOfIncorrectCommand \u003d typeOfIncorrectCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.commandType \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (typeOfIncorrectCommand.equals(\"empty command\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String statement \u003d commandType.equals(\"event\") ? Messages.EMPTY_TASK_ERROR_MESSAGE + \"n \" : Messages.EMPTY_TASK_ERROR_MESSAGE"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + \" \" + commandType + Messages.EMPTY_TASK_ERROR_MESSAGE_END;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new ResponseToCommand(statement);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else if (typeOfIncorrectCommand.equals(\"unrecognised command\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new ResponseToCommand(Messages.UNRECOGNISED_COMMAND);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return new ResponseToCommand(\"Error! Incorrect Command has executed wrongly!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Lists all the tasks by index number order, with task names, task types and task completion indicated."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return new ResponseToCommand(taskList.listOfTasks(), taskList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 13
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static int orderAdded \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected boolean notBye \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static boolean firstTimeEntry \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Parses user input into a command to be carried out."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param commandEntered the command input by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return the corresponding command according to the user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected Command parseCommand(String commandEntered) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String[] commandArr \u003d commandEntered.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (commandArr[0].toLowerCase()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if (commandArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                return new IncorrectCommand(\"empty command\", commandArr[0].toLowerCase());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            } else if (commandArr[0].toLowerCase().equals(\"deadline\") \u0026\u0026 deadlineExtractor(commandEntered) !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                return new AddCommand(Parser.getOrderAdded(), taskNameFormatter(commandEntered), false,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        taskTypeDecoder(commandEntered), deadlineExtractor(commandEntered));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new AddCommand(Parser.getOrderAdded(), taskNameFormatter(commandEntered), false, taskTypeDecoder(commandEntered));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new DoneCommand(commandEntered);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            orderSubtractor();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new DeleteCommand(commandEntered);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new DateCommand(deadlineExtractor(commandEntered));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            notBye \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new FindCommand(commandEntered);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return new IncorrectCommand(\"unrecognised command\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void orderAdder() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Parser.orderAdded++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void orderSubtractor() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        Parser.orderAdded--;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static int getOrderAdded() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return orderAdded;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Formats the task name for a new task to be added into the Task List."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param commandEntered the command input by the user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return a string containing the task name in correct formatting"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String taskNameFormatter(String commandEntered) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String[] taskCommandArr \u003d commandEntered.split(\" \", 2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String exactDueDate \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String formattedDate \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String finalFormattedDate \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        LocalDate dateSet \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (taskCommandArr[1].contains(\"/by\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String taskDueDateString \u003d taskCommandArr[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String[] taskDueDateArr \u003d taskDueDateString.split(\"/by\", 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            formattedDate \u003d taskDueDateArr[1].trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            exactDueDate \u003d \"(by:\" + taskDueDateArr[1] + \")\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            taskCommandArr[1] \u003d taskDueDateArr[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else if (taskCommandArr[1].contains(\"/at\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String taskDueDateString \u003d taskCommandArr[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String[] taskDueDateArr \u003d taskDueDateString.split(\"/at\", 2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            exactDueDate \u003d \"(at:\" + taskDueDateArr[1] + \")\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            taskCommandArr[1] \u003d taskDueDateArr[0];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            dateSet \u003d LocalDate.parse(formattedDate);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            finalFormattedDate \u003d (taskCommandArr[0].equals(\"deadline\")) ?"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    \"(by: \" + dateSet.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\" : exactDueDate;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            finalFormattedDate \u003d exactDueDate;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String taskNameFinal \u003d taskCommandArr[1] + finalFormattedDate;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return taskNameFinal;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Extracts the deadline as a LocalDate from a string containing the date."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param commandEntered String containing user input"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return the data for the deadline date of type LocalDate"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public LocalDate deadlineExtractor(String commandEntered) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String[] taskCommandArr \u003d commandEntered.split(\" \", 2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String formattedDate \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        LocalDate dateSet;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (taskCommandArr[1].contains(\"/by\") || taskCommandArr[0].contains(\"date\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String taskDueDateString \u003d taskCommandArr[1];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            String[] taskDueDateArr \u003d taskDueDateString.split(\"/by\", 2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            formattedDate \u003d taskDueDateArr[1].trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            dateSet \u003d LocalDate.parse(formattedDate);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return dateSet;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Extracts the task type from the command entered."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param commandEntered the command input by the user"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return a string containing the letter representing the task type"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String taskTypeDecoder(String commandEntered) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String[] taskCommandArr \u003d commandEntered.split(\" \", 2);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (taskCommandArr[0]) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return \"taskTypeDecoder Error!\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 150
    }
  },
  {
    "path": "src/main/java/duke/command/ResponseToCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Represents the outcome after the execution of a command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ResponseToCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * The message to be displayed to the user that consists of the result of the command execution."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public final String replyToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * The task list containing the tasks that have been added in."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private final TaskList recordedTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand(String replyToUser) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.replyToUser \u003d replyToUser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.recordedTask \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ResponseToCommand(String replyToUser, TaskList recordedTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.replyToUser \u003d replyToUser;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.recordedTask \u003d recordedTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.data.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.File;  // Import the File class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.FileNotFoundException;  // Import this class to handle errors"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.Scanner; // Import the Scanner class to read text files"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Saves the Task List onto an existing save file titled Duke.txt."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Able to also read from the save file, and update the save file as and when"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * the Task List is updated."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Overwrites any text in the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param filePath  location of the save file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param textToAdd text to overwrite the existing text on the file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @throws IOException if file does not exist, or there are issues accessing it"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Appends lines of text to the existing text in the save file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param filePath     location of the save file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param textToAppend text to append to the existing text on the file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @throws IOException if file does not exist, or there are issues accessing it"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Reads text in the save file and adds tasks accordingly into the Task List."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param filePath location of the save file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param taskList the task list which is to hold the tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return the number of tasks added into the Task List from the save file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected static int readFromFile(String filePath, TaskList taskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            File myObj \u003d new File(filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            Scanner myReader \u003d new Scanner(myObj);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                boolean isItDone \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                String[] dataArr \u003d data.split(\" | \", 5);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                if (dataArr[2].contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    isItDone \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                Task newTask \u003d new Task();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                if (dataArr[0].contains(\"T\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    newTask \u003d new ToDos(i, dataArr[4], isItDone, dataArr[0]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                } else if (dataArr[0].contains(\"D\") \u0026\u0026 !dataArr[4].contains(\"(by:\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    newTask \u003d new Deadlines(i, dataArr[4], isItDone, dataArr[0]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                } else if (dataArr[0].contains(\"D\") \u0026\u0026 dataArr[4].contains(\"(by:\")){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        String[] dateArr \u003d dataArr[4].split(\"by:\", 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        String exactDate \u003d dateArr[1].trim().substring(0, dateArr[1].indexOf(\")\")-1).trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        DateTimeFormatter dtFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        LocalDate formattedDate \u003d LocalDate.parse(exactDate, dtFormatter);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        newTask \u003d new Deadlines(i, dataArr[4], isItDone, dataArr[0], formattedDate);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                        newTask \u003d new Deadlines(i, dataArr[4], isItDone, dataArr[0]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                } else if (dataArr[0].contains(\"E\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    newTask \u003d new Events(i, dataArr[4], isItDone, dataArr[0]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                taskList.addTask(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            System.out.println(Messages.FILE_NOT_FOUND_ERROR);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 98
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Contains the final strings of all magic literals used."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String LINE_DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String HELLO_MESSAGE \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String UNRECOGNISED_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String LIST_TASKS_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String MARKED_TASKS_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String DELETE_TASK_STATEMENT_END \u003d (Parser.getOrderAdded() \u003d\u003d 1) ? \" task in the list.\" : \" tasks in the list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String SAVE_FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String IOEXCEPTION_ERROR \u003d \"IOException, check the code!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String EMPTY_TASK_ERROR_MESSAGE \u003d \"☹ OOPS!!! The description of a\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String EMPTY_TASK_ERROR_MESSAGE_END \u003d \" cannot be empty.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String DELETE_TASK_STATEMENT \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String DELETE_TASK_DECLARATION \u003d \"Now you have: \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String TASK_ADDER_SINGULAR \u003d \"Now you have \" + Parser.getOrderAdded() + \" task in the list.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String TASK_ADDER_PLURAL \u003d \"Now you have \" + Parser.getOrderAdded() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String TASK_ADDER_AFFIRMATION \u003d \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String FILE_NOT_FOUND_ERROR \u003d \"File could not be found.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String DONE_COMMAND_ERROR \u003d \"ERROR: done command has malfunctioned.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String FIND_COMMAND_ERROR \u003d \"ERROR: find command has malfunctioned.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String DELETE_COMMAND_ERROR \u003d \"ERROR: delete command has malfunctioned.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public static final String CARRY_OUT_COMMAND_ERROR \u003d \"ERROR: carryOutCommand has malfunctioned.\\nReturning you to the \\\"Enter command: \\\" prompt...\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 37
    }
  },
  {
    "path": "src/main/java/duke/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private final ArrayList\u003cTask\u003e recordedTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Constructs an empty Task List."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param newTask the task to be added into the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.add(newTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Removes a task from the list according to index number of task provided."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param numOfTaskToRemove index number of the task to be removed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return the string containing the listing of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String removeTask(int numOfTaskToRemove) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String taskListing \u003d recordedTask.get(numOfTaskToRemove - 1).returnTaskListing();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.remove(recordedTask.get(numOfTaskToRemove - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (int i \u003d 0; i \u003c Parser.getOrderAdded() - 1; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            recordedTask.get(i).setTaskNum(i + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return taskListing;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Collates the information to be put on the save file, to account for changes made to the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return a string with the updated list of tasks in the save file format"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String updateTaskToFile() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String updatedText \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (int i \u003d 0; i \u003c Parser.getOrderAdded() - 1; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            updatedText \u003d updatedText.concat(recordedTask.get(i).getCurrentTaskType()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + \" | \" + recordedTask.get(i).taskStatus()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + \" | \" + recordedTask.get(i).getTaskName()) + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return updatedText;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Collates the information in the task list into a String."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return a string with the updated list of tasks as formatted in the bot itself"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String listOfTasks() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String listOfTasks \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (int i \u003d 0; i \u003c Parser.getOrderAdded() - 1; i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            listOfTasks +\u003d recordedTask.get(i).getTaskNum() + \".[\" + recordedTask.get(i).getCurrentTaskType()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + \"]\" + \"[\" + recordedTask.get(i).taskStatus() + \"] \" + recordedTask.get(i).getTaskName()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + ((i \u003d\u003d Parser.getOrderAdded() - 2) ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String markTaskAsDone(int taskNum) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        recordedTask.get(taskNum - 1).setTaskStatus(true);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return recordedTask.get(taskNum - 1).returnMarkedAsDoneStatement();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Iterates through all tasks in the Task List to find deadlines due by the given query date."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param dateQuery date of deadline being searched for"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return String containing a list of all the deadlines that have that date as a deadline"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String matchingDeadlines(LocalDate dateQuery) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String deadlinesMatchingDateQuery \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ArrayList\u003cInteger\u003e indexNumList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (Task possibleTask : recordedTask) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                if (possibleTask.getCurrentTaskType().equals(\"D\") \u0026\u0026 possibleTask.getDeadlineDate().equals(dateQuery)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    indexNumList.add(possibleTask.getTaskNum());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            } catch (Exception ignored) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (int i \u003d 0; i \u003c indexNumList.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            deadlinesMatchingDateQuery \u003d deadlinesMatchingDateQuery.concat((i + 1) + \". \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + recordedTask.get(indexNumList.get(i) - 1).returnTaskListing()) + ((i \u003d\u003d indexNumList.size() - 1) ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return \"Here are the tasks that are due on the queried date: \\n\" + deadlinesMatchingDateQuery;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Iterates through the tasks to locate for tasks with names containing the keyword."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param keyword the queried keyword being searched for"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return String containing a list of tasks with the keyword in their names"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String findKeywords(String keyword) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String searchResult \u003d \"\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        ArrayList\u003cInteger\u003e indexNumList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (int i \u003d 0; i \u003c Parser.getOrderAdded() - 1; i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            if (recordedTask.get(i).getTaskName().contains(keyword)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                indexNumList.add(i);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        for (int i \u003d 0; i \u003c indexNumList.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            searchResult \u003d searchResult.concat((i + 1) + \". \" + recordedTask.get(indexNumList.get(i)).returnTaskListing()"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "                    + ((i \u003d\u003d indexNumList.size() - 1) ? \"\" : \"\\n\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return searchResult;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 127
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Signals an error caused by a malfunctioning of some aspect of the Duke bot program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific type of task to indicate the task is a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Deadlines() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Deadlines(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        super(taskNumber, nameOfTask, isTaskDone, type);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Deadlines(int taskNumber, String nameOfTask, boolean isTaskDone, String type, LocalDate deadlineDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        super(taskNumber, nameOfTask, isTaskDone, type, deadlineDate);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific type of task to indicate the task is an event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Events() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Events(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        super(taskNumber, nameOfTask, isTaskDone, type);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Constructs a generic task, consisting of an index number, task description (AKA task name), task type as well as task completion status."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * An indicator of task completion."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected boolean taskDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * The task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * The index number of task in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected LocalDate deadlineDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * An enumeration of the various specific types of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected enum taskType {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        D, E, T //T is todos, d is deadlines, e is events"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * The task type of the current task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    protected taskType currentTaskType;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Task(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskName \u003d nameOfTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskNum \u003d taskNumber;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        setTaskType(type);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public Task(int taskNumber, String nameOfTask, boolean isTaskDone, String type, LocalDate deadlineDate) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskName \u003d nameOfTask;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskNum \u003d taskNumber;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.taskDone \u003d isTaskDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        setTaskType(type);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Sets the task type according to string input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param typeOfTask a string input indicating the type of the task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void setTaskType(String typeOfTask) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (typeOfTask) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            currentTaskType \u003d taskType.T;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            currentTaskType \u003d taskType.D;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            currentTaskType \u003d taskType.E;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Gets the current task type of a given task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return string output indicating current task type of a given task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String getCurrentTaskType() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String currTaskType \u003d \"Unknown\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        switch (currentTaskType) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            currTaskType \u003d \"T\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            currTaskType \u003d \"D\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            currTaskType \u003d \"E\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return currTaskType;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Sets the task completion status of a task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param isItDone boolean indicating task completion status"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void setTaskStatus(boolean isItDone) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        taskDone \u003d isItDone;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Gets the task completion status of a task."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return the boolean value indicating task completion status of the task"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public boolean isTaskDone() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return taskDone;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Sets the task description (AKA task name)."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param name string input containing the task description"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void setTaskName(String name) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        taskName \u003d name;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Gets the task description (AKA task name)."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return String output containing the task description"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Sets the task index number of a task."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param num integer index number of the task"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void setTaskNum(int num) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        taskNum \u003d num;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Gets the task index number of a task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return integer index number of the task"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public int getTaskNum() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Gets task completion status returned as a String cross or tick, for task incomplete and complete respectively."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return String output containing either a unicode cross or tick"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String taskStatus() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        if (isTaskDone()) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "            return \"\\u2717\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Gets a string output for the task listing of a given task, meaning task type, completion status and description."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return String output containing task type, completion status and description"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String returnTaskListing() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return \" [\" + getCurrentTaskType() + \"][\" + taskStatus() + \"] \" + getTaskName();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Gets a string output for the task completion status and task description of a given task."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return String output containing task completion status and task description"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String returnMarkedAsDoneStatement() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return \"  [\\u2713] \" + getTaskName();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public LocalDate getDeadlineDate() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return deadlineDate;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 192
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * A specific type of task to indicate the task is a ToDo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ToDos() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public ToDos(int taskNumber, String nameOfTask, boolean isTaskDone, String type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        super(taskNumber, nameOfTask, isTaskDone, type);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 13
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.command.ResponseToCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " * Text UI of the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Takes in user input as a string and returns that string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @return string output of command entered"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public String readUserInput() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        out.print(\"Enter command: \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Prints a message to user with dividers lining the start and end of a message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param message string output of a message to be displayed to user in the desired format"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void showToUser(String message) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        out.println(Messages.LINE_DIVIDER + \"\\n\" + message + \"\\n\" + Messages.LINE_DIVIDER);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Shows the outcome of a command executiion to the user as a printed String message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * @param response the result of the command execution"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void showOutcomeToUser(ResponseToCommand response) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        showToUser(response.replyToUser);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     * Prints a message to welcome the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    public void printHelloMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        out.println(\"Hello from\\n\" + Messages.LOGO);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "        showToUser(Messages.HELLO_MESSAGE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 62
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "say hi bro"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "todo get work done"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "deadline look for someone /by tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "event kick ball /at tembu"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "events testing events vs event command /at tembu"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "josephhhhhhhhh": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "josephhhhhhhhh"
        },
        "content": "@pause"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "josephhhhhhhhh": 3
    }
  }
]
