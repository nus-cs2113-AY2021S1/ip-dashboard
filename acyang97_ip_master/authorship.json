[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "# Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": " ```"
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "acyang97": 3
    }
  },
  {
    "path": "docs/USER_GUIDE.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "**Duke** is a desktop app for managing tasks, optimized for use via a"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "**Command Line Interface (CLI)**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* Quick start"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* Features"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    * Adding a Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        * Adding a Todo: ```todo```"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        * Adding a Deadline: ```deadline```"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        * Adding an Event: ```event```"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    * Listing task list: ```list```"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    * Marking a task as done: ```done```"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    * Deleting a task: ```delete```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    * Finding a task: ```find```"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    * Exiting the program: ```bye```"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "1. Ensure that you have Java ```11``` installed in your computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "1. Download the latest ```cs2113_ip.jar```."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder for your jar file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "1. Open your command prompt and run ```java -jar \"C:\\Users\\Your Folder\\cs2113_ip.jar```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Adding a task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Adding a Todo: ```todo```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds a Todo to the task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: ```todo t/TASK```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* ```todo t/play football with friends```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* ```todo t/take a nap```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Adding a Deadline: ```deadline```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds a Deadline to the task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: ```deadline t/TASK / b/BY d/DATE```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* ```deadline t/complete MA4270 homework / b/by d/23 September 11pm```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* ```deadline t/complete MA4270 project / b/by d/30 October 12pm```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Adding a Event: ```event```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Adds an Event to the task list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: ```event t/TASK / a/AT d/DATE```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* ```event t/Zoukout / a/at d/31 December 2021```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* ```event t/John birthday party / a/at d/Sunday 6pm```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Listing task list: ```list```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Shows a list of all the tasks in the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: ```list```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Marking a task as done: ```done```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Marks a task specified by the index in the task list as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: ```done INDEX```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* Marked the task at the specified ```INDEX``` as done"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* The index **must be a positive integer** 1, 2, 3, ..."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "*```done 2``` sets the 2nd task in the task list as done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "*```done 10``` sets the 10th task in the task list as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Deleting a task: ```delete```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Deletes the specified task from the task list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: ```delete INDEX```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* Deletes the task at the specified ```INDEX```."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "*The index **must be a positive integer** 1, 2, 3, ..."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "acyang97"
        },
        "content": "*```done 2``` deletes the 2nd task in the task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": "*```done 10``` deletes the 10th task in the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Finding a task: ```find```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Find tasks which contains any of the given keyword."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Format: ```find KEYWORD```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* The search is case-sensitive."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* Any task is searched whether it is a Todo, Event or Deadline."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* Only full words will be matched e.g. ```plays``` will not match ```plays```."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* Task matching the keyword will be returned."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* ```find homework``` returns the complete MA4270 homework task."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "acyang97"
        },
        "content": "* ```find play``` returns the play football with friends task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Exiting the program: ```bye```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "acyang97"
        },
        "content": "FormatL ```bye```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "acyang97"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Duke data are saved in the hard disk automatically after any command that changes the data. "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "acyang97"
        },
        "content": "There is no need to save manually."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "acyang97"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": "**Q**: How do I transfer my data to another Computer?"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": "**A**: Install the app in the other computer and overwrite the empty data file it creates with the "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": "file that contains the data of your previous AddressBook home folder."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "acyang97"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Action | Format/ Examples"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "acyang97"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Add a todo | ```todo t/TASK``` e.g. ```todo t/play football with friends```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Add a deadline | ```deadline t/TASK / b/BY d/DATE``` e.g. ```deadline t/complete MA4270 homework / b/by d/23 September 11pm```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Add an event | ```event t/TASK / a/AT d/DATE``` ```event t/Zoukout / a/at d/31 December 2021```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "acyang97"
        },
        "content": "List | ```list```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Done | ```done INDEX``` e.g. ```done 2``` "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Delete | ```delete INDEX``` e.g. ```delete 2``` "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Find | ```find KEYWORD``` e.g. ```find homework```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "Exit | ```bye```"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "acyang97": 122
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * A Duke class that contains the main method to run the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Main method to run the Duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param args the inputs of the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String filePath \u003d \"taskList.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            storage.listTasks();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            taskManager.addTasksToTaskManagerFromFile(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            ui.printLineSeparator();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                LineParser lineParser \u003d new LineParser(nextLine);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Command command \u003d lineParser.getTypeOfCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                command.performCommand(taskManager, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            if (taskManager.getTaskManagerSaidBye()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            ui.printLineSeparator();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "acyang97": 43
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DukeException class to handle exceptions in the Duke app."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 10
    }
  },
  {
    "path": "src/main/java/duke/LineParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * The LineParser class represents a parser that helps to parse a line."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * It\u0027s main function is to help to return a Command object given a line input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * This is the Parser class as required for the project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class LineParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * lineInput String that is the line input of the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String lineInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Creates a LineParser object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param lineInput String denoting the line input of the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public LineParser(String lineInput) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.lineInput \u003d lineInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method that returns a Command object depending on the type of Command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a Command Object depending on type of Command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DukeException when the Command is an invalid Command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Command getTypeOfCommand() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String commandMethod \u003d lineInput.split(\" \")[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (commandMethod.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            command \u003d new ByeCommand(this.lineInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (commandMethod.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            command \u003d new ListCommand(this.lineInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (commandMethod.equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            String indexOfTaskToBeMarkAsDone \u003d lineInput.split(\" \")[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            int indexInInteger \u003d Integer.parseInt(indexOfTaskToBeMarkAsDone);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            command \u003d new DoneCommand(this.lineInput, indexInInteger);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (commandMethod.equals(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            String indexOfTaskToDeleted \u003d lineInput.split(\" \")[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            int indexInInteger \u003d Integer.parseInt(indexOfTaskToDeleted);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            command \u003d new DeleteCommand(this.lineInput, indexInInteger);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (commandMethod.equals(\"find\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            String keyWord \u003d lineInput.split(\" \")[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            command \u003d new FindCommand(this.lineInput, keyWord);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (checkAddCommand(commandMethod)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            command \u003d new AddTaskCommand(this.lineInput, commandMethod);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * A private helper method to check if it is a command to add a Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param command line to be parsed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return true if it is a type of command to add a Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private boolean checkAddCommand(String command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return command.equals(\"todo\") || command.equals(\"event\") || command.equals(\"deadline\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 63
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * A Storage object to deal with saving the tasks into a file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * The file path of the desired file to add the list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * A constructor for the Storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param filePath name of the filePath."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to empty a txt file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws IOException when filePath is invalid."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void emptyFile() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to add tasks from the list in the TaskManager object to the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskManager that contains the list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws IOException when the file path does not exist."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void addTasks(TaskManager taskManager) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        List\u003cTask\u003e listOfTasks \u003d taskManager.getListOfTasks();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            String line \u003d listOfTasks.get(i).formatLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            fileWriter.write(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * method to list the tasks in the file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.viewTasks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                System.out.println(sc.nextLine());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printFileNotFound();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 68
    }
  },
  {
    "path": "src/main/java/duke/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * A TaskManager to manage the list of Tasks in the app."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * This is the TaskList class that is required for the project."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * listOfTasks list that stores the tasks in a list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * boolean that indicates whether a user wants to exit the app."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private boolean taskManagerSaidBye;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a TaskManager to create a TaskManager object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.taskManagerSaidBye \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Setter method."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void setTaskManagerSaidBye() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.taskManagerSaidBye \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Getter method."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return true if taskManagerSaidBye is true."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public boolean getTaskManagerSaidBye() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.taskManagerSaidBye;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Getter method to get size of list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return size of list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public int getSizeOfList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.listOfTasks.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to print all the tasks in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void printAllTasks() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (this.listOfTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printNoTaskInList();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printTaskListHeader();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            for (int i \u003d 0; i \u003c this.getSizeOfList(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                System.out.println((i + 1) + \".\" + this.listOfTasks.get(i));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to get the list of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public ArrayList\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.listOfTasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * helper method to split a task when there is date involved"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param commandMethod"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param nextCommand"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a string array with the splitted task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String[] splitTask(String commandMethod, String nextCommand) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        nextCommand \u003d nextCommand.substring(commandMethod.length() + 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return nextCommand.split(\" /\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to help add a task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param commandMethod the first word of the line input."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param nextCommand the whole line input."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage storage to store the lines in a txt file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DukeException when an there is an empty description."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws IOException when there is an error handling the file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void addTask(String commandMethod, String nextCommand, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (commandMethod.length() \u003d\u003d nextCommand.length()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DukeException(Ui.printEmptyDescriptionReply(commandMethod));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Ui.printAddTaskStartingReply();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Task taskToBeAdded;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (commandMethod.equals(\"todo\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            taskToBeAdded \u003d new Todo(nextCommand.substring(commandMethod.length() + 1));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (commandMethod.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            String[] splitTask \u003d splitTask(commandMethod, nextCommand);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            taskToBeAdded \u003d new Deadline(splitTask[0], splitTask[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            String[] splitTask \u003d splitTask(commandMethod, nextCommand);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            taskToBeAdded \u003d new Event(splitTask[0], splitTask[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(taskToBeAdded);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.listOfTasks.add(taskToBeAdded);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        storage.addTasks(this);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        Ui.printShowTaskListSize(this.getSizeOfList());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to mark a task as done"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param indexOfTask index of task to be marked as done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage storage to store the lines in a txt file."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DukeException when index is greater than size of list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws IOException when there is an error handling the file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void markTaskAsDone(int indexOfTask, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (indexOfTask \u003e this.getSizeOfList()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DukeException(Ui.printTaskListSizeSmallerThanIndex(indexOfTask));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Task taskToBeMarkedAsDone \u003d this.listOfTasks.get(indexOfTask - 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            taskToBeMarkedAsDone.setDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            this.listOfTasks.set(indexOfTask - 1, taskToBeMarkedAsDone);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printMarkedTaskDone();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            storage.addTasks(this);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(taskToBeMarkedAsDone);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param indexOfTask index of task in the list to be deleted."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage storage to store the lines in a txt file."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws DukeException when index is greater than size of list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @throws IOException when there is an error handling the file."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void deleteTask(int indexOfTask, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (indexOfTask \u003e this.getSizeOfList()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            throw new DukeException(Ui.printTaskListSizeSmallerThanIndex(indexOfTask));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printRemovedTask();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(this.listOfTasks.get(indexOfTask - 1));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            this.listOfTasks.remove(indexOfTask - 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            storage.emptyFile();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            storage.addTasks(this);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printShowTaskListSize(this.getSizeOfList());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Helper method to convert a line to a Task object when"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * we are reading lines from a txt file."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param line line to be read."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a Task Object."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private Task convertLineInTaskListToTask(String line) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] components \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        for (int i \u003d 0; i \u003c components.length; i++) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            components[i] \u003d components[i].trim();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        boolean isDone \u003d components[1].equals(\"1\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (components[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return new Todo(components[2], isDone);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else if (components[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return new Deadline(components[2], isDone, components[3]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return new Event(components[2], isDone, components[3]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Helper method to add tasks to a taskList of the TaskManager"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * when reading lines from a txt file."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private void addTask(Task task) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.listOfTasks.add(task);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to add tasks from a File object to the listOfTasks."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param file File to be read that contains lines to be parsed into a Task."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void addTasksToTaskManagerFromFile(File file) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            sc.nextLine();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                Task task \u003d convertLineInTaskListToTask(line);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                this.addTask(task);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printFileNotFound();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printNoTaskInList();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to find Tasks that contains a keyword specified by the use."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param keyWord specified by the user."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage storage to store the lines in a txt file."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void findTasks(String keyWord, Storage storage) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        for (Task task : this.listOfTasks) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            if (task.getWords().contains(keyWord)) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printNoMatchingTasks();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            Ui.printShowMatchingTasksHeader();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "acyang97"
        },
        "content": "                System.out.println((i + 1) + \".\" + matchingTasks.get(i));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "acyang97": 235
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * A Ui class to deal with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor that creates a Ui Object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Prints greeting message that displays whenever user starts the app."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Prints a line separator to produce neater and clearer outputs for the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void printLineSeparator() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Prints header when user wants to views tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void viewTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Here are your list of tasks:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Prints error when file does not exist."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printFileNotFound() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"File does not exist!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Prints statement when user\u0027s task list is empty."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printNoTaskInList() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"You don\u0027t have any tasks in your list\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Prints header when there are tasks in the list and user wants to view them."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printTaskListHeader() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Returns a String needed for the DukeException input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Required when a description of a command is empty."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param commandMethod"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a string for the input of the DukeException."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static String printEmptyDescriptionReply(String commandMethod) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return \"OOPS!!! The description of a \" + commandMethod + \" cannot be empty.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Printed when a task is successfully added to a list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printAddTaskStartingReply() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Printed after task is successfully added and shows user the size of his task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskListSize"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printShowTaskListSize(int taskListSize) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", taskListSize));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Returns a String for the input of a DukeException error."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Required when index of task input by the user is greater than the size of his task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param indexOfTask"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a String."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static String printTaskListSizeSmallerThanIndex(int indexOfTask) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return \"Total number of tasks is less than \" + indexOfTask;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Printed when a task is successfully deleted from the task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printRemovedTask() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Printed when a task is successfully marked as done in the task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printMarkedTaskDone() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Printed when there are no matching tasks when user is finding a task that matches keyword."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printNoMatchingTasks() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"There are no matching tasks!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Printed before showing the list of task that matches keyword using the findTasks method."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public static void printShowMatchingTasksHeader() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 119
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * AddTaskCommand that is a subclass of Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Main function is to execute the method to add a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * commandMethod that could be todo, event or deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String commandMethod;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a AddTaskCommand object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param lineInput"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param commandMethod"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public AddTaskCommand(String lineInput, String commandMethod) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(lineInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.commandMethod \u003d commandMethod;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * method to perform the command to add task to the taskManager object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void performCommand(TaskManager taskManager, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            taskManager.addTask(this.commandMethod, super.getCommand(), storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 41
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * ByeCommand class that is a subclass of Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a ByeCommand object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param lineInput"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public ByeCommand(String lineInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(lineInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to help to set the taskManagerSaidBye status of the TaskManager."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This is to help when the user wants to exit the app."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskManager"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void performCommand(TaskManager taskManager, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        taskManager.setTaskManagerSaidBye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 28
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * An abstract class that represents a Command object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * command String that is the command to be taken."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * constructor for a Command object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param command string that represents command to be taken."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Getter method."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String getCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * method to perform the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskManager"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public abstract void performCommand(TaskManager taskManager, Storage storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DeleteCommand that is a subclass of Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Main function is to execute the method to delete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * indexOfTaskToBeDeleted int which is index of task to be deleted in the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * task list of the taskManager."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private int indexOfTaskToBeDeleted;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a DeleteCommand method."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param lineInput"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param indexOfTaskToBeDeleted"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DeleteCommand(String lineInput, int indexOfTaskToBeDeleted) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(lineInput);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.indexOfTaskToBeDeleted \u003d indexOfTaskToBeDeleted;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * method to execute the deleteTask method in the taskManager object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskManager"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void performCommand(TaskManager taskManager, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            taskManager.deleteTask(indexOfTaskToBeDeleted, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * DoneCommand that is a subclass of Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Main function is to execute the markTaskAsDone method in the TaskManager."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * indexOfTaskToBeMarkedAsDone int index of task to be marked as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private int indexOfTaskToBeMarkedAsDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for the DoneCommand Object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param lineInput"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param indexOfTaskToBeMarkedAsDone"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public DoneCommand(String lineInput, int indexOfTaskToBeMarkedAsDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(lineInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.indexOfTaskToBeMarkedAsDone \u003d indexOfTaskToBeMarkedAsDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to execute the markTaskAsDone method in the taskManager object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskManager"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void performCommand(TaskManager taskManager, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            taskManager.markTaskAsDone(indexOfTaskToBeMarkedAsDone, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 41
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * FindCommand class that is a subclass of Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Main function is to perform the findTask method in the TaskManager."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * keyWord String to check if any task contains this keyword."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for the FindCommand Object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param lineInput"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param keyWord"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public FindCommand(String lineInput, String keyWord) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(lineInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * method to execute the findTasks method in the TaskManager."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskManager"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void performCommand(TaskManager taskManager, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        taskManager.findTasks(this.keyWord, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import duke.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * ListCommand class that is a subclass of Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * Main function is to perform the printAllTasks method in the TaskManager."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constuctor for a ListCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param lineInput"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public ListCommand(String lineInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(lineInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * method to help perform the printAllTasks method of the TaskManager object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param taskManager"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void performCommand(TaskManager taskManager, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        taskManager.printAllTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * A child class of Task that represents a Deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * deadline String, which is the line after \u0027/\u0027 in the given input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param text String that represents everything before the \u0027/\u0027 in the line input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param deadline String that represents everything after the \u0027/\u0027 in the line input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Deadline(String text, String deadline) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(text);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a Deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param text String that represents everything before the \u0027/\u0027 in the line input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param isDone that represents if a Event object is done or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param deadline String that represents everything after the \u0027/\u0027 in the line input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Deadline(String text, boolean isDone, String deadline) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(text, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to format a Deadline to be added into a txt file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return String that is formatted."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String formatLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return \"\\nD | \" + done + \" | \" + super.text + \" | \" + this.deadline;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Helper method to format output."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a formatted string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String formatDeadLine() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String firstWord \u003d deadline.split(\" \")[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return \"(\" + firstWord + \":\" + deadline.substring(firstWord.length()) + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * toString method"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return required representation of a Deadline object in a String."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (super.getIsDone()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return \"[D][Y] \" + super.getText() + \" \" + this.formatDeadLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return \"[D][N] \" + super.getText() + \" \" + this.formatDeadLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * A child class of Task that represents a Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * event String, which is the line after \u0027/\u0027 in the given input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param text String that represents everything before the \u0027/\u0027 in the line input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param event String that represents everything after the \u0027/\u0027 in the line input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Event(String text, String event) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(text);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a Event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param text String that represents everything before the \u0027/\u0027 in the line input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param isDone that represents if a Event object is done or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param event String that represents everything after the \u0027/\u0027 in the line input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Event(String text, boolean isDone, String event) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(text, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to format a Event to be added into a txt file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return String that is formatted."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String formatLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return \"\\nE | \" + done + \" | \" + super.text + \" | \" + this.event;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Helper method to format output."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return a formatted string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    private String formatEvent() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String firstWord \u003d event.split(\" \")[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return \"(\" + firstWord + \":\" + event.substring(firstWord.length()) + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * toString method"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return required representation of a Event object in a String."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (super.getIsDone()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return \"[E][Y] \" + super.getText() + \" \" + this.formatEvent();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return \"[E][N] \" + super.getText() + \" \" + this.formatEvent();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * A superclass that represents a Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * text String that represents the line input of the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected String text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * isDone boolean that represents if a task is done or not."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a Task Object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param text String that represents a line input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Task(String text) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a Task Object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param text String that represents a line input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param isDone that represents if a task is done or not."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Task(String text, boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to obtain a list of words in the text that is split up."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return the list of splitted words."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public ArrayList\u003cString\u003e getWords() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        ArrayList\u003cString\u003e wordList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String[] wordArray \u003d this.text.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        for (int i \u003d 0; i \u003c wordArray.length; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            wordList.add(wordArray[i]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return wordList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Setter method to set a task to be done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Getter method that gets the text in the Task Object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return the text."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String getText() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.text;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Getter method that gets the isDone."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return true if task isDone."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    protected boolean getIsDone() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Dummy method just to be overridden by the child classes."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * This method will never be executed in the superclass."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return an empty string."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String formatLine() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return  \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 81
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": " * A child class of Task that represents a Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "acyang97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "acyang97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor for a Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param text String that represents a line input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Todo(String text) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(text);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Constructor of a Todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param text String that represents a line input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @param isDone that represents if a Todo object is done or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public Todo(String text, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        super(text, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * Method to format a Todo to be added into a txt file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return String that is formatted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String formatLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        return \"\\nT | \" + done + \" | \" + this.text;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * toString method"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     * @return required representation of a Todo object in a String."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "acyang97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        if (super.getIsDone()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return \"[T][Y] \" + super.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "acyang97"
        },
        "content": "            return \"[T][N] \" + super.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "acyang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "acyang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "acyang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "acyang97": 51
    }
  },
  {
    "path": "taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": "T | 1 | a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "acyang97"
        },
        "content": "T | 0 | b"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "acyang97"
        },
        "content": "T | 1 | a c"
      }
    ],
    "authorContributionMap": {
      "acyang97": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "acyang97"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "acyang97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "acyang97": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "acyang97"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "acyang97"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "acyang97": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "acyang97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "acyang97"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "acyang97": 2
    }
  }
]
