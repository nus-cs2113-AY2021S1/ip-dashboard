[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "wish2023": 2
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": "2. [D][✓] return book (by: please)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "3. [E][✘] project meeting (at: monday)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "4. [T][✓] cry about book too long"
      }
    ],
    "authorContributionMap": {
      "wish2023": 4
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Deadline(String description, char statusIcon, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        super(description, statusIcon);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 19
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static final String INITIALISE_MESSAGE \u003d \"initialising\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    //private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static final String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static void runDuke() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        storage \u003d new Storage(FILE_PATH, DIRECTORY_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String line \u003d INITIALISE_MESSAGE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        ui.printHello();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        ui.runBot(in, line, tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static void main(String[] args) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        runDuke();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "wish2023": 40
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 4
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Event(String description, char statusIcon, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        super(description, statusIcon);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 19
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns a task given a line from duke.txt"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param line Line in duke.txt"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Task the line refers to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @throws DukeException If file is not formatted correctly"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static Task getTaskFromLine(String line) throws DukeException { // For file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int taskTypePosition \u003d getIndexOfKeyword(line, \". [\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        char taskType \u003d line.charAt(taskTypePosition + 3);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        char statusIcon \u003d line.charAt(taskTypePosition + 6);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            String todoTask \u003d line.substring(taskTypePosition + 9);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            task \u003d new Todo(todoTask, statusIcon);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            int byPosition \u003d getIndexOfKeyword(line, \"(by\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            String deadlineTask \u003d line.substring(taskTypePosition + 9, byPosition - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            String by \u003d line.substring(byPosition + 5, line.length() - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            task \u003d new Deadline(deadlineTask, statusIcon, by);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            int atPosition \u003d getIndexOfKeyword(line, \"(at\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            String eventTask \u003d line.substring(taskTypePosition + 9, atPosition - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            String at \u003d line.substring(atPosition + 5, line.length() - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            task \u003d new Event(eventTask, statusIcon, at);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static int getIndexOfKeyword(String line, String keyword) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!line.contains(keyword)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return line.indexOf(keyword);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns the command from a user input containing the command and instance"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param line Line containing command and instance"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return User\u0027s command to Duke"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static String getCommand(String line) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int dividerPosition;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            dividerPosition \u003d getDividerPosition(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            command \u003d line.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            command \u003d line; // Line is only 1 word"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static int getDividerPosition(String line) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int dividerPosition \u003d 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        dividerPosition \u003d getIndexOfKeyword(line, \" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return dividerPosition;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns the instance that a command relates to from user input"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param line Line containing command and instance"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Specific instance user\u0027s command is applied to"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @throws DukeException if user inputs a single word only"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static String getInstance(String line) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int dividerPosition \u003d getDividerPosition(line);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String instance \u003d line.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (instance.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Creates a deadline based on user input"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param line Line containing command and instance"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Deadline created by user"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @throws DukeException If line is in incorrect format"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static Deadline getDeadline(String line) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int dividerPosition \u003d getDividerPosition(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int byPosition \u003d getIndexOfKeyword(line, \"/by\");;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String deadlineTask \u003d line.substring(dividerPosition + 1, byPosition - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String by \u003d line.substring(byPosition + 4);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return new Deadline(deadlineTask, by);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Creates an event based on user input"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param line Line containing command and instance"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Event created by user"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @throws DukeException If line is in incorrect format"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static Event getEvent(String line) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int dividerPosition \u003d getDividerPosition(line);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int atPosition \u003d getIndexOfKeyword(line, \"/at\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String eventTask \u003d line.substring(dividerPosition + 1, atPosition - 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String date \u003d line.substring(atPosition + 4);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return new Event(eventTask, date);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 127
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static String directoryPath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Storage(String filePath, String directoryPath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.directoryPath \u003d directoryPath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns a task list after reading from duke.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Task list created"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @throws DukeException If file is not formatted correctly"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @throws FileNotFoundException If duke.txt is not found"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            Task task \u003d parser.getTaskFromLine(fileScanner.nextLine());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static void writeToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        FileWriter filewriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            String line \u003d taskList.getLine(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            filewriter.write((i + 1) + \". \" + line + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        filewriter.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Saves the task list created into duke.txt"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param taskList Task list created by user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static void save(TaskList taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            File directory \u003d new File((directoryPath));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            if (!directory.isDirectory()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                directory.mkdir();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            writeToFile(taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 73
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Task(String description, char statusIcon) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        isDone \u003d statusIcon \u003d\u003d \u0027\\u2713\u0027 ? true : false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Mark task as done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(),description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 36
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    ArrayList\u003cString\u003e commands \u003d new ArrayList\u003cString\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            (Arrays.asList(\"todo\", \"deadline\", \"event\", \"done\", \"delete\", \"find\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private boolean isCommandValid(String command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return commands.contains(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Prints every task in the task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.println(\"Here\u0027s your TODO\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        printTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private ArrayList\u003cTask\u003e getShortlistedTasks(String instance) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        ArrayList\u003cTask\u003e shortlistedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            if (task.getDescription().contains(instance)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                shortlistedTasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return shortlistedTasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private void printTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            System.out.printf(\"%d.%s\\n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns size of the task list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Size of the task list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Marks specified task as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Lets the user know specified task has been marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param task Task to be marked"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void markTaskAsDone(String task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks.get(taskNumber - 1).setDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.println(\"I have marked your task as done!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.printf(\"\\t%s\\n\", tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Adds specified task to the task list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Lets the user know specified task has been added to the task list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.println(\"Okay! I have added this:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.printf(\"\\t%s\\n\", task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.printf(\"Now you have %d task%s in the list.\\n\", tasks.size(),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                (tasks.size() \u003d\u003d 1) ? \"\" : \"s\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Returns the task description at the specified position in task list"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param index Position of task in the task list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @return Task description"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String getLine(int index) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return tasks.get(index).toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Deletes the task at the specified position in the task list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param index Position of task in task list"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void deleteTask(String index) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.println(\"I have deleted this task!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.printf(\"\\t%s\\n\", tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.printf(\"Now you have %d task%s in the list.\\n\", tasks.size(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                (tasks.size() \u003d\u003d 1)? \"\": \"s\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Executes user\u0027s command"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @throws DukeException If line is in incorrect format"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void manageTask(String line) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String command \u003d parser.getCommand(line);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (!isCommandValid(command)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            System.out.println(\"I don\u0027t know what \" + command + \" means\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        String instance;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            instance \u003d parser.getInstance(line);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            System.out.println(\"Whoa! Please don\u0027t leave the description empty\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            markTaskAsDone(instance);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            addToList(new Todo(instance));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            deleteTask(instance);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            TaskList shortListedTasks \u003d new TaskList(getShortlistedTasks(instance));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            shortListedTasks.printTasks();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                Deadline deadline \u003d parser.getDeadline(line);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                addToList(deadline);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                System.out.println(\"Please follow the deadline format: deadline *task* /by *date*\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                Event event \u003d parser.getEvent(line);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                addToList(event);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                System.out.println(\"Please follow the event format: event *task* /at *date*\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            System.out.println(\"Whoops you may have typed a wrong command\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 181
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public Todo(String description, char statusIcon) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        super(description, statusIcon);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 16
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wish2023"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wish2023"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Prints goodbye message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.println(\"Bye see you SOON!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Prints hello message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.println(\"Hey it\u0027s your favorite chatbot buddy!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.println(\"How can I assist you today?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Interacts with the user based on user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param in Scanner for input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @param taskList Task list created by user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * @throws DukeException If line is in incorrect format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public static void runBot(Scanner in, String line, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        while (!line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            switch (line) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                displayList(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                manageList(line, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wish2023"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wish2023"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static void manageList(String line, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        taskList.manageTask(line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    private static void displayList(TaskList taskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        taskList.displayList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wish2023"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     * Prints message when no prior task list is found"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wish2023"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wish2023"
        },
        "content": "        System.out.println(\"No old tasklist found time to start fresh!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wish2023"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wish2023"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wish2023": 65
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wish2023"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wish2023": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wish2023"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wish2023"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "wish2023": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wish2023"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wish2023"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "wish2023": 2
    }
  }
]
