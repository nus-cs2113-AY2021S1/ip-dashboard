[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public Deadline (String description, int id, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        super(description, id);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        return String.format(\"[D]%s %s (by: %s)\",getStatus(), description, by);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alwaysnacy": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    private static String separatingLine \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public static void printGreetings(String greeting) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        if (greeting.equals(\"hello\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "            String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println(separatingLine);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What do you want to do today?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println(separatingLine);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        } else if (greeting.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println(separatingLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println(\"Bye. See you tomorrow!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println(separatingLine);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        TaskManager todayList \u003d new TaskManager();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        printGreetings(\"hello\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        String text \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        while (!text.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println(separatingLine);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            //list command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            if (text.equals(\"list\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                todayList.printTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            //done command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            } else if (text.contains(\"done\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                String[] commandSplit \u003d text.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                int taskID \u003d Integer.parseInt(commandSplit[1]) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                if (taskID \u003c todayList.getNumTasks()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                    todayList.setTaskAsDone(taskID);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                    todayList.printOneTask(taskID);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                    System.out.println(\"Invalid Task!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            //add command"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                todayList.addTask(text);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                todayList.printOneTask(todayList.getNumTasks() - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "                System.out.println(\"Now you have \" + todayList.getNumTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println(separatingLine);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            text \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        printGreetings(\"bye\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alwaysnacy": 58,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public  Event(String description, int id, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        super(description, id);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        return String.format(\"[E]%s %s (at: %s)\",getStatus(), description, at);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alwaysnacy": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    protected Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    protected int id;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public Task(String description, int id) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public void setAsDone ()  {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alwaysnacy": 26
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    private Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    private int numTasks \u003d0;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public void addTask(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        String byTime \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        if (task.contains(\"todo\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            description \u003d task.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            tasks[numTasks] \u003d new ToDo(description, numTasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        } else if (task.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            task \u003d task.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            description \u003d task.split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            byTime \u003d  task.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            tasks[numTasks] \u003d new Deadline(description, numTasks, byTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        } else if (task.contains(\"event\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            task \u003d task.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            description \u003d task.split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            byTime \u003d  task.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            tasks[numTasks] \u003d new Event(description, numTasks, byTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        numTasks++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        return numTasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        for (int i \u003d 0; i \u003cnumTasks; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks[i].toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public void printOneTask(int id) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        System.out.println(tasks[id].toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public void setTaskAsDone(int id) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        tasks[id].setAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alwaysnacy": 45
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public ToDo(String description, int id) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        super(description, id);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "        return String.format(\"[T]%s %s\", getStatus(), description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alwaysnacy": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "alwaysnacy": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alwaysnacy"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "alwaysnacy": 2,
      "-": 19
    }
  }
]
