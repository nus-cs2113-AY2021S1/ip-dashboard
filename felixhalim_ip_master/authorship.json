[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "# duke.Duke template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": " duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "   Hello I\u0027m Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "   What can I do for you?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "   \u003e\u003e "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 9,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "D;0;Submit movie review;17 Nov"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "E;0;Netflix party;9pm, Recess Week"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Duke is a **chat-bot app to assist you in task management via a Command Line Interface**."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Add a new Todo task: `todo`](#adding-a-new-todo-task-todo)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Add a new Deadline task: `deadline`](#adding-a-new-deadline-task-deadline)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Add a new Event task: `event`](#adding-a-new-event-task-event)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [List all tasks: `list`](#listing-all-tasks-list)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Mark a task as done: `done`](#marking-a-task-as-done-done)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Delete a task: `delete`](#deleting-a-task-delete)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Finding a task: `find`](#finding-a-task-find)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Exit the Duke: `bye`](#exiting-the-duke-bye)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    * [Save the data](#saving-the-data)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "## Quick Start "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1. Verify that you have Java 11 or above installed in your computer."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "2. Download the latest `ip.jar`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "3. Copy the file to a folder where you want to run it from."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "4. Using the terminal, navigate to the path of `ip.jar`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "5. Run `java -jar ip.jar`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "6. If the setup is correct, you should see a welcome message. Then, it is now ready to go."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Adding a new Todo task: `todo`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Adds a Todo to the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`todo Watch Crash Landing on You`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "[T][X] Watch Crash Landing on You"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Adding a new Deadline task: `deadline`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Adds a Deadline to the task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `deadline DESCRIPTION /by TIME`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`deadline Submit movie review /by 17 Nov`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "[D][X] Submit movie review (by: 17 Nov)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Adding a new Event task: `event`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Adds an Event to the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `event DESCRIPTION /at TIME`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`event Netflix party /at 9pm, Recess Week`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "[E][X] Netflix party (at: 9pm, Recess Week)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Shows a list of all tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1.[T][X] Watch Crash Landing on You"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "2.[D][X] Submit movie review (by: 17 Nov)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "3.[E][X] Netflix party (at: 9pm, Recess Week)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Marking a task as done: `done`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Marks the specified task as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `done TASK_INDENTIFIER`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Okay! I\u0027ve marked this task as done: Keep on going!"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "[T][V] Watch Crash Landing on You"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Deletes the specified task from the task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `delete TASK_IDENTIFIER`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Noted. I\u0027ve removed this task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "felixhalim"
        },
        "content": " [T][V] Watch Crash Landing on You"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Finding a task: `find`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Finds task which description contains any of the given keywords."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "`find party`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1.[E][X] Netflix party (at: 9pm, Recess Week)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Exiting the Duke: `bye`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "### Saving the data:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "Duke data are saved in the hard disk automatically."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**todo**|`todo DESCRIPTION` \u003cbr\u003ee.g., `todo Watch Crash Landing on You`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**deadline**|`deadline DESCRIPTION /by TIME` \u003cbr\u003ee.g., `deadline Submit movie review /by 17 Nov`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**event**|`event DESCRIPTION /at TIME`\u003cbr\u003ee.g., `event Netflix party /at 9pm, Recess Week`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**list**|`list`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**done**|`done [TASK_IDENTIFIER]` \u003cbr\u003ee.g., `done 1`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**delete**|`delete [TASK_IDENTIFIER]` \u003cbr\u003ee.g., `delete 1`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**find**|`find [KEYWORD]`\u003cbr\u003ee.g., `find party`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "**exit**|`bye`"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 130,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                storage.save(tasks.getList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (c !\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 42,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.DukeEmptyArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.DukeIllegalCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": " * A \u003ccode\u003eParser\u003c/code\u003e object will parse given \u003ccode\u003eString command\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": " * and return the corresponding \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns the corresponding command ."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * If the position is unset, NaN is returned."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param command the full command inputted by User."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return Command object that correspond to the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public static Command parse(String command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (command.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                return new DoneCommand(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                return new DeleteCommand(command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (command.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                return new FindCommand(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                return new AddCommand(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (DukeIllegalCommandException | DukeEmptyArgumentException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 46
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Write the current List of Task to filepath in the following format:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * [task type];[task status];[task description];[task time]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param list the current List of Task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @throws DukeException If there is Input or Output Error."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void save(List\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String taskInformation \u003d t.getTask();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String taskType \u003d taskInformation.substring(1, 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String taskStatus \u003d (taskInformation.charAt(4) \u003d\u003d \u0027V\u0027 ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String taskDescription \u003d taskInformation.substring(7);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (taskDescription.contains(\"(by:\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    String taskTime \u003d taskDescription.substring(taskDescription.indexOf(\"(by: \") + 5,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            taskDescription.indexOf(\")\", taskDescription.indexOf(\"(by: \")));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    taskDescription \u003d taskDescription.substring(0, taskDescription.indexOf(\"(by:\") - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    fw.write(taskType + \";\" + taskStatus + \";\" + taskDescription + \";\" + taskTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (taskDescription.contains(\"(at:\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    String taskTime \u003d taskDescription.substring(taskDescription.indexOf(\"(at: \") + 5,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            taskDescription.indexOf(\")\", taskDescription.indexOf(\"(at: \")));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    taskDescription \u003d taskDescription.substring(0, taskDescription.indexOf(\"(at:\") - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    fw.write(taskType + \";\" + taskStatus + \";\" + taskDescription + \";\" + taskTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    fw.write(taskType + \";\" + taskStatus + \";\" + taskDescription);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                fw.write(\"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new DukeException(\"IO Error [\" + e + \"]\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns List of Task object read in the given file path."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * If the filepath is unset, it will return a blank List."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return List of Task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @throws DukeException If file is not found in the file path."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            File data \u003d new File(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            // If the current file path is not exist then create new one"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            // Reference : https://stackoverflow.com/questions/2833853/create-whole-path-automatically-when-writing-to-a-new-file"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (! data.exists()){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                data.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            Scanner dataEntry \u003d new Scanner(data);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            while (dataEntry.hasNext()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String[] parsedData \u003d dataEntry.nextLine().split(\";\", 4);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String type \u003d parsedData[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String status \u003d parsedData[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String description \u003d parsedData[2];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (type.equalsIgnoreCase(\"t\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    list.add(new ToDo(description, status));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (type.equalsIgnoreCase(\"d\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    String date \u003d parsedData[3];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    list.add(new Deadline(description, date, status));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (type.equalsIgnoreCase(\"e\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    String date \u003d parsedData[3];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    list.add(new Event(description, date, status));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(\"Format Error!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new DukeException(\"File Not Found [\" + e + \"]\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 100
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e(list);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns List of Task object stored in list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return List of Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Sets list to the List of Task object passed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param list the current List of Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void setList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e(list);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 36
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Shows the welcome message during the program startup."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printGreetings();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Shows the farewell message during the program termination."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void showFarewells() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Shows the message of corresponding error."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param errorMessage the description of the error."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.print(\"\u003e\u003e \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private void printGreetings() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private void printLogo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 56
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.DukeEmptyArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.DukeIllegalCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public AddCommand(String command) throws DukeEmptyArgumentException, DukeIllegalCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String parsedResponse;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            this.type \u003d command.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            parsedResponse \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new DukeEmptyArgumentException(\"@.@ I\u0027m confused! Please check your argument\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            // e.g. : todo finish ip"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            this.description \u003d parsedResponse;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            // e.g. : deadline finish ip /by tomorrow"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String description \u003d parsedResponse.split(\" /by \")[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String date \u003d parsedResponse.split(\" /by \")[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                this.description \u003d description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                throw new DukeEmptyArgumentException(\"@.@ I\u0027m confused! Please check your argument\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            // e.g. : event tp meeting /at monday, 7pm-8pm"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String description \u003d parsedResponse.split(\" /at \")[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String date \u003d parsedResponse.split(\" /at \")[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                this.description \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                this.date \u003d date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                throw new DukeEmptyArgumentException(\"@.@ I\u0027m confused! Please check your argument\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new DukeIllegalCommandException(\"@.@ Oops, I don\u0027t understand your command\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Adds the task specified based on the task type to the TaskList."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param tasks   the current state of TaskList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param ui      the current state of Ui."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param storage the current state of Storage."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        int size;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (type.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            list.add(new ToDo(description));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else if (type.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            list.add(new Deadline(description, date));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else if (type.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            list.add(new Event(description, date));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        size \u003d list.size();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(list.get(size - 1).getTask());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.printf(\"Now you have %d %s in the list.%n\", size, size \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        tasks.setList(list);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 87
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns the state if a command is ExitCommand or not."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return boolean state of the command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Executes a specific action based on Command type."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param tasks   the current state of TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param ui      the current state of Ui."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param storage the current state of Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private int taskIdentifier;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            taskIdentifier \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"\u003e.\u003c The task identifier supposed to be number! Here is the correct format\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    \" \\\"delete \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"\u003e.\u003c You can\u0027t leave the task identifier empty! The format supposed to \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    \"be \\\"delete \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Removes the task specified based on the task type and taskIdentifier from the TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param tasks   the current state of TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param ui      the current state of Ui."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param storage the current state of Storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (taskIdentifier \u003e 0 \u0026\u0026 taskIdentifier \u003c\u003d list.size()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\" \" + list.get(taskIdentifier - 1).getTask());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            list.remove(taskIdentifier - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            int size \u003d list.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.printf(\"Now you have %d %s in the list.%n\", size, size \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"Sorry, I can\u0027t find the task :(\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        tasks.setList(list);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 51
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private int taskIdentifier;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            taskIdentifier \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"\u003e.\u003c The task identifier supposed to be number! Here is the correct format\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    \" \\\"done \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"\u003e.\u003c You can\u0027t leave the task identifier empty! The format supposed to \" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    \"be \\\"done \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Marks the task specified based on the task type in the TaskList as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param tasks   the current state of TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param ui      the current state of Ui."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param storage the current state of Storage."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (taskIdentifier \u003e 0 \u0026\u0026 taskIdentifier \u003c\u003d list.size()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            list.get(taskIdentifier - 1).markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"Okay! I\u0027ve marked this task as done: Keep on going!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(list.get(taskIdentifier - 1).getTask());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"Sorry, I can\u0027t find the task :(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        tasks.setList(list);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Shows the farewell message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param tasks   the current state of TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param ui      the current state of Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param storage the current state of Storage."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        ui.showFarewells();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 28
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.DukeEmptyArgumentException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public FindCommand(String command) throws DukeEmptyArgumentException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String parsedResponse;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            parsedResponse \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            this.keyword \u003d parsedResponse;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            throw new DukeEmptyArgumentException(\"@.@ I\u0027m confused! Please check your argument\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Shows the List of Task where each Task element contain the search keyword."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param tasks   the current state of TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param ui      the current state of Ui."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param storage the current state of Storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        int size \u003d list.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String listPlurality \u003d size \u003e 1 ? \"are\" : \"is\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String taskPlurality \u003d size \u003e 1 ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"You have nothing on your list! Why not add one :D\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.printf(\"Here %s the matching %s in your list:%n\", listPlurality, taskPlurality);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            int startingNumber \u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (task.getTask().contains(keyword)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(startingNumber + \".\" + task.getTask());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    startingNumber++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (startingNumber \u003d\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                System.out.println(\"Sorry I can\u0027t find any task with the keyword \\\"\" + keyword + \"\\\"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 58
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Shows List of Task content."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param tasks   the current state of TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param ui      the current state of Ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @param storage the current state of Storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        int size \u003d list.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String listPlurality \u003d size \u003e 1 ? \"are\" : \"is\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String taskPlurality \u003d size \u003e 1 ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"You have nothing on your list! Why not add one :D\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.printf(\"Here %s the %s in your list:%n\", listPlurality, taskPlurality);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                System.out.println((i + 1) + \".\" + list.get(i).getTask());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 42
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeEmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class DukeEmptyArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DukeEmptyArgumentException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DukeEmptyArgumentException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeIllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class DukeIllegalCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DukeIllegalCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public DukeIllegalCommandException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Deadline(String description, String date, String isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns the details of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return String of the task details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.getTask(), date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Event(String description, String date, String isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns the details of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return String of the task details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.getTask(), date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Task(String description, String isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.isDone \u003d isDone.equals(\"1\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns the status icon of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return String of the status icon."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return (isDone ? \"V\" : \"X\"); //return V or X"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns the details of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return String of the task details."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 41
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public ToDo(String description, String isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * Returns the details of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     * @return String of the task details."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[T]%s\", super.getTask());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "todo learn automated test"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "deadline finish ip /by tuesday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "event meeting tp /at monday, 7pm-8pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "felix"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done z"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "delete 2"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/Duke.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2,
      "-": 36
    }
  }
]
