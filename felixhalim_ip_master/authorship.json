[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.getTask(), date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void printFarewells() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void printGreetings() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void printHorizontalLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void printLogo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printGreetings();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (command.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            printHorizontalLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    int size \u003d list.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.println(\"You have nothing on your list! Why not add one :D\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        String listPlurality \u003d size \u003e 1 ? \"are\" : \"is\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        String taskPlurality \u003d size \u003e 1 ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.printf(\"Here %s the %s in your list:%n\", listPlurality, taskPlurality);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println((i + 1) + \".\" + list.get(i).getTask());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    int taskIdentifier;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        taskIdentifier \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        if (taskIdentifier \u003e 0 \u0026\u0026 taskIdentifier \u003c\u003d list.size()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.get(taskIdentifier - 1).markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(\"Okay! I\u0027ve marked this task as done: Keep on going!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(list.get(taskIdentifier - 1).getTask());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(\"Sorry, I can\u0027t find the task :(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.println(\"\u003e.\u003c The task identifier supposed to be number! Here is the correct format\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                                \" \\\"done \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.println(\"\u003e.\u003c You can\u0027t leave the task identifier empty! The format supposed to \" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                                \"be \\\"done \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        // e.g. : todo finish ip"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String description \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.add(new ToDo(description));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        // e.g. : deadline finish ip /by tomorrow"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String parsedResponse \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String description \u003d parsedResponse.split(\" /by \")[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String date \u003d parsedResponse.split(\" /by \")[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.add(new Deadline(description, date));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        // e.g. : event tp meeting /at monday, 7pm-8pm"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String parsedResponse \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String description \u003d parsedResponse.split(\" /at \")[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String date \u003d parsedResponse.split(\" /at \")[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.add(new Event(description, date));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        throw new IllegalCommandException();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    int size \u003d list.size();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(list.get(size - 1).getTask());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.printf(\"Now you have %d %s in the list.%n\", size, size \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } catch (IllegalCommandException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                System.out.println(\"Oops, I don\u0027t understand your command :(\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } catch (EmptyArgumentException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                System.out.println(\"\u003e.\u003c Ouch! Please check your argument\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            printHorizontalLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printFarewells();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 109,
      "-": 10
    }
  },
  {
    "path": "src/main/java/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class EmptyArgumentException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.getTask(), date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 13
    }
  },
  {
    "path": "src/main/java/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class IllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return (isDone ? \"V\" : \"X\"); //return V or X"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 21
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[T]%s\", super.getTask());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "todo learn automated test"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "deadline finish ip /by tuesday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "event meeting tp /at monday, 7pm-8pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "felix"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done z"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "deadline"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 14
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 1,
      "-": 37
    }
  }
]
