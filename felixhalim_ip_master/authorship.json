[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": " Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2,
      "-": 25
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "E;0;cs2113 lecture;friday 18 september 2020 from 4pm to 6pm"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.EmptyArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.exception.IllegalCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void printFarewells() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void printGreetings() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void printHorizontalLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void printLogo() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printGreetings();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        startChatbot();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        printFarewells();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void startChatbot() throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String filePath \u003d \"C:\\\\Users\\\\felix\\\\OneDrive - National University of Singapore\\\\Semester \" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                \"3\\\\CS2113t\\\\ip\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        loadData(list, filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            saveData(list, filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (command.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            printHorizontalLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    int size \u003d list.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.println(\"You have nothing on your list! Why not add one :D\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        String listPlurality \u003d size \u003e 1 ? \"are\" : \"is\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        String taskPlurality \u003d size \u003e 1 ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.printf(\"Here %s the %s in your list:%n\", listPlurality, taskPlurality);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println((i + 1) + \".\" + list.get(i).getTask());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    int taskIdentifier;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        taskIdentifier \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        if (taskIdentifier \u003e 0 \u0026\u0026 taskIdentifier \u003c\u003d list.size()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.get(taskIdentifier - 1).markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(\"Okay! I\u0027ve marked this task as done: Keep on going!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(list.get(taskIdentifier - 1).getTask());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(\"Sorry, I can\u0027t find the task :(\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.println(\"\u003e.\u003c The task identifier supposed to be number! Here is the correct format\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                                \" \\\"done \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.println(\"\u003e.\u003c You can\u0027t leave the task identifier empty! The format supposed to \" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                                \"be \\\"done \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    int taskIdentifier;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        taskIdentifier \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        if (taskIdentifier \u003e 0 \u0026\u0026 taskIdentifier \u003c\u003d list.size()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(\"Noted. I\u0027ve removed this task\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(\" \" + list.get(taskIdentifier - 1).getTask());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.remove(taskIdentifier - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            int size \u003d list.size();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.printf(\"Now you have %d %s in the list.%n\", size, size \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            System.out.println(\"Sorry, I can\u0027t find the task :(\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.println(\"\u003e.\u003c The task identifier supposed to be number! Here is the correct format\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                                \" \\\"delete \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        System.out.println(\"\u003e.\u003c You can\u0027t leave the task identifier empty! The format supposed to \" +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                                \"be \\\"delete \u003cnumber\u003e\\\"\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        // e.g. : todo finish ip"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String description \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.add(new ToDo(description));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        // e.g. : deadline finish ip /by tomorrow"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String parsedResponse \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String description \u003d parsedResponse.split(\" /by \")[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String date \u003d parsedResponse.split(\" /by \")[1];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.add(new Deadline(description, date));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        // e.g. : event tp meeting /at monday, 7pm-8pm"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String parsedResponse \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String description \u003d parsedResponse.split(\" /at \")[0];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            String date \u003d parsedResponse.split(\" /at \")[1];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            list.add(new Event(description, date));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                            throw new EmptyArgumentException();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        throw new IllegalCommandException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    int size \u003d list.size();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(list.get(size - 1).getTask());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.printf(\"Now you have %d %s in the list.%n\", size, size \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } catch (IllegalCommandException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                System.out.println(\"Oops, I don\u0027t understand your command :(\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } catch (EmptyArgumentException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                System.out.println(\"\u003e.\u003c Ouch! Please check your argument\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            printHorizontalLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void saveData(List\u003cTask\u003e list, String filePath) throws IOException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            String taskInformation \u003d t.getTask();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            String taskType \u003d taskInformation.substring(1, 2);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            String taskStatus \u003d (taskInformation.substring(4, 5).equals(\"V\") ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            String taskDescription \u003d taskInformation.substring(7);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            if (taskDescription.contains(\"(by:\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String taskTime \u003d taskDescription.substring(taskDescription.indexOf(\"(by: \") + 5,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        taskDescription.indexOf(\")\", taskDescription.indexOf(\"(by: \")));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                taskDescription \u003d taskDescription.substring(0, taskDescription.indexOf(\"(by:\") - 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                fw.write(taskType + \";\" + taskStatus + \";\" + taskDescription + \";\" + taskTime);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } else if (taskDescription.contains(\"(at:\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String taskTime \u003d taskDescription.substring(taskDescription.indexOf(\"(at: \") + 5,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                        taskDescription.indexOf(\")\", taskDescription.indexOf(\"(at: \")));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                taskDescription \u003d taskDescription.substring(0, taskDescription.indexOf(\"(at:\") - 1);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                fw.write(taskType + \";\" + taskStatus + \";\" + taskDescription + \";\" + taskTime);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                fw.write(taskType + \";\" + taskStatus + \";\" + taskDescription);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            fw.write(\"\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private static void loadData(List\u003cTask\u003e list, String filePath) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            File data \u003d new File(filePath);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            Scanner dataEntry \u003d new Scanner(data);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            while (dataEntry.hasNext()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String[] parsedData \u003d dataEntry.nextLine().split(\";\", 4);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String type \u003d parsedData[0];"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String status \u003d parsedData[1];"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                String description \u003d parsedData[2];"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                if (type.equalsIgnoreCase(\"t\")) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    list.add(new ToDo(description, status));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (type.equalsIgnoreCase(\"d\")) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    String date \u003d parsedData[3];"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    list.add(new Deadline(description, date, status));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else if (type.equalsIgnoreCase(\"e\")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    String date \u003d parsedData[3];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    list.add(new Event(description, date, status));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                    System.out.println(\"Format Error!\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 203,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class EmptyArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class IllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Deadline(String description, String date, String isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.getTask(), date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Event(String description, String date, String isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.getTask(), date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public Task(String description, String isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.isDone \u003d isDone.equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return (isDone ? \"V\" : \"X\"); //return V or X"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 28
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public ToDo(String description, String isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "        return String.format(\"[T]%s\", super.getTask());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "todo learn automated test"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "deadline finish ip /by tuesday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "event meeting tp /at monday, 7pm-8pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "felix"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done z"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "delete 2"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/Duke.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "felixhalim"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "felixhalim": 2,
      "-": 36
    }
  }
]
