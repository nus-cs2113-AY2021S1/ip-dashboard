[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "PraveenElango": 2
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "List"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "[T] ✘ apple "
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 2
    }
  },
  {
    "path": "filename.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "List[T] ✘ banana "
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 1
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Deadline extends Todo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return super.toString() + System.lineSeparator() + \"do by: \" + by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String typeChar(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 25
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import  java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static int tasksCount \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void addTask(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasks.add(new Task(description));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "//        tasks[tasksCount] \u003d new Task(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(tasksCount).typeChar() + \" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(tasksCount).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(tasks.get(tasksCount).getDesc() + \" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasksCount +\u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void addTodo(String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasks.add(new Todo(description));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(tasksCount).typeChar() + \" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(tasksCount).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(tasks.get(tasksCount).getDesc() + \" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasksCount +\u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void addDeadline(String description, String by) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(tasksCount).typeChar() + \" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(tasksCount).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(tasks.get(tasksCount).getDesc() + \" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"(\" + tasks.get(tasksCount).getBy() + \") \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasksCount +\u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void addEvent(String description, String by) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasks.add(new Events(description, by));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(tasksCount).typeChar() + \" \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(tasksCount).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(tasks.get(tasksCount).getDesc() + \" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"(\" + tasks.get(tasksCount).getBy() + \") \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasksCount +\u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void printTasksList() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        while (tasks.get(i) !\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print((i + 1) + \".\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(tasks.get(i).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(tasks.get(i).getDesc() + \" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void printTodoEventDeadlineList() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        while (i \u003c tasks.size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print((i + 1) + \".\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(tasks.get(i).typeChar() + \" \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(tasks.get(i).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if (tasks.get(i) instanceof Deadline || tasks.get(i) instanceof Events) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.print(tasks.get(i).getDesc() + \" \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.println(\"(\" + tasks.get(i).getBy() + \") \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.println(tasks.get(i).getDesc() + \" \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleDone(String args){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        //Check correct formatting"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            index \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }catch(NumberFormatException e){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"Check formatting of usage of done!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        //Marking task as done"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            tasks.get(index-1).markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(tasks.get(index-1).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(tasks.get(index-1).getDesc() + \" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"Task does not exist, please check again!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleTodo(String args){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        addTodo(args);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Now you have \" + tasksCount + \" tasks in the list\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleDeadline(String desc, String by){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        addDeadline(desc,by);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Now you have \" + tasksCount + \" tasks in the list\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleEvent(String desc, String by){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        addEvent(desc,by);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Now you have \" + tasksCount + \" tasks in the list\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleDelete(String args){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int i \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(i-1).typeChar()+ \" \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(tasks.get(i-1).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if(tasks.get(i-1) instanceof Deadline || tasks.get(i-1) instanceof Events){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(tasks.get(i-1).getDesc() + \" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"(\"+ tasks.get(i-1).getBy() + \") \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(tasks.get(i-1).getDesc() + \" \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasks.remove(i-1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasksCount-\u003d1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleBye(){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            FileWriter initialWriter \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            BufferedWriter myWriter \u003d new BufferedWriter(initialWriter);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            myWriter.write(\"List\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            myWriter.newLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.lineSeparator();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            for(int i\u003d0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                myWriter.write(tasks.get(i).typeChar() + \" \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                myWriter.write(tasks.get(i).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                if (tasks.get(i) instanceof Deadline || tasks.get(i) instanceof Events) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                    myWriter.write(tasks.get(i).getDesc() + \" \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                    myWriter.write(\"(\" + tasks.get(i).getBy() + \") \");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                    myWriter.write(tasks.get(i).getDesc() + \" \");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                myWriter.newLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static boolean handleCommand(String cmd) throws DukeException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String cmdArgs \u003d \"\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String cmdAfterSlash \u003d \"\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int spaceIndex \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int slashIndex \u003d cmd.indexOf(\"/\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        //indexing"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if(spaceIndex !\u003d -1){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            cmdArgs \u003d cmd.substring(spaceIndex+1).trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if(slashIndex !\u003d -1){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            cmdAfterSlash \u003d cmd.substring(slashIndex+1).trim();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        //cases"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if(cmd.startsWith(\"done\")){"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleDone(cmdArgs);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }else if(cmd.startsWith(\"todo\")){"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleTodo(cmdArgs);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }else if(cmd.startsWith(\"deadline\")){"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleDeadline(cmd.substring(spaceIndex+1,slashIndex), cmdAfterSlash);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }else if(cmd.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleEvent(cmd.substring(spaceIndex+1,slashIndex),cmdAfterSlash);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }else if(cmd.equals(\"list\")){"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            printTodoEventDeadlineList();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }else if(cmd.startsWith(\"delete\")){"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleDelete(cmdArgs);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }else if(cmd.equals(\"bye\")){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleBye();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        writer.print(\"\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String cmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        boolean dukeExecuting \u003d true;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        do{"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            dukeExecuting \u003d handleCommand(cmd);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if(cmd.equals(\"bye\")){"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            cmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }while(dukeExecuting);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 224
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 9
    }
  },
  {
    "path": "src/main/java/duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Events extends Todo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Events(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return super.toString() + System.lineSeparator() + \"do by: \" + by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String typeChar(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 25
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getDesc(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    //overriden methods by subclasses"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String typeChar(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"duke.Task\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"by\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 38
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String status \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (isDone){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            status \u003d \"Yes\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            status \u003d \"No\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return super.toString() + System.lineSeparator() + \"is done? \" + status;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String typeChar(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 32
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "PraveenElango": 2
    }
  }
]
