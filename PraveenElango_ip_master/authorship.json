[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "PraveenElango": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "### Track tasks "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "This program helps you to keep track of upcoming events, deadlines or any tasks to complete."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "At any point of time, you can mark a task as done, or delete it from the list. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "You can also choose to find for tasks from the list with a keyword that you input in the command line."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "### Persistent storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "The program stores the list of tasks locally on your computer in a text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "### `todo` - Adds a general task to the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Creates a task with the given description and stores it in the list of existing tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "\u003e todo eat char kway teow"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  Added: [T][âœ˜] eat char kway teow"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  You now have 1 task in your list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "### `event` - Adds an upcoming event with the date to the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Creates an event with the given description and date, then stores it in the list of existing tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "`event [description] /at [when (format: dd/mm/yy hhmm)]`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "\u003e go haji lane /at 29/09/20 1000"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  Added: [E][âœ˜] go haji lane (at: Tue Sep 29 10:00:00 SGT 2020)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  You now have 2 tasks in your list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "### `deadline` - Adds a task with a deadline to the list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Creates a task with the given description and deadline, then stores it in the list of existing tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "`deadline [description] /by [when (format: dd/mm/yy hhmm)]`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "\u003e deadline buy 4d toto /by 29/09/20 1000"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  Added: [D][âœ˜] buy 4d toto (at: Tue Sep 29 10:00:00 SGT 2020)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  You now have 3 tasks in your list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "### `done` - Marks a task as done"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Marks a task in the list as done based on the given index."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "\u003e done 2"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  Ok! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    [E][âœ“] attend virtual hackathon (at: Thurs Sep 17 12:00:00 SGT 2020)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "### `delete` - Deletes a task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Deletes a task from the list based on the given index."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "\u003e delete 1"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  Ok! I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    [E][âœ“] attend virtual hackathon (at: Thurs Sep 17 12:00:00 SGT 2020)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "### `find` - Searches for "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Searches for tasks that contains the given text."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "`find \u003cfilter\u003e`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "\u003e find lecture"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  Here are the tasks that contains the text \"beef\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  1. [T][âœ˜] eat beef burger"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  2. [T][âœ˜] settle your beef with the class bully"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "  3. [T][âœ˜] beef up your current essay word count"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "Credits for UG format: daniellimws [GitHub]"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "PraveenElango": 109
    }
  },
  {
    "path": "filename.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "List[T] âœ˜ banana "
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 1
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * Represents a deadline task in the todo list when added and comes"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * with deadline of date and time by which task is to be completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Deadline extends Todo {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Initialises Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Set the task as done or otherwise."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Setting of deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Obtaining deadline details."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return Date and time of deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return super.toString() + System.lineSeparator() + \"do by: \" + by;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String typeChar() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 49
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import  java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.lang.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * The Duke program is a Personal Assistant Chatbot that helps a person"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * to keep track of various things."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Initialises Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        storage \u003d new Storage(filePath, taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * This is the main method which makes use of the classes declared"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * in the Duke constructor to initialise the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @throws IOException when there are input/output file operation issues while"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * creating and writing the program list to the text file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @throws DukeException when errors specific to Duke are raised."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        File file\u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            parser \u003d new Parser(ui, storage.loadList(\"duke.txt\", taskList));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String cmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        boolean dukeExecuting;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            dukeExecuting \u003d parser.handleCommand(cmd);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            cmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } while(dukeExecuting);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 60
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 9
    }
  },
  {
    "path": "src/main/java/duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * Represents an event task in the todo list when added and comes"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * with date and time when event will be held."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Events extends Todo {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Initialises Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Events(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Setting of event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Set the task as done or otherwise."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Obtaining event details."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return Date and time of event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return super.toString() + System.lineSeparator() + \"do by: \" + by;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String typeChar() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 47
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * Represents the component of the program that handles and processes"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * user inputs and interacts with the UI accordingly. The adding,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * handling, and deleting of all tasks is done here."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Initialises Parser."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Parser(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        Parser.ui \u003d ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        Parser.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Adds a Todo task to the TaskList and prints it in the UI"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * if it has been successfully added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param description Description of the Todo task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void addTodo(String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        taskList.addTask(new Todo(description));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ui.printTodo(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Adds a Deadline task to the TaskList and prints it in the UI"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * if it has been successfully added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param description Description of the Deadline task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void addDeadline(String description, String by) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        taskList.addTask(new Deadline(description, by));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ui.printDeadlineOrEvent(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Adds an Event task to the TaskList and prints it in the UI"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * if it has been successfully added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param description Description of the Event task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void addEvent(String description, String by) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        taskList.addTask(new Events(description, by));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ui.printDeadlineOrEvent(taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Marks a task as done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param args Used to obtain index of task in TaskList to mark as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @throws NumberFormatException if formatting of input is incorrect, i.e."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * not aligned with what is pointed out in the UG"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @throws IndexOutOfBoundsException if the task is not in the TaskList."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleDone(String args) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        //Check correct formatting"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            index \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }catch(NumberFormatException e){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"Check formatting of usage of done!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        //Marking task as done"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            ui.printDone(taskList, index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"Task does not exist, please check again!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleTodo(String args) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        addTodo(args);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ui.TaskAddedNotifier(taskList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleDeadline(String desc, String by) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        addDeadline(desc,by);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ui.TaskAddedNotifier(taskList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleEvent(String desc, String by) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        addEvent(desc,by);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ui.TaskAddedNotifier(taskList);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleDelete(String args) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int index \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ui.printDelete(taskList, index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleBye() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        Storage.saveList(taskList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static void handleFind(String args) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        for(Task task:tasks){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if(task.getDesc().contains(args)){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                matchingTaskList.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        Ui.findList(matchingTaskList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Handles the commands passed in by the user accordingly."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param cmd Command passed in by user."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return false If user inputs bye as command."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return true If method has completed execution."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static boolean handleCommand(String cmd) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String cmdArgs \u003d \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String cmdAfterSlash \u003d \"\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int spaceIndex \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int slashIndex \u003d cmd.indexOf(\"/\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        //indexing"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if(spaceIndex !\u003d -1){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            cmdArgs \u003d cmd.substring(spaceIndex + 1).trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if(slashIndex !\u003d -1){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            cmdAfterSlash \u003d cmd.substring(slashIndex + 1).trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        //cases"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (cmd.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleDone(cmdArgs);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else if(cmd.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleTodo(cmdArgs);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else if(cmd.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleDeadline(cmd.substring(spaceIndex + 1,slashIndex), cmdAfterSlash);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else if(cmd.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleEvent(cmd.substring(spaceIndex + 1,slashIndex),cmdAfterSlash);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else if(cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            Ui.printTodoEventDeadlineList(taskList);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else if(cmd.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleDelete(cmdArgs);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else if(cmd.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleFind(cmdArgs);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        else if(cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            handleBye();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 159
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * Storage of items in list in a text file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Storage(String filePath, TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Method to save the tasks in the list by reading and writing it in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * the text file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param taskList TaskList instance containing the ArrayList of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @throws IOException If there are problems with writing input/output to"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     *                     the text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static void saveList(TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            FileWriter initialWriter \u003d new FileWriter(\"duke.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            BufferedWriter myWriter \u003d new BufferedWriter(initialWriter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                myWriter.write(taskList.getTask(i).typeChar() + \" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                myWriter.write(taskList.getTask(i).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                if (taskList.getTask(i) instanceof Deadline || taskList.getTask(i) instanceof Events) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                    myWriter.write(taskList.getTask(i).getDesc() + \" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                    myWriter.write(\"(\" + taskList.getTask(i).getBy() + \") \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                    myWriter.write(taskList.getTask(i).getDesc() + \" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                myWriter.newLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static TaskList loadList(String filePath, TaskList taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (!reader.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        while (reader.hasNext()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            taskList.addTask(parseListLine(reader.nextLine()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private static Task parseListLine(String taskLine) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String type \u003d Character.toString(taskLine.charAt(1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String by \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String isDone \u003d Character.toString(taskLine.charAt(4));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int startBracketIndex \u003d taskLine.indexOf(\"(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int closeBracketIndex \u003d taskLine.lastIndexOf(\")\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (startBracketIndex !\u003d -1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            description \u003d taskLine.substring(6, startBracketIndex).trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            by \u003d taskLine.substring(startBracketIndex + 1, closeBracketIndex).trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            description \u003d taskLine.substring(6).trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            Events event \u003d new Events(description, by);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 101
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    //overridden methods by subclasses"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String typeChar() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"duke.Task\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"by\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 36
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * Represents the lists of tasks stored according to tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * added in by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Initialises TaskList with an ArrayList to keep track"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * of the tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Returns size of the tasks ArrayList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return Size of list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Returns latest item added to the tasks ArrayList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return final index of tasks ArrayList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public int tasksCount() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return tasks.size() - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Returns task from tasks ArrayList based on input index."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param index Index of ArrayList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return task from tasks ArrayList based on input index."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Returns all the tasks from tasks ArrayList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return the tasks ArrayList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Adds task to the TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param task Task to be added to tasks ArrayList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Removes task from ArrayList based on index of task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * given by user."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param index Index of task to be removed tasks ArrayList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 77
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * Represents a todo task to be added in the todo list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Initialises Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Set the task as done or otherwise."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Returns boolean value of whether task is done or not"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @return status of task completion."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        String status;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (isDone){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            status \u003d \"Yes\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            status \u003d \"No\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return super.toString() + System.lineSeparator() + \"is done? \" + status;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public String typeChar() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 44
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * Accounts for the User Interface where the printing is handled based on the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " * user commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public Ui(){}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Prints the UI for Todo tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param taskList TaskList instance containing the ArrayList of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void printTodo(TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int tasksCount \u003d taskList.tasksCount();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(taskList.getTask(tasksCount).typeChar() + \" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(taskList.getTask(tasksCount).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(taskList.getTask(tasksCount).getDesc() + \" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Prints the UI for Deadline or Event tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param taskList TaskList instance containing the ArrayList of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void printDeadlineOrEvent(TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int tasksCount \u003d taskList.tasksCount();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(taskList.getTask(tasksCount).typeChar() + \" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(taskList.getTask(tasksCount).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(taskList.getTask(tasksCount).getDesc() + \" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"(\" + taskList.getTask(tasksCount).getBy() + \") \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Prints the UI for tasks added to list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param taskList TaskList instance containing the ArrayList of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void TaskAddedNotifier(TaskList taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Prints the UI for Todo, Deadline, and Event tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param taskList TaskList instance containing the ArrayList of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static void printTodoEventDeadlineList(TaskList taskList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"No tasks in list!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        while (index \u003c taskList.size()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print((index + 1) + \".\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(taskList.getTask(index).typeChar() + \" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(taskList.getTask(index).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if (taskList.getTask(index) instanceof Deadline || taskList.getTask(index) instanceof Events) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.print(taskList.getTask(index).getDesc() + \" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.println(\"(\" + taskList.getTask(index).getBy() + \") \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.println(taskList.getTask(index).getDesc() + \" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public static void findList(ArrayList\u003cTask\u003e findList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (findList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"No tasks in list!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        while (index \u003c findList.size()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print((index + 1) + \".\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(findList.get(index).typeChar() + \" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(findList.get(index).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            if (findList.get(index) instanceof Deadline || findList.get(index) instanceof Events) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.print(findList.get(index).getDesc() + \" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.println(\"(\" + findList.get(index).getBy() + \") \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "                System.out.println(findList.get(index).getDesc() + \" \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Prints the UI for deletion of tasks by user."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param taskList TaskList instance containing the ArrayList of tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param index index of task to be deleted."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void printDelete(TaskList taskList, int index) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(taskList.getTask(index - 1).typeChar()+ \" \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(taskList.getTask(index - 1).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        if (taskList.getTask(index-1) instanceof Deadline || taskList.getTask(index - 1) instanceof Events){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.print(taskList.getTask(index - 1).getDesc() + \" \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(\"(\"+ taskList.getTask(index - 1).getBy() + \") \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "            System.out.println(taskList.getTask(index - 1).getDesc() + \" \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        taskList.removeTask(index-1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * Prints the UI for tasks marked done by user."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param taskList TaskList instance containing the ArrayList of tasks."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     * @param index index of task to be marked done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    public void printDone(TaskList taskList, int index) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        taskList.getTask(index-1).markAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.print(taskList.getTask(index - 1).getStatusIcon() + \" \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "        System.out.println(taskList.getTask(index - 1).getDesc() + \" \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PraveenElango": 120
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PraveenElango"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "PraveenElango": 2
    }
  }
]
