[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.exception.EmptyDateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.exception.WrongCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    static Task[] taskArray \u003d new Task[100];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static String format \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    static int count \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static int taskAdder(Task[] taskArray, int count){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + taskArray[count]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void parseInput(String[] userInput) throws EmptyDescriptionException, WrongCommandException,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            EmptyDateException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String mainTask \u003d userInput.length \u003d\u003d 2 ? userInput[1] : null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (userInput[0].equals(\"bye\")) { //EXITS PROGRAM"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else if (userInput[0].equals(\"list\")){ //LISTS ALL TASKS"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            int numberedPoint \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            for(int i \u003d 0; i \u003c count; i++){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                System.out.println(numberedPoint + \". \" + taskArray[i]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                numberedPoint++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else if (userInput[0].equals(\"done\")){ //COMPLETING A TASK"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            int doneItem \u003d Integer.parseInt(userInput[1]) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            taskArray[doneItem].isCompleted();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(taskArray[doneItem]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        else if (userInput[0].equals(\"todo\")){ //ADDING A TODO"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            if (mainTask \u003d\u003d null){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                throw new EmptyDescriptionException(userInput[0]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            taskArray[count] \u003d new ToDo (userInput[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            count \u003d taskAdder(taskArray, count);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        else if (userInput[0].equals(\"deadline\")){ //ADDING A DEADLINE"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            if (mainTask \u003d\u003d null){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                throw new EmptyDescriptionException(userInput[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            if (!mainTask.contains(\"/by\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                throw new EmptyDateException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String[] deadlineArray \u003d mainTask.trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            taskArray[count] \u003d new Deadline (deadlineArray[0], deadlineArray[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            count \u003d taskAdder(taskArray, count);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        else if (userInput[0].equals(\"event\")){ //ADDING AN EVENT"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            if (mainTask \u003d\u003d null){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                throw new EmptyDescriptionException(userInput[0]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            if (!mainTask.contains(\"/at\")){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                throw new EmptyDateException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String[] eventArray \u003d mainTask.trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            taskArray[count] \u003d new Event (eventArray[0], eventArray[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            count \u003d taskAdder(taskArray, count);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(format);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new WrongCommandException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(format);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Hey I\u0027m Butler!\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"How can I help you Monsieur/Madame?\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(format);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String[] stringArray;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            stringArray \u003d line.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                parseInput(stringArray);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } catch (EmptyDescriptionException e){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                e.displayException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } catch (WrongCommandException e){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                e.displayException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } catch (EmptyDateException e){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                e.displayException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } while (!stringArray[0].equals(\"bye\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengkianen": 117,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public abstract class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public abstract void displayException();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class EmptyDateException extends DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void displayException(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.format);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Sorry! There\u0027s no date set! Please set a date using \u0027/by\u0027 or \u0027/at\u0027!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.format);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class EmptyDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    protected String wrongAction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public EmptyDescriptionException(String wrongAction){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.wrongAction \u003d wrongAction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void displayException(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.format);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"The description of a \" + wrongAction + \" cannot be empty! Please try again!\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.format);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 20
    }
  },
  {
    "path": "src/main/java/duke/exception/WrongCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class WrongCommandException extends DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void displayException(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.format);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Sorry! This is an invalid command, Please try again!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"These are the available commands: \\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\" todo [todoName]\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\" deadline [deadlineName] /by [deadlineDate]\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\" event [eventName] /at [eventTime]\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\" list\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\" done [listNumber]\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\" bye\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.format);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return getTypeIcon() + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return getTypeIcon() + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void isCompleted(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[ ]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 29
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return getTypeIcon() + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "todo skip ropes"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 1
    }
  }
]
