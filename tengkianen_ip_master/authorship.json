[
  {
    "path": "saved_data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "[D]|true|proj | tmr"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "[T]|true|hw"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "[T]|true|help"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "[T]|true|handsome"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "[T]|true|chiobu"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    static ArrayList \u003cTask\u003e taskArrayList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static String FORMAT \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    //Adds a task to the arraylist"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void taskAdder(ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + taskArrayList.get(taskArrayList.size() - 1));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Now you have \" + taskArrayList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    //Removes particular task from arraylist"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void taskRemover(ArrayList\u003cTask\u003e taskArrayList, int index){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + taskArrayList.get(index));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskArrayList.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Now you have \" + taskArrayList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void taskLister(ArrayList\u003cTask\u003e taskArrayList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        int numberedPoint \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Messages.MESSAGE_LIST_TASKS);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        for(Task task : taskArrayList){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(numberedPoint + \". \" + task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            numberedPoint++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void taskFinisher(ArrayList\u003cTask\u003e taskArrayList, int doneItem) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskArrayList.get(doneItem).isCompleted();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Messages.MESSAGE_DONE_TASK);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(taskArrayList.get(doneItem));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void byeHandler() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Messages.MESSAGE_BYE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void helloHandler() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Messages.MESSAGE_HELLO);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(FORMAT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void doneHandler(ArrayList\u003cTask\u003e taskArrayList, String mainTask, String[] userInput)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throws EmptyDescriptionException, OutOfLimitException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (mainTask \u003d\u003d null){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new EmptyDescriptionException(userInput[0]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        int doneItem \u003d Integer.parseInt(userInput[1]) - 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (doneItem \u003e\u003d taskArrayList.size()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new OutOfLimitException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskFinisher(taskArrayList, doneItem);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            writeFile();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(Messages.MESSAGE_SAVE_ERROR);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void todoHandler(ArrayList\u003cTask\u003e taskArrayList, String mainTask, String[] userInput)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (mainTask \u003d\u003d null){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new EmptyDescriptionException(userInput[0]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskArrayList.add(new ToDo (userInput[1]));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskAdder(taskArrayList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            writeFile();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(Messages.MESSAGE_SAVE_ERROR);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(FORMAT);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void deadlineHandler(ArrayList\u003cTask\u003e taskArrayList, String mainTask, String[] userInput)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (mainTask \u003d\u003d null){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new EmptyDescriptionException(userInput[0]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (!mainTask.contains(\"/by\")){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new EmptyDateException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String[] deadlines \u003d mainTask.trim().split(\"/by\", 2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskArrayList.add(new Deadline(deadlines[0],deadlines[1]));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskAdder(taskArrayList);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            writeFile();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(Messages.MESSAGE_SAVE_ERROR);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(FORMAT);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void deleteHandler(ArrayList\u003cTask\u003e taskArrayList, String mainTask, String[] userInput)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throws EmptyDescriptionException, OutOfLimitException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (mainTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new EmptyDescriptionException(userInput[0]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        int doneItem \u003d Integer.parseInt(userInput[1]) - 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (doneItem \u003e\u003d taskArrayList.size()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new OutOfLimitException();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskRemover(taskArrayList, doneItem);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            writeFile();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(Messages.MESSAGE_SAVE_ERROR);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(FORMAT);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void eventHandler(ArrayList\u003cTask\u003e taskArrayList, String mainTask, String[] userInput)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throws EmptyDescriptionException, EmptyDateException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (mainTask \u003d\u003d null){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new EmptyDescriptionException(userInput[0]);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (!mainTask.contains(\"/at\")){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new EmptyDateException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String[] eventArray \u003d mainTask.trim().split(\"/at\", 2);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskArrayList.add(new Event (eventArray[0], eventArray[1]));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        taskAdder(taskArrayList);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            writeFile();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(Messages.MESSAGE_SAVE_ERROR);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(FORMAT);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void taskAssigner(String[] data) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        switch(data[0]) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        case \"[T]\":"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            isDone \u003d Boolean.parseBoolean(data[1]);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            description \u003d data[2];"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            taskArrayList.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        case \"[D]\":"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            isDone \u003d Boolean.parseBoolean(data[1]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String[] deadlineArray \u003d data[2].trim().split(\"\\\\|\", 2);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            description \u003d deadlineArray[0];"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String by \u003d deadlineArray[1];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            taskArrayList.add(new Deadline(description, by, isDone));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        case \"[E]\":"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            isDone \u003d Boolean.parseBoolean(data[1]);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String[] eventArray \u003d data[2].trim().split(\"\\\\|\", 2);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            description \u003d eventArray[0];"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String at \u003d eventArray[1];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            taskArrayList.add(new Event(description, at, isDone));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    //Parses input in order to process user command"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void parseInput(String[] userInput) throws EmptyDescriptionException, WrongCommandException,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            EmptyDateException, OutOfLimitException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String mainTask \u003d userInput.length \u003d\u003d 2 ? userInput[1] : null;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if (userInput[0].equals(BYE_COMMAND)) { //EXITS PROGRAM"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            byeHandler();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else if (userInput[0].equals(LIST_COMMAND)){ //LISTS ALL TASKS"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            taskLister(taskArrayList);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else if (userInput[0].equals(DONE_COMMAND)){ //COMPLETING A TASK"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            doneHandler(taskArrayList, mainTask, userInput);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else if (userInput[0].equals(TODO_COMMAND)){ //ADDING A TODO"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            todoHandler(taskArrayList, mainTask, userInput);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else if (userInput[0].equals(DEADLINE_COMMAND)){ //ADDING A DEADLINE"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            deadlineHandler(taskArrayList, mainTask, userInput);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else if (userInput[0].equals(EVENT_COMMAND)){ //ADDING AN EVENT"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            eventHandler(taskArrayList, mainTask, userInput);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else if (userInput[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            deleteHandler(taskArrayList, mainTask, userInput);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            throw new WrongCommandException();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    //Reads file and adds to the arraylist"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void readFile() throws DukeException, IOException {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String dataPath \u003d new File(\"saved_data\").getAbsolutePath();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        if(Files.exists(Path.of(dataPath))) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            File f \u003d new File (dataPath + \"/tasks.txt\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            while(sc.hasNext()) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                String partialString \u003d sc.nextLine();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                String[] data \u003d partialString.trim().split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                taskAssigner(data);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            File f \u003d new File (dataPath);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            boolean dirExists \u003d f.mkdir();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            if (dirExists) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                f \u003d new File (dataPath + \"/tasks.txt\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    //Writes file when called"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void writeFile() throws IOException, DukeException {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String dataPath \u003d new File(\"saved_data/tasks.txt\").getAbsolutePath();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        StringBuilder fullString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        for(Task task : taskArrayList) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                ToDo todo \u003d (ToDo) task;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                String todoString \u003d todo.getTypeIcon() + \"|\" + todo.isDone + \"|\""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                        + todo.description + System.lineSeparator();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                fullString.append(todoString);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                String eventString \u003d event.getTypeIcon() + \"|\" + event.isDone + \"|\""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                        + event.description + \"|\" + event.at + System.lineSeparator();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                fullString.append(eventString);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                String deadlineString \u003d deadline.getTypeIcon() + \"|\" + deadline.isDone + \"|\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                        + deadline.description + \"|\" + deadline.by + System.lineSeparator();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                fullString.append(deadlineString);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dataPath);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        fw.write(String.valueOf(fullString));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        helloHandler();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        String[] stringArray;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            readFile();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            System.out.println(Messages.MESSAGE_READ_ERROR);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            stringArray \u003d line.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                parseInput(stringArray);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                e.displayException();"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } catch (WrongCommandException e) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                e.displayException();"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } catch (EmptyDateException e) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                e.displayException();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            } catch (OutOfLimitException e) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "                e.displayException();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            "
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        } while (!stringArray[0].equals(BYE_COMMAND));"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "tengkianen": 304,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void displayException(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    };"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class EmptyDateException extends DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void displayException(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.FORMAT);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"Sorry! There\u0027s no date set! Please set a date using \u0027/by\u0027 or \u0027/at\u0027!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.FORMAT);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class EmptyDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    protected String wrongAction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public EmptyDescriptionException(String wrongAction){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.wrongAction \u003d wrongAction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void displayException(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.FORMAT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(\"The description of a \" + \"\u0027\" + wrongAction + \"\u0027\" + \" cannot be empty! Please try again!\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.FORMAT);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 20
    }
  },
  {
    "path": "src/main/java/duke/exception/OutOfLimitException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class OutOfLimitException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void displayException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.FORMAT);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Messages.MESSAGE_INDEX_ERROR);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.FORMAT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/WrongCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class WrongCommandException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void displayException(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.FORMAT);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Messages.MESSAGE_COMMAND_ERROR);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        System.out.println(Duke.FORMAT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 14
    }
  },
  {
    "path": "src/main/java/duke/messages/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static final String MESSAGE_LIST_TASKS \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static final String MESSAGE_DONE_TASK \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static final String MESSAGE_SAVE_ERROR \u003d \"There was a problem saving your task! Please try again!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static final String MESSAGE_HELLO \u003d \"Hey I\u0027m Butler!\\nHow can I help you Monsieur/Madame?\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static final String MESSAGE_READ_ERROR \u003d \"There was an error reading saved data!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static final String MESSAGE_COMMAND_ERROR \u003d \"Sorry! This is an invalid command, Please try again!\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            \"These are the available commands: \\n- todo [todoName]\\n- deadline [deadlineName] /by [deadlineDate]\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "            \"- event [eventName] /at [eventTime]\\n- list\\n- done [listNumber]\\n- bye\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public static final String MESSAGE_INDEX_ERROR \u003d \"Index out of range!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Deadline(String description, String by, boolean isDone){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return getTypeIcon() + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Event(String description, String at, boolean isDone){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return getTypeIcon() + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public Task(String description, boolean isDone){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public void isCompleted(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[ ]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 34
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String getTypeIcon(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tengkianen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "        return getTypeIcon() + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tengkianen"
        },
        "content": "todo skip ropes"
      }
    ],
    "authorContributionMap": {
      "tengkianen": 1
    }
  }
]
