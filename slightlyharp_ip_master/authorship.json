[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "T|false|lalala"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.Deadlines;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.EmptyTaskException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.Events;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.ToDos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String greeting \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String bye \u003d \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String command \u003d \"null\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        String spaces \u003d \"    \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        FileClass file \u003d new FileClass(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(line + bye);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            } else if(command.equals(\"list\")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.print(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(spaces + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                for(int i \u003d 0; i\u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.print(\"    \" + (i+1) + \".\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    taskList.get(i).printTask();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            } else if(command.contains(\"done\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                taskIndex--;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                taskList.get(taskIndex).markDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    fw.write(\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                } catch (IOException e){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println(\"Something went wrong\" + e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                for(Task task: taskList){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    file.writeFile(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(line + \"    Nice! I\u0027ve marked this task as done:\\n    \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        + taskList.get(taskIndex).getStatusIcon() + taskList.get(taskIndex).task );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            } else if(command.contains(\"todo\")|| command.contains(\"deadline\")|| command.contains(\"event\")){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        taskList.add(new ToDos(command));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        taskList.add(new Deadlines(command));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        taskList.add(new Events(command));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    file.writeFile(taskList.get(taskList.size()-1));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println(line + spaces + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.print(spaces + spaces);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    taskList.get(taskList.size()-1).printTask();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println(\"\\n\" + spaces + \"Now you have \" + taskList.size()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            + \" tasks in the list.\\n\" + line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println(line + spaces + \"☹ OOPS!!! The description do not fulfil the specific task requirement.\\n\" + line);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                catch (EmptyTaskException e){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println(line + spaces + \"☹ OOPS!!! The description of a \" + e.taskType + \" cannot be empty.\\n\" + line);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            } else if(command.contains(\"delete\")){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                taskIndex--;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.print(line + \"    Noted. I\u0027ve removed this task:\\n    \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                taskList.get(taskIndex).printTask();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(\"\\n    Now you have \" + (taskList.size()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(line + spaces + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 94,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Deadlines(String command) throws EmptyTaskException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super(getTask(command), TaskType.D);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.deadline \u003d getDeadline(command);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Deadlines(boolean isDone, String task, String deadline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super(task,TaskType.D, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static String getTask(String command) throws EmptyTaskException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        if(((command.replace(\"deadline\", \"\")).replace(\" \", \"\")).isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            throw new EmptyTaskException(\"deadline\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            int slashIndex \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            return command.substring(spaceIndex + 1, slashIndex - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static String getDeadline(String command){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int byIndex \u003d command.indexOf(\"/by\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return command.substring(byIndex + 4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super.printTask();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        System.out.print(\" (by: \" + deadline + \")\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 42
    }
  },
  {
    "path": "src/main/java/Duke/task/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class EmptyTaskException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    EmptyTaskException(String taskType){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 10
    }
  },
  {
    "path": "src/main/java/Duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Events(String command) throws EmptyTaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super(getTask(command), TaskType.E);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        time \u003d getTime(command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Events(Boolean isDone, String task, String time){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super(task, TaskType.E, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static String getTask(String command) throws EmptyTaskException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        if ((( command.replace(\"event\", \"\")).replace(\" \", \"\")).isEmpty()){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            throw new EmptyTaskException(\"event\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            int slashIndex \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            return command.substring(spaceIndex + 1, slashIndex - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static String getTime(String command){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        int atIndex \u003d command.indexOf(\"/at\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return command.substring(atIndex + 4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super.printTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        System.out.print(\" (at: \" + time + \")\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 42
    }
  },
  {
    "path": "src/main/java/Duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public TaskType taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Task(String task, TaskType taskType){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public Task(String task, TaskType taskType, boolean isDone){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return (isDone? \"[\\u2713] \" : \"[\\u2718] \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void printTask(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        System.out.print(\"[\" + taskType + \"]\" + getStatusIcon() + task );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public abstract String getTime();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 36
    }
  },
  {
    "path": "src/main/java/Duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    T,D,E"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 5
    }
  },
  {
    "path": "src/main/java/Duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.EmptyTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public ToDos(String command) throws EmptyTaskException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super(getTask(command), TaskType.T);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public ToDos(boolean isDone, String task){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        super(task, TaskType.T, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static String getTask(String command) throws EmptyTaskException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        if ((( command.replace(\"todo\", \"\")).replace(\" \", \"\")).isEmpty()){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            throw new EmptyTaskException(\"todo\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            int spaceIndex \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            return command.substring(spaceIndex + 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 30
    }
  },
  {
    "path": "src/main/java/FileClass.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.Deadlines;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.Events;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.ToDos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "public class FileClass {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public static File tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public FileClass(String filePath){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        tasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        checkFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void checkFile(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            if(tasks.createNewFile()){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                System.out.println(\"New file created for task list\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                loadFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }catch (IOException e){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(\"An error occurred: \" + e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void loadFile(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            Scanner s \u003d new Scanner(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            while (s.hasNext()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                String command \u003d s.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                String[] words \u003d command.split(\"\\\\|\",-1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                switch (words[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    Duke.taskList.add(new ToDos(Boolean.parseBoolean(words[1]),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            words[2]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    Duke.taskList.add(new Deadlines(Boolean.parseBoolean(words[1]),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            words[2], words[3]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    Duke.taskList.add(new Events(Boolean.parseBoolean(words[1]),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                            words[2], words[3]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    System.out.println(\"OOPS something wrong with the data file\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    public void writeFile(Task task){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/tasks.txt\", true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            if(task.taskType.equals(TaskType.T)){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                fw.write(\"T|\" + task.isDone + \"|\" + task.task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        + System.lineSeparator());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }else if(task.taskType.equals(TaskType.D)){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                fw.write(\"D|\" + task.isDone + \"|\" + task.task + \"|\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        + task.getTime()+ System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }else if(task.taskType.equals(TaskType.E)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                fw.write(\"E|\" + task.isDone + \"|\" + task.task + \"|\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "                        + task.getTime()+ System.lineSeparator());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "            System.out.println(\"Something went wrong\" + e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 83
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "slightlyharp"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "slightlyharp": 1,
      "-": 20
    }
  }
]
