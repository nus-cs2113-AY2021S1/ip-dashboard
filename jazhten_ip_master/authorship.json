[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by +\")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(\"Hello there General Kenobi! I am\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(\"How may I be at your pleasure today?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        Task[] storedTasks \u003d new Task[100];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        int tasksIndex \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            if(input.equals(\"list\")){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                StringOperations.printList(storedTasks,tasksIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                System.out.println(\"Bye. May the Force be with you.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            else if (splitInput[0].equals(\"done\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                int taskNum \u003d Integer.parseInt(splitInput[1])-1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                storedTasks[taskNum].completeTask();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                StringOperations.completeTask(storedTasks,taskNum);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            else if (splitInput[0].equals(\"todo\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                String description \u003d input.substring(StringOperations.getFirstSpace(input));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                storedTasks[tasksIndex] \u003d new Todo(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                StringOperations.printAddResponse(storedTasks[tasksIndex], tasksIndex+1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                tasksIndex +\u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            else if (splitInput[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                storedTasks[tasksIndex] \u003d new Deadline(StringOperations.getDescription(input),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                        StringOperations.getDeadline(input));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                StringOperations.printAddResponse(storedTasks[tasksIndex], tasksIndex+1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                tasksIndex +\u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            else if (splitInput[0].equals(\"event\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                storedTasks[tasksIndex] \u003d new Event(StringOperations.getDescription(input),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                        StringOperations.getDeadline(input));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                StringOperations.printAddResponse(storedTasks[tasksIndex], tasksIndex+1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                tasksIndex +\u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                storedTasks[tasksIndex] \u003d new Task(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                System.out.println(\"\\t\" + \"added: \" + input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jazhten"
        },
        "content": "                tasksIndex +\u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 47,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    String timeFrame;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Event(String description, String timeFrame) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.timeFrame \u003d timeFrame;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeFrame +\")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 12
    }
  },
  {
    "path": "src/main/java/StringOperations.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class StringOperations {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static int getFirstSpace(String input){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return input.indexOf(\" \");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static void printAddResponse(Task task, int index){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(\"\\tNow you have \" + index + \" tasks in the list\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static void printList(Task[] tasks,int taskIndex){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        for(int i\u003d0;i\u003ctaskIndex;i++){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "            System.out.println(\"\\t\"+(i+1) +\". \"+ tasks[i].toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static void completeTask(Task[] tasks,int taskIndex){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        System.out.println(\"\\t  \" + tasks[taskIndex].toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static String getDescription(String input){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        int startPoint \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return input.substring(getFirstSpace(input),startPoint);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public static String getDeadline(String input){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        int startPoint \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        String fullDeadline \u003d  input.substring(startPoint);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        fullDeadline \u003d  fullDeadline.replace(\"/at \",\"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        fullDeadline \u003d fullDeadline.replace(\"/by \",\"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return fullDeadline;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 36
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    private final String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.taskName \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public void completeTask(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jazhten"
        },
        "content": "/*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String getTaskName(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String getTaskInfo(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return ((isDone ? \"[\\u2713] \" : \"[\\u2718] \") + taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return ((isDone ? \"[\\u2713] \" : \"[\\u2718] \") + taskName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 25
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jazhten": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jazhten"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jazhten"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jazhten"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jazhten"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jazhten"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jazhten"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jazhten"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jazhten"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jazhten"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jazhten"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jazhten"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jazhten": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jazhten"
        },
        "content": "if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jazhten": 1,
      "-": 37
    }
  }
]
