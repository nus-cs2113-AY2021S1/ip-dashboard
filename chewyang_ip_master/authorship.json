[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "T | 0 | borrow book"
      }
    ],
    "authorContributionMap": {
      "chewyang": 1
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static String indent \u003d \"          \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static Deadline addDeadline(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String description \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            command.substring(0, command.indexOf(\" \"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Deadline field cannot be empty!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //obtains description of deadline task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            description \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\" /by\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }catch (StringIndexOutOfBoundsException e ) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Missing \u0027/by\u0027 keyword!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //obtains the deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String deadline \u003d command.substring(command.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return new Deadline(description, deadline, false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Missing deadline!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static Event addEvent(String command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String description\u003dnull;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            command.substring(0, command.indexOf(\" \"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Event field cannot be empty!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //obtains description of timed task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            description \u003d command.substring(command.indexOf(\" \") + 1, command.indexOf(\" /at\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Missing \u0027/at\u0027 keyword!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //obtains the time string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String time \u003d command.substring(command.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return new Event(description, time, false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Missing time!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static Task addTodo(String command) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            command.substring(0,command.indexOf(\" \"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String description \u003d command.substring(command.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return new Todo(description, false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Todo field cannot be empty!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static String getFirstCmd(String command){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            return command.split(\" \")[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void printLn(String string) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.println(indent+ string);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 89
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected static String indent \u003d \"          \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static int taskCounter\u003d0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static String folderDir \u003d \"data\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static String fileDir \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        createFileHierarchy(folderDir, fileDir);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printStartMsg();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String firstCmd\u003d\"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String command \u003d input.nextLine().trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            firstCmd \u003d Command.getFirstCmd(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            switch (firstCmd) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case (\"bye\"):"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                printByeMsg();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case (\"list\"):"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                printList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case (\"done\"):"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                checkValidIndex(command.substring(command.indexOf(\" \") + 1),\"done\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                updateFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                task \u003d Command.addTodo(command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                task \u003d Command.addDeadline(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                task \u003d Command.addEvent(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case (\"delete\"):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                checkValidIndex(command.substring(command.indexOf(\" \") + 1), \"delete\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                updateFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                printLn(\"invalid command!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            if(task!\u003dnull){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                addNewTask(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                appendToFile(\"data/tasks.txt\",task.toStringFile());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                task\u003dnull;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //exits program"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            if(firstCmd.equals(\"bye\"))break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        fw.write(textToAppend+ System.lineSeparator());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static void processFile(String filePath) throws IOException, FileNotFoundException{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            //System.out.println(s.nextLine());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String words[] \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            String firstCommand\u003d words[0];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            isDone\u003d words[1].equals(\"1\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            switch(firstCommand){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                task \u003d new Todo(words[2],true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                task \u003d new Deadline(words[2],words[3], true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                task \u003d new Event(words[2],words[3], true);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            if(task!\u003dnull) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                task.isDone\u003disDone;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                addNewTask(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void addNewTask(Task task) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        taskCounter++;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    private static void updateFile() throws IOException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        writeToFile(fileDir, \"\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if(taskCounter \u003e0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            for (int i \u003d 0; i \u003c taskCounter; i++) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                appendToFile(fileDir, tasks.get(i).toStringFile());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void createFileHierarchy(String folderPath, String filePath) throws IOException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        File folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if(folder.exists()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            if(file.exists()){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                processFile(filePath);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            folder.mkdir();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if(taskCounter \u003e0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            for (int i \u003d 0; i \u003c taskCounter; i++) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                printLn((i + 1) +\".\"+ tasks.get(i).toString());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"Nothing added!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void printStartMsg() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String logo \u003d indent + \"    .___     __\\n\" +"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                indent + \"  __| _/_ __|  | __ ____\\n\" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                indent + \" / __ |  |  \\\\  |/ // __ \\\\\\n\" +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                indent + \"/ /_/ |  |  /    \u003c\\\\  ___/\\n\" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                indent + \"\\\\____ |____/|__|_ \\\\\\\\___  \u003e\\n\" +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                indent + \"     \\\\/          \\\\/    \\\\/\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printLn(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printLn(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                indent + \"What can I do for you?\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void checkValidIndex(String word, String command) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                String message \u003d null;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                String description \u003dnull;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            int listNum \u003d Integer.parseInt(word);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                if (listNum \u003c\u003d taskCounter \u0026\u0026 listNum \u003e 0) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    switch (command) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        tasks.get(listNum - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        message \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        description \u003d  tasks.get(listNum - 1).toString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        Task.taskCounter--;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        taskCounter--;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        description \u003d tasks.get(listNum - 1).toString() + \"\\n\" + indent +"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                                \"Now you have \" + taskCounter + \" tasks in the list.\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        tasks.remove(listNum - 1);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        message \u003d \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    printDivider();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    printLn(message);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    printLn(description);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                    printDivider();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                printLn(\"invalid index!\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printLn(\"invalid index!\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void printByeMsg() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printLn(\"Bye, see you again!\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void printDivider() {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.println(indent+\"____________________________________________________________\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static void printLn(String string) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.println(indent+ string);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chewyang": 240
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Deadline(String description, String deadline, boolean isFromFile) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.deadline\u003ddeadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if(!isFromFile) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printDeadlineMsg(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (\"[D]\"+\"[\"+ this.getStatusIcon()+ \"] \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + this.description+\" (by: \"+this.deadline+\")\" );"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toStringFile(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int isDoneInt \u003d isDone? 1:0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (\"D | \"+ isDoneInt + \" | \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + this.description +\" | \"+this.deadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void printDeadlineMsg(String deadline) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String echo_msg \u003d\"          ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          Got it. I\u0027ve added this task:\\n\"+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          \"+toString()+\"\\n\"+"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          Now you have \"+ taskCounter +\" in the list.\\n\"+"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          ____________________________________________________________\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.println(echo_msg);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Event(String description, String time, boolean isFromFile) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.time \u003dtime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if(!isFromFile) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printEventMsg(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (\"[E]\"+\"[\"+ this.getStatusIcon()+ \"] \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + this.description+\" (at: \"+this.time +\")\" );"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toStringFile(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int isDoneInt \u003d isDone? 1:0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (\"E | \"+ isDoneInt + \" | \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + this.description +\" | \"+this.time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void printEventMsg(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String echo_msg \u003d\"          ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          Got it. I\u0027ve added this task:\\n\"+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          \"+ toString()+\"\\n\"+"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          Now you have \"+ taskCounter +\" in the list.\\n\"+"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          ____________________________________________________________\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.println(echo_msg);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public static int taskCounter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        taskCounter++;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (\"[\"+ this.getStatusIcon()+ \"] \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + this.description );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toStringFile(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public Todo(String description, boolean isFromFile) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        if(!isFromFile) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "            printTodoMsg(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (\"[T]\"+\"[\"+ this.getStatusIcon()+ \"] \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + this.description );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public String toStringFile(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        int isDoneInt \u003d isDone? 1:0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        return (\"T | \"+ isDoneInt + \" | \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                + this.description );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chewyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    public void printTodoMsg(String description) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        String echo_msg \u003d\"          ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          Got it. I\u0027ve added this task:\\n\"+"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          \"+toString()+\"\\n\"+"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          Now you have \"+ taskCounter +\" in the list.\\n\"+"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chewyang"
        },
        "content": "                \"          ____________________________________________________________\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chewyang"
        },
        "content": "        System.out.println(echo_msg);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chewyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chewyang": 33
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": "D | 0 | return book | Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "E | 0 | project meeting | Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "D | 0 | return book | Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "E | 0 | project meeting | Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "D | 0 | return book | Sunday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "E | 0 | project meeting | Mon 2-4pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "T | 0 | borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "D | 0 | return book | Sunday"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "E | 0 | project meeting | Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "chewyang": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chewyang"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chewyang"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chewyang"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chewyang"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chewyang"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chewyang"
        },
        "content": "deadline homework"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chewyang"
        },
        "content": "deadline homework /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chewyang"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chewyang"
        },
        "content": "event party"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "event party /at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chewyang"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "chewyang": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chewyang"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chewyang"
        },
        "content": "    echo **** BUILD FAILURE ****"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chewyang"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chewyang": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chewyang"
        },
        "content": "if ! javac -cp ../src/main/java/ip/ipclasses -Xlint:none -d ../bin ../src/main/java/ip/ipclasses/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chewyang"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chewyang": 2,
      "-": 32
    }
  }
]
